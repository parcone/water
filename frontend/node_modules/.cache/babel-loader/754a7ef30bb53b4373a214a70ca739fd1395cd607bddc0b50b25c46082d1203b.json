{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"analysis-view\"\n};\nconst _hoisted_2 = {\n  class: \"chart-section\"\n};\nconst _hoisted_3 = {\n  ref: \"chartRef\",\n  style: {\n    \"height\": \"300px\",\n    \"width\": \"100%\"\n  }\n};\nconst _hoisted_4 = {\n  class: \"tif-preview-section\"\n};\nconst _hoisted_5 = {\n  class: \"tif-preview-grid\"\n};\nconst _hoisted_6 = {\n  class: \"tif-caption\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_card = _resolveComponent(\"el-card\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[1] || (_cache[1] = _createElementVNode(\"h2\", null, \"智能监测\", -1 /* CACHED */)), _cache[2] || (_cache[2] = _createElementVNode(\"div\", {\n    class: \"stats-cards\"\n  }, [_createElementVNode(\"div\", {\n    class: \"stat-card\"\n  }, [_createTextVNode(\"今日监测数据：\"), _createElementVNode(\"span\", null, \"256\")]), _createElementVNode(\"div\", {\n    class: \"stat-card\"\n  }, [_createTextVNode(\"异常数据：\"), _createElementVNode(\"span\", null, \"5\")]), _createElementVNode(\"div\", {\n    class: \"stat-card\"\n  }, [_createTextVNode(\"监测点总数：\"), _createElementVNode(\"span\", null, \"32\")])], -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_el_card, {\n    style: {\n      \"margin-bottom\": \"20px\"\n    }\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_3, null, 512 /* NEED_PATCH */)]),\n    _: 1 /* STABLE */\n  })]), _createVNode(_component_el_table, {\n    data: $setup.monitorList,\n    style: {\n      \"width\": \"100%\"\n    }\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_table_column, {\n      prop: \"name\",\n      label: \"监测点\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"type\",\n      label: \"类型\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"value\",\n      label: \"最新数据\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"status\",\n      label: \"状态\"\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"data\"]), _createElementVNode(\"div\", _hoisted_4, [_cache[0] || (_cache[0] = _createElementVNode(\"h3\", null, \"最新12张遥感影像预览（.tif）\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.tifFiles, (tif, idx) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: tif.name,\n      class: \"tif-preview-item\"\n    }, [_createElementVNode(\"canvas\", {\n      ref_for: true,\n      ref: el => $setup.tifCanvases[idx] = el,\n      width: \"160\",\n      height: \"120\"\n    }, null, 512 /* NEED_PATCH */), _createElementVNode(\"div\", _hoisted_6, _toDisplayString(tif.name), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","ref","style","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_el_card","_hoisted_3","_component_el_table","data","$setup","monitorList","_component_el_table_column","prop","label","_hoisted_4","_hoisted_5","_Fragment","_renderList","tifFiles","tif","idx","key","name","el","tifCanvases","width","height","_hoisted_6","_toDisplayString"],"sources":["D:\\restore\\water-melt\\frontend\\src\\views\\Analysis.vue"],"sourcesContent":["<template>\r\n  <div class=\"analysis-view\">\r\n    <h2>智能监测</h2>\r\n    <div class=\"stats-cards\">\r\n      <div class=\"stat-card\">今日监测数据：<span>256</span></div>\r\n      <div class=\"stat-card\">异常数据：<span>5</span></div>\r\n      <div class=\"stat-card\">监测点总数：<span>32</span></div>\r\n    </div>\r\n    <div class=\"chart-section\">\r\n      <el-card style=\"margin-bottom: 20px;\">\r\n        <div ref=\"chartRef\" style=\"height:300px;width:100%\"></div>\r\n      </el-card>\r\n    </div>\r\n    <el-table :data=\"monitorList\" style=\"width: 100%;\">\r\n      <el-table-column prop=\"name\" label=\"监测点\" />\r\n      <el-table-column prop=\"type\" label=\"类型\" />\r\n      <el-table-column prop=\"value\" label=\"最新数据\" />\r\n      <el-table-column prop=\"status\" label=\"状态\" />\r\n    </el-table>\r\n    <div class=\"tif-preview-section\">\r\n      <h3>最新12张遥感影像预览（.tif）</h3>\r\n      <div class=\"tif-preview-grid\">\r\n        <div v-for=\"(tif, idx) in tifFiles\" :key=\"tif.name\" class=\"tif-preview-item\">\r\n          <canvas :ref=\"el => tifCanvases[idx] = el\" width=\"160\" height=\"120\"></canvas>\r\n          <div class=\"tif-caption\">{{ tif.name }}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue'\r\nimport * as echarts from 'echarts'\r\nconst monitorList = ref([\r\n  { name: '点A', type: '温度', value: '23.5°C', status: '正常' },\r\n  { name: '点B', type: '湿度', value: '60%', status: '正常' },\r\n  { name: '点C', type: 'PH值', value: '7.1', status: '异常' },\r\n  { name: '点D', type: '重金属', value: '0.03mg/L', status: '正常' }\r\n])\r\nconst chartRef = ref(null)\r\n// 最新12张tif文件路径\r\nconst tifFiles = Array.from({length: 12}, (_, i) => {\r\n  const year = 2075\r\n  const mm = String(12 - i).padStart(2, '0')\r\n  const name = `SSM_${year}${mm}01.tif`\r\n  const url = `/assets/photos/photos1/${year}/${mm}/${name}`\r\n  return { name, url }\r\n})\r\nconst tifCanvases = []\r\n\r\nonMounted(() => {\r\n  const chart = echarts.init(chartRef.value)\r\n  chart.setOption({\r\n    title: { text: '近7天监测数据', left: 'center', textStyle: { color: '#fff' } },\r\n    tooltip: {},\r\n    xAxis: { data: ['周一','周二','周三','周四','周五','周六','周日'], axisLabel: { color: '#fff' } },\r\n    yAxis: { axisLabel: { color: '#fff' } },\r\n    series: [{ type: 'line', data: [23, 25, 22, 24, 26, 27, 25] }],\r\n    backgroundColor: 'rgba(0,0,0,0)',\r\n    grid: { left: 40, right: 20, top: 60, bottom: 40 }\r\n  })\r\n})\r\n\r\nonMounted(async () => {\r\n  // 动态加载 geotiff.js\r\n  if (!window.GeoTIFF) {\r\n    await loadGeoTIFF()\r\n  }\r\n  for (let i = 0; i < tifFiles.length; i++) {\r\n    renderTifToCanvas(tifFiles[i].url, tifCanvases[i])\r\n  }\r\n})\r\n\r\nfunction loadGeoTIFF() {\r\n  return new Promise((resolve, reject) => {\r\n    const script = document.createElement('script')\r\n    script.src = '/libs/geotiff.browser.min.js' // 本地路径\r\n    script.onload = resolve\r\n    script.onerror = reject\r\n    document.head.appendChild(script)\r\n  })\r\n}\r\n\r\nasync function renderTifToCanvas(url, canvas) {\r\n  if (!canvas || !window.GeoTIFF) return\r\n  try {\r\n    const response = await fetch(url)\r\n    const arrayBuffer = await response.arrayBuffer()\r\n    const tiff = await window.GeoTIFF.fromArrayBuffer(arrayBuffer)\r\n    const image = await tiff.getImage()\r\n    const width = image.getWidth()\r\n    const height = image.getHeight()\r\n    const raster = await image.readRasters({ interleave: true })\r\n    // 灰度或单波段\r\n    let data\r\n    if (raster.length === width * height) {\r\n      data = new Uint8ClampedArray(width * height * 4)\r\n      for (let i = 0; i < width * height; i++) {\r\n        const v = raster[i]\r\n        data[i * 4 + 0] = v\r\n        data[i * 4 + 1] = v\r\n        data[i * 4 + 2] = v\r\n        data[i * 4 + 3] = 255\r\n      }\r\n    } else {\r\n      // 多波段（假设RGB）\r\n      data = new Uint8ClampedArray(width * height * 4)\r\n      for (let i = 0; i < width * height; i++) {\r\n        data[i * 4 + 0] = raster[i * 3 + 0] || 0\r\n        data[i * 4 + 1] = raster[i * 3 + 1] || 0\r\n        data[i * 4 + 2] = raster[i * 3 + 2] || 0\r\n        data[i * 4 + 3] = 255\r\n      }\r\n    }\r\n    const ctx = canvas.getContext('2d')\r\n    const imgData = new ImageData(data, width, height)\r\n    // 缩放到canvas\r\n    const tmpCanvas = document.createElement('canvas')\r\n    tmpCanvas.width = width\r\n    tmpCanvas.height = height\r\n    tmpCanvas.getContext('2d').putImageData(imgData, 0, 0)\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height)\r\n    ctx.drawImage(tmpCanvas, 0, 0, canvas.width, canvas.height)\r\n  } catch (e) {\r\n    console.error('tif渲染失败', url, e)\r\n    if (canvas) {\r\n      const ctx = canvas.getContext('2d')\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height)\r\n      ctx.fillStyle = '#333'\r\n      ctx.fillRect(0, 0, canvas.width, canvas.height)\r\n      ctx.fillStyle = '#fff'\r\n      ctx.font = '12px sans-serif'\r\n      ctx.fillText('加载失败', 10, 60)\r\n      ctx.fillText(e?.message || e, 10, 80)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.analysis-view {\r\n  color: #fff;\r\n}\r\n.stats-cards {\r\n  display: flex;\r\n  gap: 20px;\r\n  margin-bottom: 20px;\r\n}\r\n.stat-card {\r\n  background: #002140;\r\n  padding: 12px 24px;\r\n  border-radius: 6px;\r\n  font-size: 16px;\r\n}\r\n.chart-section {\r\n  margin-bottom: 20px;\r\n}\r\n.tif-preview-section {\r\n  margin-top: 40px;\r\n  background: #001529;\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n}\r\n.tif-preview-grid {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 20px;\r\n  margin-top: 16px;\r\n}\r\n.tif-preview-item {\r\n  width: 180px;\r\n  text-align: center;\r\n}\r\n.tif-caption {\r\n  margin-top: 8px;\r\n  font-size: 13px;\r\n  color: #fff;\r\n}\r\n</style> "],"mappings":";;EACOA,KAAK,EAAC;AAAe;;EAOnBA,KAAK,EAAC;AAAe;;EAEjBC,GAAG,EAAC,UAAU;EAACC,KAA+B,EAA/B;IAAA;IAAA;EAAA;;;EASnBF,KAAK,EAAC;AAAqB;;EAEzBA,KAAK,EAAC;AAAkB;;EAGpBA,KAAK,EAAC;AAAa;;;;;uBAvBhCG,mBAAA,CA2BM,OA3BNC,UA2BM,G,0BA1BJC,mBAAA,CAAa,YAAT,MAAI,qB,0BACRA,mBAAA,CAIM;IAJDL,KAAK,EAAC;EAAa,IACtBK,mBAAA,CAAoD;IAA/CL,KAAK,EAAC;EAAW,I,iBAAC,SAAO,GAAAK,mBAAA,CAAgB,cAAV,KAAG,E,GACvCA,mBAAA,CAAgD;IAA3CL,KAAK,EAAC;EAAW,I,iBAAC,OAAK,GAAAK,mBAAA,CAAc,cAAR,GAAC,E,GACnCA,mBAAA,CAAkD;IAA7CL,KAAK,EAAC;EAAW,I,iBAAC,QAAM,GAAAK,mBAAA,CAAe,cAAT,IAAE,E,uBAEvCA,mBAAA,CAIM,OAJNC,UAIM,GAHJC,YAAA,CAEUC,kBAAA;IAFDN,KAA4B,EAA5B;MAAA;IAAA;EAA4B;sBACnC,MAA0D,CAA1DG,mBAAA,CAA0D,OAA1DI,UAA0D,8B;;QAG9DF,YAAA,CAKWG,mBAAA;IALAC,IAAI,EAAEC,MAAA,CAAAC,WAAW;IAAEX,KAAoB,EAApB;MAAA;IAAA;;sBAC5B,MAA2C,CAA3CK,YAAA,CAA2CO,0BAAA;MAA1BC,IAAI,EAAC,MAAM;MAACC,KAAK,EAAC;QACnCT,YAAA,CAA0CO,0BAAA;MAAzBC,IAAI,EAAC,MAAM;MAACC,KAAK,EAAC;QACnCT,YAAA,CAA6CO,0BAAA;MAA5BC,IAAI,EAAC,OAAO;MAACC,KAAK,EAAC;QACpCT,YAAA,CAA4CO,0BAAA;MAA3BC,IAAI,EAAC,QAAQ;MAACC,KAAK,EAAC;;;+BAEvCX,mBAAA,CAQM,OARNY,UAQM,G,0BAPJZ,mBAAA,CAA0B,YAAtB,mBAAiB,qBACrBA,mBAAA,CAKM,OALNa,UAKM,I,kBAJJf,mBAAA,CAGMgB,SAAA,QAAAC,WAAA,CAHoBR,MAAA,CAAAS,QAAQ,GAArBC,GAAG,EAAEC,GAAG;yBAArBpB,mBAAA,CAGM;MAH+BqB,GAAG,EAAEF,GAAG,CAACG,IAAI;MAAEzB,KAAK,EAAC;QACxDK,mBAAA,CAA6E;;MAApEJ,GAAG,EAAEyB,EAAE,IAAId,MAAA,CAAAe,WAAW,CAACJ,GAAG,IAAIG,EAAE;MAAEE,KAAK,EAAC,KAAK;MAACC,MAAM,EAAC;oCAC9DxB,mBAAA,CAA6C,OAA7CyB,UAA6C,EAAAC,gBAAA,CAAjBT,GAAG,CAACG,IAAI,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}