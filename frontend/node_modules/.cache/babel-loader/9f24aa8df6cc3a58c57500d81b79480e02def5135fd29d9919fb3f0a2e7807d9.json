{"ast":null,"code":"import BaseEChart from '@/components/BaseEChart.vue';\nimport DataCard from '@/components/DataCard.vue';\nimport { ref, onMounted, onBeforeUnmount } from 'vue';\nimport * as echarts from 'echarts';\nimport chinaMapData from '@/assets/china.json';\nimport { Clock, Sunny, Warning } from '@element-plus/icons-vue';\n\n// 地图视图切换\n\nexport default {\n  __name: 'SystemOverview',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const mapView = ref('distribution');\n\n    // 监测站选择\n    const selectedStation = ref('station1');\n    const stations = [{\n      label: '监测站 A',\n      value: 'station1'\n    }, {\n      label: '监测站 B',\n      value: 'station2'\n    }, {\n      label: '监测站 C',\n      value: 'station3'\n    }];\n\n    // 实时监测数据\n    const realtimeData = [{\n      label: '土壤温度',\n      value: '23.5°C',\n      icon: 'Thermometer'\n    }, {\n      label: '土壤湿度',\n      value: '65%',\n      icon: 'WaterMeter'\n    }, {\n      label: 'pH值',\n      value: '7.2',\n      icon: 'Monitor'\n    }, {\n      label: '氮含量',\n      value: '1.8%',\n      icon: 'Histogram'\n    }, {\n      label: '磷含量',\n      value: '0.5%',\n      icon: 'TrendCharts'\n    }, {\n      label: '钾含量',\n      value: '2.1%',\n      icon: 'PieChart'\n    }];\n\n    // 进度条颜色\n    const customColors = [{\n      color: '#1890ff',\n      percentage: 20\n    }, {\n      color: '#52c41a',\n      percentage: 40\n    }, {\n      color: '#faad14',\n      percentage: 60\n    }, {\n      color: '#ff4d4f',\n      percentage: 80\n    }];\n    echarts.registerMap('china', chinaMapData);\n    const selectedYear = ref('2024');\n    const years = ['2024', '2023', '2022', '2021'];\n    const currentTime = ref(new Date().toLocaleString());\n    const timer = ref(null);\n    const currentImage = ref({\n      id: '167599247012556843',\n      satellite: 'LANDSAT 8',\n      longitude: '107.50233-110.08263',\n      latitude: '33.50790-35.69403'\n    });\n    const statisticsData = ref({\n      totalPoints: 2547,\n      todayNewData: 156,\n      abnormalPoints: 18,\n      severeAreas: 3\n    });\n    const alerts = ref([{\n      title: '监测点A12水质超标',\n      time: '10分钟前',\n      location: '西区-A12',\n      level: 'severe'\n    }, {\n      title: '监测点B23土壤重金属含量异常',\n      time: '30分钟前',\n      location: '东区-B23',\n      level: 'moderate'\n    }, {\n      title: '监测点C45数据传输异常',\n      time: '1小时前',\n      location: '南区-C45',\n      level: 'light'\n    }]);\n\n    // 中国地图配置\n    const mapOptions = ref({\n      backgroundColor: 'transparent',\n      tooltip: {\n        trigger: 'item',\n        formatter: params => {\n          return `${params.name}<br/>监测点数量：${params.value || 0}<br/>覆盖率：${((params.value || 0) / 200 * 100).toFixed(1)}%`;\n        },\n        backgroundColor: 'rgba(0, 21, 41, 0.9)',\n        borderColor: '#1890ff',\n        textStyle: {\n          color: '#fff'\n        }\n      },\n      visualMap: {\n        min: 0,\n        max: 200,\n        left: 'left',\n        bottom: 0,\n        text: ['高', '低'],\n        textStyle: {\n          color: '#fff'\n        },\n        inRange: {\n          color: ['#002766', '#0050b3', '#1890ff', '#69c0ff', '#91d5ff']\n        },\n        calculable: true,\n        backgroundColor: 'rgba(0, 21, 41, 0.7)',\n        borderColor: '#1890ff',\n        borderWidth: 1,\n        padding: 10\n      },\n      geo: {\n        map: 'china',\n        roam: true,\n        scaleLimit: {\n          min: 1,\n          max: 5\n        },\n        zoom: 1.2,\n        itemStyle: {\n          areaColor: '#003a8c',\n          borderColor: '#1890ff',\n          borderWidth: 1,\n          shadowColor: 'rgba(0, 0, 0, 0.5)',\n          shadowBlur: 10\n        },\n        emphasis: {\n          itemStyle: {\n            areaColor: '#0050b3',\n            shadowColor: 'rgba(0, 0, 0, 0.8)',\n            shadowBlur: 20\n          },\n          label: {\n            show: true,\n            color: '#fff'\n          }\n        },\n        select: {\n          itemStyle: {\n            areaColor: '#1890ff'\n          }\n        }\n      },\n      series: [{\n        name: '监测点',\n        type: 'map',\n        geoIndex: 0,\n        data: [{\n          name: '北京',\n          value: 120\n        }, {\n          name: '上海',\n          value: 98\n        }, {\n          name: '陕西',\n          value: 150\n        }, {\n          name: '四川',\n          value: 80\n        }, {\n          name: '广东',\n          value: 60\n        }, {\n          name: '新疆',\n          value: 30\n        }, {\n          name: '浙江',\n          value: 95\n        }, {\n          name: '江苏',\n          value: 88\n        }, {\n          name: '山东',\n          value: 78\n        }, {\n          name: '河南',\n          value: 66\n        }, {\n          name: '湖北',\n          value: 72\n        }, {\n          name: '湖南',\n          value: 58\n        }, {\n          name: '河北',\n          value: 45\n        }, {\n          name: '山西',\n          value: 35\n        }, {\n          name: '内蒙古',\n          value: 28\n        }, {\n          name: '辽宁',\n          value: 42\n        }, {\n          name: '吉林',\n          value: 36\n        }, {\n          name: '黑龙江',\n          value: 32\n        }]\n      }, {\n        name: '散点',\n        type: 'effectScatter',\n        coordinateSystem: 'geo',\n        symbolSize: 8,\n        showEffectOn: 'render',\n        rippleEffect: {\n          period: 4,\n          scale: 4,\n          brushType: 'stroke'\n        },\n        itemStyle: {\n          color: '#91d5ff',\n          shadowBlur: 10,\n          shadowColor: '#1890ff'\n        },\n        data: [{\n          name: '北京',\n          value: [116.405285, 39.904989, 120]\n        }, {\n          name: '上海',\n          value: [121.472644, 31.231706, 98]\n        }, {\n          name: '西安',\n          value: [108.948024, 34.263161, 150]\n        }, {\n          name: '成都',\n          value: [104.065735, 30.659462, 80]\n        }, {\n          name: '广州',\n          value: [113.280637, 23.125178, 60]\n        }]\n      }]\n    });\n\n    // 更新时间\n    onMounted(() => {\n      timer.value = setInterval(() => {\n        currentTime.value = new Date().toLocaleString();\n      }, 1000);\n    });\n    onBeforeUnmount(() => {\n      clearInterval(timer.value);\n    });\n    const __returned__ = {\n      mapView,\n      selectedStation,\n      stations,\n      realtimeData,\n      customColors,\n      selectedYear,\n      years,\n      currentTime,\n      timer,\n      currentImage,\n      statisticsData,\n      alerts,\n      mapOptions,\n      BaseEChart,\n      DataCard,\n      ref,\n      onMounted,\n      onBeforeUnmount,\n      get echarts() {\n        return echarts;\n      },\n      get chinaMapData() {\n        return chinaMapData;\n      },\n      get Clock() {\n        return Clock;\n      },\n      get Sunny() {\n        return Sunny;\n      },\n      get Warning() {\n        return Warning;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["BaseEChart","DataCard","ref","onMounted","onBeforeUnmount","echarts","chinaMapData","Clock","Sunny","Warning","mapView","selectedStation","stations","label","value","realtimeData","icon","customColors","color","percentage","registerMap","selectedYear","years","currentTime","Date","toLocaleString","timer","currentImage","id","satellite","longitude","latitude","statisticsData","totalPoints","todayNewData","abnormalPoints","severeAreas","alerts","title","time","location","level","mapOptions","backgroundColor","tooltip","trigger","formatter","params","name","toFixed","borderColor","textStyle","visualMap","min","max","left","bottom","text","inRange","calculable","borderWidth","padding","geo","map","roam","scaleLimit","zoom","itemStyle","areaColor","shadowColor","shadowBlur","emphasis","show","select","series","type","geoIndex","data","coordinateSystem","symbolSize","showEffectOn","rippleEffect","period","scale","brushType","setInterval","clearInterval"],"sources":["D:/restore/water-melt/frontend/src/views/SystemOverview.vue"],"sourcesContent":["<!-- SystemOverview.vue -->\r\n<template>\r\n  <div class=\"system-overview\">\r\n    <div class=\"overview-header\">\r\n      <div class=\"header-left\">\r\n        <h2>系统概览</h2>\r\n        <div class=\"system-status\">\r\n          <span class=\"status-dot\"></span>\r\n          系统运行正常\r\n        </div>\r\n      </div>\r\n      <div class=\"header-right\">\r\n        <div class=\"time-info\">\r\n          <el-icon><Clock /></el-icon>\r\n          <span>{{ currentTime }}</span>\r\n        </div>\r\n        <div class=\"weather-info\">\r\n          <el-icon><Sunny /></el-icon>\r\n          <span>25°C 晴朗</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"data-cards\">\r\n      <data-card \r\n        title=\"监测点总数\" \r\n        :value=\"statisticsData.totalPoints\" \r\n        icon=\"Location\" \r\n        color=\"#1890ff\"\r\n        :trend=\"8\"\r\n        trend-type=\"up\"\r\n      />\r\n      <data-card \r\n        title=\"今日新增数据\" \r\n        :value=\"statisticsData.todayNewData\" \r\n        icon=\"DataLine\" \r\n        color=\"#52c41a\"\r\n        :trend=\"12\"\r\n        trend-type=\"up\"\r\n      />\r\n      <data-card \r\n        title=\"异常监测点\" \r\n        :value=\"statisticsData.abnormalPoints\" \r\n        icon=\"Warning\" \r\n        color=\"#faad14\"\r\n        :trend=\"3\"\r\n        trend-type=\"down\"\r\n      />\r\n      <data-card \r\n        title=\"严重污染区域\" \r\n        :value=\"statisticsData.severeAreas\" \r\n        icon=\"CircleClose\" \r\n        color=\"#ff4d4f\"\r\n        :trend=\"1\"\r\n        trend-type=\"down\"\r\n      />\r\n    </div>\r\n\r\n    <div class=\"main-content\">\r\n      <div class=\"content-left\">\r\n        <!-- 地图容器 -->\r\n        <div class=\"map-section\">\r\n          <div class=\"section-header\">\r\n            <h3>监测点分布</h3>\r\n            <div class=\"map-controls\">\r\n              <el-radio-group v-model=\"mapView\" size=\"small\">\r\n                <el-radio-button label=\"distribution\">分布图</el-radio-button>\r\n                <el-radio-button label=\"heatmap\">热力图</el-radio-button>\r\n              </el-radio-group>\r\n            </div>\r\n          </div>\r\n          <div class=\"map-container\">\r\n            <base-e-chart :options=\"mapOptions\" />\r\n          </div>\r\n          <!-- 土壤污染指数图例 -->\r\n          <div class=\"pollution-legend\">\r\n            <div class=\"legend-items\">\r\n              <div class=\"legend-item\">\r\n                <div class=\"color-block severe\"></div>\r\n                <span>严重污染 > 80</span>\r\n              </div>\r\n              <div class=\"legend-item\">\r\n                <div class=\"color-block moderate\"></div>\r\n                <span>中度污染 60-80</span>\r\n              </div>\r\n              <div class=\"legend-item\">\r\n                <div class=\"color-block light\"></div>\r\n                <span>轻度污染 40-60</span>\r\n              </div>\r\n              <div class=\"legend-item\">\r\n                <div class=\"color-block good\"></div>\r\n                <span>良好 < 40</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 实时监测数据 -->\r\n        <div class=\"realtime-data\">\r\n          <div class=\"section-header\">\r\n            <h3>实时监测数据</h3>\r\n            <el-select v-model=\"selectedStation\" size=\"small\" placeholder=\"选择监测站\">\r\n              <el-option v-for=\"station in stations\" :key=\"station.value\" :label=\"station.label\" :value=\"station.value\" />\r\n            </el-select>\r\n          </div>\r\n          <div class=\"data-grid\">\r\n            <div v-for=\"(item, index) in realtimeData\" :key=\"index\" class=\"data-item\">\r\n              <div class=\"data-icon\">\r\n                <el-icon><component :is=\"item.icon\" /></el-icon>\r\n              </div>\r\n              <div class=\"data-info\">\r\n                <div class=\"data-label\">{{ item.label }}</div>\r\n                <div class=\"data-value\">{{ item.value }}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"content-right\">\r\n        <!-- 右侧信息面板 -->\r\n        <div class=\"info-panel\">\r\n          <div class=\"panel-section\">\r\n            <h3>影像信息</h3>\r\n            <div class=\"image-info\">\r\n              <el-select v-model=\"selectedYear\" placeholder=\"选择年份\" size=\"small\">\r\n                <el-option v-for=\"year in years\" :key=\"year\" :label=\"year\" :value=\"year\" />\r\n              </el-select>\r\n            </div>\r\n            <div class=\"image-details\">\r\n              <div class=\"detail-item\">\r\n                <span class=\"label\">唯一编号：</span>\r\n                <span class=\"value\">{{ currentImage.id }}</span>\r\n              </div>\r\n              <div class=\"detail-item\">\r\n                <span class=\"label\">卫星类型：</span>\r\n                <span class=\"value\">{{ currentImage.satellite }}</span>\r\n              </div>\r\n              <div class=\"detail-item\">\r\n                <span class=\"label\">经度范围：</span>\r\n                <span class=\"value\">{{ currentImage.longitude }}</span>\r\n              </div>\r\n              <div class=\"detail-item\">\r\n                <span class=\"label\">纬度范围：</span>\r\n                <span class=\"value\">{{ currentImage.latitude }}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"panel-section\">\r\n            <div class=\"section-header\">\r\n              <h3>最近告警</h3>\r\n              <el-tag size=\"small\" type=\"danger\">{{ alerts.length }} 个未处理</el-tag>\r\n            </div>\r\n            <div class=\"alert-list\">\r\n              <div v-for=\"(alert, index) in alerts\" :key=\"index\" \r\n                   class=\"alert-item\" :class=\"alert.level\">\r\n                <div class=\"alert-icon\">\r\n                  <el-icon><Warning /></el-icon>\r\n                </div>\r\n                <div class=\"alert-content\">\r\n                  <div class=\"alert-title\">{{ alert.title }}</div>\r\n                  <div class=\"alert-info\">\r\n                    <span class=\"alert-location\">{{ alert.location }}</span>\r\n                    <span class=\"alert-time\">{{ alert.time }}</span>\r\n                  </div>\r\n                </div>\r\n                <div class=\"alert-action\">\r\n                  <el-button size=\"small\" type=\"primary\" link>处理</el-button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"panel-section\">\r\n            <h3>系统状态</h3>\r\n            <div class=\"system-metrics\">\r\n              <div class=\"metric-item\">\r\n                <div class=\"metric-label\">CPU使用率</div>\r\n                <el-progress :percentage=\"68\" :color=\"customColors\" />\r\n              </div>\r\n              <div class=\"metric-item\">\r\n                <div class=\"metric-label\">内存使用率</div>\r\n                <el-progress :percentage=\"42\" :color=\"customColors\" />\r\n              </div>\r\n              <div class=\"metric-item\">\r\n                <div class=\"metric-label\">存储空间</div>\r\n                <el-progress :percentage=\"25\" :color=\"customColors\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport BaseEChart from '@/components/BaseEChart.vue'\r\nimport DataCard from '@/components/DataCard.vue'\r\nimport { ref, onMounted, onBeforeUnmount } from 'vue'\r\nimport * as echarts from 'echarts'\r\nimport chinaMapData from '@/assets/china.json'\r\nimport { Clock, Sunny, Warning } from '@element-plus/icons-vue'\r\n\r\n// 地图视图切换\r\nconst mapView = ref('distribution')\r\n\r\n// 监测站选择\r\nconst selectedStation = ref('station1')\r\nconst stations = [\r\n  { label: '监测站 A', value: 'station1' },\r\n  { label: '监测站 B', value: 'station2' },\r\n  { label: '监测站 C', value: 'station3' }\r\n]\r\n\r\n// 实时监测数据\r\nconst realtimeData = [\r\n  { label: '土壤温度', value: '23.5°C', icon: 'Thermometer' },\r\n  { label: '土壤湿度', value: '65%', icon: 'WaterMeter' },\r\n  { label: 'pH值', value: '7.2', icon: 'Monitor' },\r\n  { label: '氮含量', value: '1.8%', icon: 'Histogram' },\r\n  { label: '磷含量', value: '0.5%', icon: 'TrendCharts' },\r\n  { label: '钾含量', value: '2.1%', icon: 'PieChart' }\r\n]\r\n\r\n// 进度条颜色\r\nconst customColors = [\r\n  { color: '#1890ff', percentage: 20 },\r\n  { color: '#52c41a', percentage: 40 },\r\n  { color: '#faad14', percentage: 60 },\r\n  { color: '#ff4d4f', percentage: 80 }\r\n]\r\n\r\necharts.registerMap('china', chinaMapData)\r\n\r\nconst selectedYear = ref('2024')\r\nconst years = ['2024', '2023', '2022', '2021']\r\nconst currentTime = ref(new Date().toLocaleString())\r\nconst timer = ref(null)\r\n\r\nconst currentImage = ref({\r\n  id: '167599247012556843',\r\n  satellite: 'LANDSAT 8',\r\n  longitude: '107.50233-110.08263',\r\n  latitude: '33.50790-35.69403'\r\n})\r\n\r\nconst statisticsData = ref({\r\n  totalPoints: 2547,\r\n  todayNewData: 156,\r\n  abnormalPoints: 18,\r\n  severeAreas: 3\r\n})\r\n\r\nconst alerts = ref([\r\n  { \r\n    title: '监测点A12水质超标', \r\n    time: '10分钟前',\r\n    location: '西区-A12',\r\n    level: 'severe' \r\n  },\r\n  { \r\n    title: '监测点B23土壤重金属含量异常', \r\n    time: '30分钟前',\r\n    location: '东区-B23',\r\n    level: 'moderate' \r\n  },\r\n  { \r\n    title: '监测点C45数据传输异常', \r\n    time: '1小时前',\r\n    location: '南区-C45',\r\n    level: 'light' \r\n  }\r\n])\r\n\r\n// 中国地图配置\r\nconst mapOptions = ref({\r\n  backgroundColor: 'transparent',\r\n  tooltip: {\r\n    trigger: 'item',\r\n    formatter: (params) => {\r\n      return `${params.name}<br/>监测点数量：${params.value || 0}<br/>覆盖率：${((params.value || 0) / 200 * 100).toFixed(1)}%`\r\n    },\r\n    backgroundColor: 'rgba(0, 21, 41, 0.9)',\r\n    borderColor: '#1890ff',\r\n    textStyle: {\r\n      color: '#fff'\r\n    }\r\n  },\r\n  visualMap: {\r\n    min: 0,\r\n    max: 200,\r\n    left: 'left',\r\n    bottom: 0,\r\n    text: ['高', '低'],\r\n    textStyle: {\r\n      color: '#fff'\r\n    },\r\n    inRange: {\r\n      color: ['#002766', '#0050b3', '#1890ff', '#69c0ff', '#91d5ff']\r\n    },\r\n    calculable: true,\r\n    backgroundColor: 'rgba(0, 21, 41, 0.7)',\r\n    borderColor: '#1890ff',\r\n    borderWidth: 1,\r\n    padding: 10\r\n  },\r\n  geo: {\r\n    map: 'china',\r\n    roam: true,\r\n    scaleLimit: {\r\n      min: 1,\r\n      max: 5\r\n    },\r\n    zoom: 1.2,\r\n    itemStyle: {\r\n      areaColor: '#003a8c',\r\n      borderColor: '#1890ff',\r\n      borderWidth: 1,\r\n      shadowColor: 'rgba(0, 0, 0, 0.5)',\r\n      shadowBlur: 10\r\n    },\r\n    emphasis: {\r\n      itemStyle: {\r\n        areaColor: '#0050b3',\r\n        shadowColor: 'rgba(0, 0, 0, 0.8)',\r\n        shadowBlur: 20\r\n      },\r\n      label: {\r\n        show: true,\r\n        color: '#fff'\r\n      }\r\n    },\r\n    select: {\r\n      itemStyle: {\r\n        areaColor: '#1890ff'\r\n      }\r\n    }\r\n  },\r\n  series: [\r\n    {\r\n      name: '监测点',\r\n      type: 'map',\r\n      geoIndex: 0,\r\n      data: [\r\n        { name: '北京', value: 120 },\r\n        { name: '上海', value: 98 },\r\n        { name: '陕西', value: 150 },\r\n        { name: '四川', value: 80 },\r\n        { name: '广东', value: 60 },\r\n        { name: '新疆', value: 30 },\r\n        { name: '浙江', value: 95 },\r\n        { name: '江苏', value: 88 },\r\n        { name: '山东', value: 78 },\r\n        { name: '河南', value: 66 },\r\n        { name: '湖北', value: 72 },\r\n        { name: '湖南', value: 58 },\r\n        { name: '河北', value: 45 },\r\n        { name: '山西', value: 35 },\r\n        { name: '内蒙古', value: 28 },\r\n        { name: '辽宁', value: 42 },\r\n        { name: '吉林', value: 36 },\r\n        { name: '黑龙江', value: 32 }\r\n      ]\r\n    },\r\n    {\r\n      name: '散点',\r\n      type: 'effectScatter',\r\n      coordinateSystem: 'geo',\r\n      symbolSize: 8,\r\n      showEffectOn: 'render',\r\n      rippleEffect: {\r\n        period: 4,\r\n        scale: 4,\r\n        brushType: 'stroke'\r\n      },\r\n      itemStyle: {\r\n        color: '#91d5ff',\r\n        shadowBlur: 10,\r\n        shadowColor: '#1890ff'\r\n      },\r\n      data: [\r\n        { name: '北京', value: [116.405285, 39.904989, 120] },\r\n        { name: '上海', value: [121.472644, 31.231706, 98] },\r\n        { name: '西安', value: [108.948024, 34.263161, 150] },\r\n        { name: '成都', value: [104.065735, 30.659462, 80] },\r\n        { name: '广州', value: [113.280637, 23.125178, 60] }\r\n      ]\r\n    }\r\n  ]\r\n})\r\n\r\n// 更新时间\r\nonMounted(() => {\r\n  timer.value = setInterval(() => {\r\n    currentTime.value = new Date().toLocaleString()\r\n  }, 1000)\r\n})\r\n\r\nonBeforeUnmount(() => {\r\n  clearInterval(timer.value)\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.system-overview {\r\n  padding: 24px;\r\n  min-height: 100vh;\r\n  background: linear-gradient(135deg, #001529 0%, #003366 100%);\r\n}\r\n\r\n.overview-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 24px;\r\n  padding-bottom: 24px;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n}\r\n\r\n.header-left {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 24px;\r\n}\r\n\r\n.header-left h2 {\r\n  font-size: 28px;\r\n  font-weight: 600;\r\n  color: #fff;\r\n  margin: 0;\r\n}\r\n\r\n.system-status {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  color: #52c41a;\r\n  font-size: 14px;\r\n}\r\n\r\n.status-dot {\r\n  width: 8px;\r\n  height: 8px;\r\n  border-radius: 50%;\r\n  background-color: #52c41a;\r\n  animation: pulse 2s infinite;\r\n}\r\n\r\n.header-right {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 24px;\r\n}\r\n\r\n.time-info, .weather-info {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  color: #fff;\r\n  font-size: 14px;\r\n}\r\n\r\n.data-cards {\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 1fr);\r\n  gap: 24px;\r\n  margin-bottom: 24px;\r\n}\r\n\r\n.main-content {\r\n  display: grid;\r\n  grid-template-columns: 2fr 1fr;\r\n  gap: 24px;\r\n}\r\n\r\n.content-left {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 24px;\r\n}\r\n\r\n.map-section {\r\n  background: rgba(255, 255, 255, 0.05);\r\n  border-radius: 12px;\r\n  padding: 20px;\r\n  backdrop-filter: blur(10px);\r\n}\r\n\r\n.section-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 16px;\r\n}\r\n\r\n.section-header h3 {\r\n  color: #fff;\r\n  font-size: 18px;\r\n  margin: 0;\r\n}\r\n\r\n.map-container {\r\n  height: 400px;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n}\r\n\r\n.pollution-legend {\r\n  margin-top: 16px;\r\n}\r\n\r\n.legend-items {\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 24px;\r\n}\r\n\r\n.legend-item {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  color: #fff;\r\n  font-size: 14px;\r\n}\r\n\r\n.color-block {\r\n  width: 16px;\r\n  height: 16px;\r\n  border-radius: 4px;\r\n}\r\n\r\n.color-block.severe { background: #ff4d4f; }\r\n.color-block.moderate { background: #faad14; }\r\n.color-block.light { background: #52c41a; }\r\n.color-block.good { background: #1890ff; }\r\n\r\n.realtime-data {\r\n  background: rgba(255, 255, 255, 0.05);\r\n  border-radius: 12px;\r\n  padding: 20px;\r\n  backdrop-filter: blur(10px);\r\n}\r\n\r\n.data-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  gap: 16px;\r\n}\r\n\r\n.data-item {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n  padding: 16px;\r\n  background: rgba(0, 0, 0, 0.2);\r\n  border-radius: 8px;\r\n}\r\n\r\n.data-icon {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 8px;\r\n  background: rgba(255, 255, 255, 0.1);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #1890ff;\r\n}\r\n\r\n.data-info {\r\n  flex: 1;\r\n}\r\n\r\n.data-label {\r\n  font-size: 14px;\r\n  color: #8c8c8c;\r\n  margin-bottom: 4px;\r\n}\r\n\r\n.data-value {\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  color: #fff;\r\n}\r\n\r\n.info-panel {\r\n  background: rgba(255, 255, 255, 0.05);\r\n  border-radius: 12px;\r\n  backdrop-filter: blur(10px);\r\n  height: 100%;\r\n}\r\n\r\n.panel-section {\r\n  padding: 20px;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n}\r\n\r\n.panel-section:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\n.panel-section h3 {\r\n  color: #fff;\r\n  font-size: 18px;\r\n  margin: 0 0 16px 0;\r\n}\r\n\r\n.image-details {\r\n  margin-top: 16px;\r\n}\r\n\r\n.detail-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 12px;\r\n  font-size: 14px;\r\n}\r\n\r\n.label {\r\n  color: #8c8c8c;\r\n}\r\n\r\n.value {\r\n  color: #fff;\r\n}\r\n\r\n.alert-list {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 12px;\r\n}\r\n\r\n.alert-item {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n  padding: 12px;\r\n  background: rgba(0, 0, 0, 0.2);\r\n  border-radius: 8px;\r\n  transition: transform 0.2s;\r\n}\r\n\r\n.alert-item:hover {\r\n  transform: translateX(5px);\r\n}\r\n\r\n.alert-icon {\r\n  width: 32px;\r\n  height: 32px;\r\n  border-radius: 50%;\r\n  background: rgba(255, 255, 255, 0.1);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.alert-item.severe .alert-icon { color: #ff4d4f; }\r\n.alert-item.moderate .alert-icon { color: #faad14; }\r\n.alert-item.light .alert-icon { color: #52c41a; }\r\n\r\n.alert-content {\r\n  flex: 1;\r\n}\r\n\r\n.alert-title {\r\n  font-size: 14px;\r\n  color: #fff;\r\n  margin-bottom: 4px;\r\n}\r\n\r\n.alert-info {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-size: 12px;\r\n  color: #8c8c8c;\r\n}\r\n\r\n.system-metrics {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 16px;\r\n}\r\n\r\n.metric-item {\r\n  .metric-label {\r\n    font-size: 14px;\r\n    color: #8c8c8c;\r\n    margin-bottom: 8px;\r\n  }\r\n}\r\n\r\n@keyframes pulse {\r\n  0% {\r\n    transform: scale(0.95);\r\n    box-shadow: 0 0 0 0 rgba(82, 196, 26, 0.7);\r\n  }\r\n  \r\n  70% {\r\n    transform: scale(1);\r\n    box-shadow: 0 0 0 10px rgba(82, 196, 26, 0);\r\n  }\r\n  \r\n  100% {\r\n    transform: scale(0.95);\r\n    box-shadow: 0 0 0 0 rgba(82, 196, 26, 0);\r\n  }\r\n}\r\n\r\n:deep(.el-select) {\r\n  width: 120px;\r\n}\r\n\r\n:deep(.el-progress-bar__outer) {\r\n  background-color: rgba(255, 255, 255, 0.1) !important;\r\n}\r\n\r\n:deep(.el-progress) {\r\n  width: 100%;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}