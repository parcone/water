{"ast":null,"code":"import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock, KeepAlive as _KeepAlive, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, normalizeClass as _normalizeClass, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    id: \"app\",\n    class: _normalizeClass({\n      'is-mobile': $data.isMobile\n    })\n  }, [_createVNode(_component_router_view, null, {\n    default: _withCtx(({\n      Component\n    }) => [(_openBlock(), _createBlock(_KeepAlive, {\n      include: _ctx.cachedViews\n    }, [(_openBlock(), _createBlock(_resolveDynamicComponent(Component), {\n      key: _ctx.$route.fullPath\n    }))], 1032 /* PROPS, DYNAMIC_SLOTS */, [\"include\"]))]),\n    _: 1 /* STABLE */\n  })], 2 /* CLASS */);\n}","map":{"version":3,"names":["_createElementBlock","id","class","_normalizeClass","$data","isMobile","_createVNode","_component_router_view","Component","_createBlock","_KeepAlive","include","_ctx","cachedViews","_resolveDynamicComponent","key","$route","fullPath"],"sources":["D:\\restore\\water-melt\\frontend\\src\\App.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\" :class=\"{ 'is-mobile': isMobile }\">\r\n    <router-view v-slot=\"{ Component }\">\r\n      <keep-alive :include=\"cachedViews\">\r\n        <component :is=\"Component\" :key=\"$route.fullPath\" />\r\n      </keep-alive>\r\n    </router-view>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from 'vuex'\r\nimport { throttle } from 'lodash-es'\r\n\r\nexport default {\r\n  name: 'App',\r\n  data() {\r\n    return {\r\n      isMobile: false\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      cachedViews: state => state.app.cachedViews\r\n    })\r\n  },\r\n  created() {\r\n    // 初始化移动设备检测\r\n    this.checkMobile()\r\n    \r\n    // 监听窗口大小变化\r\n    window.addEventListener('resize', this.handleResize)\r\n    \r\n    // 初始化主题\r\n    const theme = localStorage.getItem('theme') || ''\r\n    document.documentElement.setAttribute('data-theme', theme)\r\n  },\r\n  beforeUnmount() {\r\n    window.removeEventListener('resize', this.handleResize)\r\n  },\r\n  methods: {\r\n    checkMobile() {\r\n      this.isMobile = window.innerWidth < 768\r\n    },\r\n    handleResize: throttle(function() {\r\n      this.checkMobile()\r\n    }, 200)\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import '@/styles/variables.scss';\r\n@import '@/styles/global.scss';\r\n@import '@/styles/theme.scss';\r\n\r\n#app {\r\n  height: 100vh;\r\n  overflow: hidden;\r\n\r\n  &.is-mobile {\r\n    .sidebar {\r\n      position: fixed;\r\n      z-index: $zindex-fixed;\r\n      transform: translateX(-100%);\r\n      transition: transform 0.3s ease;\r\n\r\n      &.visible {\r\n        transform: translateX(0);\r\n      }\r\n    }\r\n\r\n    .main-content {\r\n      margin-left: 0;\r\n    }\r\n  }\r\n}\r\n\r\n// 路由过渡动画\r\n.fade-enter-active,\r\n.fade-leave-active {\r\n  transition: opacity 0.3s ease;\r\n}\r\n\r\n.fade-enter-from,\r\n.fade-leave-to {\r\n  opacity: 0;\r\n}\r\n\r\n.slide-fade-enter-active,\r\n.slide-fade-leave-active {\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.slide-fade-enter-from,\r\n.slide-fade-leave-to {\r\n  transform: translateX(10px);\r\n  opacity: 0;\r\n}\r\n</style> "],"mappings":";;;uBACEA,mBAAA,CAMM;IANDC,EAAE,EAAC,KAAK;IAAEC,KAAK,EAAAC,eAAA;MAAA,aAAiBC,KAAA,CAAAC;IAAQ;MAC3CC,YAAA,CAIcC,sBAAA;sBAHZ,CAEa;MAHQC;IAAS,Q,cAC9BC,YAAA,CAEaC,UAAA;MAFAC,OAAO,EAAEC,IAAA,CAAAC;IAAW,K,cAC/BJ,YAAA,CAAoDK,wBAAA,CAApCN,SAAS;MAAGO,GAAG,EAAEH,IAAA,CAAAI,MAAM,CAACC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}