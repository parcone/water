{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"photo-timeline\"\n};\nconst _hoisted_2 = {\n  class: \"timeline-header\"\n};\nconst _hoisted_3 = {\n  class: \"controls\"\n};\nconst _hoisted_4 = {\n  class: \"speed-control\"\n};\nconst _hoisted_5 = {\n  class: \"image-container\"\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"image-wrapper\"\n};\nconst _hoisted_7 = [\"src\", \"alt\"];\nconst _hoisted_8 = {\n  class: \"image-info\"\n};\nconst _hoisted_9 = {\n  class: \"date-info\"\n};\nconst _hoisted_10 = {\n  class: \"progress-info\"\n};\nconst _hoisted_11 = {\n  key: 1,\n  class: \"no-image\"\n};\nconst _hoisted_12 = {\n  class: \"timeline-slider\"\n};\nconst _hoisted_13 = {\n  class: \"slider-container\"\n};\nconst _hoisted_14 = [\"max\", \"value\", \"disabled\"];\nconst _hoisted_15 = {\n  class: \"slider-labels\"\n};\nconst _hoisted_16 = {\n  key: 0\n};\nconst _hoisted_17 = {\n  key: 1\n};\nconst _hoisted_18 = {\n  class: \"timeline-info\"\n};\nconst _hoisted_19 = {\n  class: \"info-item\"\n};\nconst _hoisted_20 = {\n  class: \"value\"\n};\nconst _hoisted_21 = {\n  class: \"info-item\"\n};\nconst _hoisted_22 = {\n  class: \"value\"\n};\nconst _hoisted_23 = {\n  class: \"info-item\"\n};\nconst _hoisted_24 = {\n  class: \"value\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[9] || (_cache[9] = _createElementVNode(\"h2\", null, \"图片时间轴\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.playPause && $options.playPause(...args)),\n    class: \"control-btn\"\n  }, _toDisplayString($data.isPlaying ? '⏸️ 暂停' : '▶️ 播放'), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.reset && $options.reset(...args)),\n    class: \"control-btn\"\n  }, \"🔄 重置\"), _createElementVNode(\"div\", _hoisted_4, [_cache[8] || (_cache[8] = _createElementVNode(\"label\", null, \"速度:\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.playSpeed = $event),\n    onChange: _cache[3] || (_cache[3] = (...args) => $options.updatePlaySpeed && $options.updatePlaySpeed(...args))\n  }, _cache[7] || (_cache[7] = [_createElementVNode(\"option\", {\n    value: \"500\"\n  }, \"0.5秒\", -1 /* CACHED */), _createElementVNode(\"option\", {\n    value: \"1000\"\n  }, \"1秒\", -1 /* CACHED */), _createElementVNode(\"option\", {\n    value: \"2000\"\n  }, \"2秒\", -1 /* CACHED */), _createElementVNode(\"option\", {\n    value: \"3000\"\n  }, \"3秒\", -1 /* CACHED */)]), 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelSelect, $data.playSpeed]])])])]), _createElementVNode(\"div\", _hoisted_5, [$options.currentPhoto ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_createElementVNode(\"img\", {\n    src: $options.getImageUrl($options.currentPhoto.filename),\n    alt: $options.currentPhoto.displayName,\n    class: \"timeline-image\",\n    onLoad: _cache[4] || (_cache[4] = (...args) => $options.onImageLoad && $options.onImageLoad(...args)),\n    onError: _cache[5] || (_cache[5] = (...args) => $options.onImageError && $options.onImageError(...args))\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_7), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, _toDisplayString($options.currentPhoto.displayName), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_10, _toDisplayString($data.currentIndex + 1) + \" / \" + _toDisplayString($data.photos.length), 1 /* TEXT */)])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [_createElementVNode(\"p\", null, _toDisplayString($data.isLoading ? '加载中...' : '暂无图片数据'), 1 /* TEXT */)]))]), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"input\", {\n    type: \"range\",\n    min: 0,\n    max: Math.max(0, $data.photos.length - 1),\n    value: $data.currentIndex,\n    onInput: _cache[6] || (_cache[6] = (...args) => $options.onSliderChange && $options.onSliderChange(...args)),\n    class: \"timeline-range\",\n    disabled: $data.photos.length === 0\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_14), _createElementVNode(\"div\", _hoisted_15, [$data.photos.length > 0 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_16, _toDisplayString($data.photos[0]?.displayName), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $data.photos.length > 1 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_17, _toDisplayString($data.photos[$data.photos.length - 1]?.displayName), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)])])]), _createElementVNode(\"div\", _hoisted_18, [_createElementVNode(\"div\", _hoisted_19, [_cache[10] || (_cache[10] = _createElementVNode(\"span\", {\n    class: \"label\"\n  }, \"当前时间:\", -1 /* CACHED */)), _createElementVNode(\"span\", _hoisted_20, _toDisplayString($options.currentPhoto?.displayName || '无'), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_21, [_cache[11] || (_cache[11] = _createElementVNode(\"span\", {\n    class: \"label\"\n  }, \"总图片数:\", -1 /* CACHED */)), _createElementVNode(\"span\", _hoisted_22, _toDisplayString($data.photos.length), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_23, [_cache[12] || (_cache[12] = _createElementVNode(\"span\", {\n    class: \"label\"\n  }, \"播放状态:\", -1 /* CACHED */)), _createElementVNode(\"span\", _hoisted_24, _toDisplayString($data.isPlaying ? '播放中' : '已暂停'), 1 /* TEXT */)])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","onClick","_cache","args","$options","playPause","$data","isPlaying","reset","_hoisted_4","playSpeed","$event","onChange","updatePlaySpeed","value","_hoisted_5","currentPhoto","_hoisted_6","src","getImageUrl","filename","alt","displayName","onLoad","onImageLoad","onError","onImageError","_hoisted_8","_hoisted_9","_toDisplayString","_hoisted_10","currentIndex","photos","length","_hoisted_11","isLoading","_hoisted_12","_hoisted_13","type","min","max","Math","onInput","onSliderChange","disabled","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24"],"sources":["D:\\restore\\water-melt\\frontend\\src\\components\\PhotoTimeline.vue"],"sourcesContent":["<template>\n  <div class=\"photo-timeline\">\n    <div class=\"timeline-header\">\n      <h2>图片时间轴</h2>\n      <div class=\"controls\">\n        <button @click=\"playPause\" class=\"control-btn\">\n          {{ isPlaying ? '⏸️ 暂停' : '▶️ 播放' }}\n        </button>\n        <button @click=\"reset\" class=\"control-btn\">🔄 重置</button>\n        <div class=\"speed-control\">\n          <label>速度:</label>\n          <select v-model=\"playSpeed\" @change=\"updatePlaySpeed\">\n            <option value=\"500\">0.5秒</option>\n            <option value=\"1000\">1秒</option>\n            <option value=\"2000\">2秒</option>\n            <option value=\"3000\">3秒</option>\n          </select>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"image-container\">\n      <div v-if=\"currentPhoto\" class=\"image-wrapper\">\n        <img\n            :src=\"getImageUrl(currentPhoto.filename)\"\n            :alt=\"currentPhoto.displayName\"\n            class=\"timeline-image\"\n            @load=\"onImageLoad\"\n            @error=\"onImageError\"\n        />\n        <div class=\"image-info\">\n          <div class=\"date-info\">{{ currentPhoto.displayName }}</div>\n          <div class=\"progress-info\">{{ currentIndex + 1 }} / {{ photos.length }}</div>\n        </div>\n      </div>\n      <div v-else class=\"no-image\">\n        <p>{{ isLoading ? '加载中...' : '暂无图片数据' }}</p>\n      </div>\n    </div>\n\n    <div class=\"timeline-slider\">\n      <div class=\"slider-container\">\n        <input\n            type=\"range\"\n            :min=\"0\"\n            :max=\"Math.max(0, photos.length - 1)\"\n            :value=\"currentIndex\"\n            @input=\"onSliderChange\"\n            class=\"timeline-range\"\n            :disabled=\"photos.length === 0\"\n        />\n        <div class=\"slider-labels\">\n          <span v-if=\"photos.length > 0\">{{ photos[0]?.displayName }}</span>\n          <span v-if=\"photos.length > 1\">{{ photos[photos.length - 1]?.displayName }}</span>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"timeline-info\">\n      <div class=\"info-item\">\n        <span class=\"label\">当前时间:</span>\n        <span class=\"value\">{{ currentPhoto?.displayName || '无' }}</span>\n      </div>\n      <div class=\"info-item\">\n        <span class=\"label\">总图片数:</span>\n        <span class=\"value\">{{ photos.length }}</span>\n      </div>\n      <div class=\"info-item\">\n        <span class=\"label\">播放状态:</span>\n        <span class=\"value\">{{ isPlaying ? '播放中' : '已暂停' }}</span>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted, onBeforeUnmount } from 'vue'\nimport { Loading } from '@element-plus/icons-vue'\nimport preloader from '@/utils/preload'\n\n// 使用require.context一次性加载所有图片\nfunction loadAllImages() {\n  const allImages = {}\n\n  try {\n    // 精确匹配您的路径\n    const requireImages = require.context('../assets/water/photos', false, /\\.(png|jpg|jpeg|gif)$/i)\n\n    console.log('发现的图片文件:', requireImages.keys())\n\n    requireImages.keys().forEach(key => {\n      // key格式: \"./2025_01_SSM_20250101.png\"\n      const filename = key.replace('./', '')\n      allImages[filename] = requireImages(key)\n    })\n\n    console.log('成功加载的图片:', Object.keys(allImages))\n    return allImages\n  } catch (error) {\n    console.error('加载图片失败:', error)\n    return {}\n  }\n}\n\n// 解析文件名中的日期信息\nfunction parseImageFilename(filename) {\n  // 匹配格式: 2025_01_SSM_20250101.png\n  const match = filename.match(/(\\d{4})_(\\d{2})_\\w+_(\\d{8})/)\n\n  if (match) {\n    const [, year, month, dateStr] = match\n    const fullYear = dateStr.substring(0, 4)\n    const fullMonth = dateStr.substring(4, 6)\n    const day = dateStr.substring(6, 8)\n\n    return {\n      filename,\n      year: parseInt(fullYear),\n      month: parseInt(fullMonth),\n      day: parseInt(day),\n      displayName: `${fullYear}年${fullMonth}月${day}日`,\n      sortKey: parseInt(dateStr)\n    }\n  }\n\n  // 备用解析方案\n  const basicMatch = filename.match(/(\\d{4})_(\\d{2})/)\n  if (basicMatch) {\n    const [, year, month] = basicMatch\n    return {\n      filename,\n      year: parseInt(year),\n      month: parseInt(month),\n      day: 1,\n      displayName: `${year}年${month}月`,\n      sortKey: parseInt(year) * 10000 + parseInt(month) * 100\n    }\n  }\n\n  // 如果无法解析，使用文件名\n  return {\n    filename,\n    year: 2025,\n    month: 1,\n    day: 1,\n    displayName: filename.replace(/\\.(png|jpg|jpeg|gif)$/i, ''),\n    sortKey: 0\n  }\n}\n\nexport default {\n  name: 'PhotoTimeline',\n  components: {\n    Loading\n  },\n  data() {\n    return {\n      photos: [],\n      currentIndex: 0,\n      isPlaying: false,\n      playSpeed: 2000,\n      playInterval: null,\n      isLoading: false,\n      allImages: {},\n      preloadProgress: 0\n    }\n  },\n  computed: {\n    currentPhoto() {\n      return this.photos[this.currentIndex] || null\n    },\n    nextPhotos() {\n      const start = this.currentIndex + 1\n      const end = Math.min(start + 3, this.photos.length)\n      return this.photos.slice(start, end)\n    }\n  },\n  watch: {\n    currentIndex(newIndex) {\n      // 预加载下一批图片\n      this.preloadNextBatch()\n    }\n  },\n  async mounted() {\n    await this.initializeComponent()\n  },\n  beforeUnmount() {\n    this.stopPlay()\n  },\n  methods: {\n    async initializeComponent() {\n      this.isLoading = true\n\n      try {\n        // 加载所有图片\n        this.allImages = loadAllImages()\n\n        // 生成照片数据\n        await this.generatePhotoData()\n\n        // 预加载第一批图片\n        await this.preloadInitialBatch()\n\n        console.log(`初始化完成，共加载 ${this.photos.length} 张图片`)\n      } catch (error) {\n        console.error('初始化失败:', error)\n      } finally {\n        this.isLoading = false\n      }\n    },\n\n    async generatePhotoData() {\n      const imageFilenames = Object.keys(this.allImages)\n\n      if (imageFilenames.length === 0) {\n        console.warn('没有找到图片文件')\n        return\n      }\n\n      // 解析并排序图片\n      this.photos = imageFilenames\n          .map(filename => parseImageFilename(filename))\n          .sort((a, b) => a.sortKey - b.sortKey)\n\n      console.log('图片排序完成:', this.photos.map(p => p.displayName))\n    },\n\n    async preloadInitialBatch() {\n      const initialBatch = this.photos.slice(0, 5) // 预加载前5张图片\n      await this.preloadImages(initialBatch)\n    },\n\n    async preloadNextBatch() {\n      if (this.nextPhotos.length > 0) {\n        await this.preloadImages(this.nextPhotos)\n      }\n    },\n\n    async preloadImages(photos) {\n      const urls = photos.map(photo => this.getImageUrl(photo.filename))\n      try {\n        await preloader.loadMultiple(urls, {\n          onProgress: ({ percent }) => {\n            this.preloadProgress = percent\n          }\n        })\n      } catch (error) {\n        console.error('预加载图片失败:', error)\n      }\n    },\n\n    getImageUrl(filename) {\n      if (!filename || !this.allImages[filename]) {\n        console.warn('图片不存在:', filename)\n        return ''\n      }\n\n      return this.allImages[filename]\n    },\n\n    onSliderChange(event) {\n      const newIndex = parseInt(event.target.value)\n      if (newIndex >= 0 && newIndex < this.photos.length) {\n        this.currentIndex = newIndex\n        this.stopPlay()\n      }\n    },\n\n    playPause() {\n      if (this.isPlaying) {\n        this.stopPlay()\n      } else {\n        this.startPlay()\n      }\n    },\n\n    startPlay() {\n      if (this.photos.length === 0) return\n\n      this.isPlaying = true\n      this.playInterval = setInterval(() => {\n        this.currentIndex = (this.currentIndex + 1) % this.photos.length\n      }, this.playSpeed)\n    },\n\n    stopPlay() {\n      this.isPlaying = false\n      if (this.playInterval) {\n        clearInterval(this.playInterval)\n        this.playInterval = null\n      }\n    },\n\n    updatePlaySpeed() {\n      if (this.isPlaying) {\n        this.stopPlay()\n        this.startPlay()\n      }\n    },\n\n    reset() {\n      this.stopPlay()\n      this.currentIndex = 0\n    },\n\n    onImageLoad() {\n      // 图片加载成功\n    },\n\n    onImageError(event) {\n      console.error('图片加载失败:', this.currentPhoto?.filename)\n      console.error('错误详情:', event)\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.photo-timeline {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  background: rgba(0, 0, 0, 0.2);\n  border-radius: 8px;\n  overflow: hidden;\n\n  .timeline-header {\n    padding: 16px;\n    border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n    \n    h2 {\n      display: none; // 隐藏重复的标题\n    }\n    \n    .controls {\n      display: flex;\n      align-items: center;\n      gap: 12px;\n      \n      .control-btn {\n        background: rgba(255, 255, 255, 0.1);\n        border: 1px solid rgba(255, 255, 255, 0.2);\n        color: #fff;\n        padding: 6px 12px;\n        border-radius: 4px;\n        cursor: pointer;\n        transition: all 0.3s ease;\n        \n        &:hover {\n          background: rgba(255, 255, 255, 0.2);\n        }\n      }\n      \n      .speed-control {\n        display: flex;\n        align-items: center;\n        gap: 8px;\n        \n        label {\n          color: rgba(255, 255, 255, 0.7);\n        }\n        \n        select {\n          background: rgba(255, 255, 255, 0.1);\n          border: 1px solid rgba(255, 255, 255, 0.2);\n          color: #fff;\n          padding: 4px 8px;\n          border-radius: 4px;\n          cursor: pointer;\n          \n          option {\n            background: #1a1a1a;\n            color: #fff;\n          }\n        }\n      }\n    }\n  }\n\n  .image-container {\n    flex: 1;\n    position: relative;\n    overflow: hidden;\n    \n    .image-wrapper {\n      height: 100%;\n      position: relative;\n      \n      .timeline-image {\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n      }\n      \n      .image-info {\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        padding: 12px;\n        background: rgba(0, 0, 0, 0.7);\n        backdrop-filter: blur(10px);\n        color: #fff;\n        \n        .date-info {\n          font-size: 14px;\n          margin-bottom: 4px;\n        }\n        \n        .progress-info {\n          font-size: 12px;\n          color: rgba(255, 255, 255, 0.7);\n        }\n      }\n    }\n    \n    .no-image {\n      height: 100%;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      color: rgba(255, 255, 255, 0.5);\n    }\n  }\n\n  .timeline-slider {\n    padding: 16px;\n    border-top: 1px solid rgba(255, 255, 255, 0.1);\n    \n    .slider-container {\n      .timeline-range {\n        width: 100%;\n        height: 4px;\n        background: rgba(255, 255, 255, 0.1);\n        border-radius: 2px;\n        outline: none;\n        -webkit-appearance: none;\n        \n        &::-webkit-slider-thumb {\n          -webkit-appearance: none;\n          width: 12px;\n          height: 12px;\n          background: #40a9ff;\n          border-radius: 50%;\n          cursor: pointer;\n          transition: all 0.3s ease;\n          \n          &:hover {\n            transform: scale(1.2);\n          }\n        }\n      }\n      \n      .slider-labels {\n        display: flex;\n        justify-content: space-between;\n        margin-top: 8px;\n        font-size: 12px;\n        color: rgba(255, 255, 255, 0.5);\n      }\n    }\n  }\n\n  .timeline-info {\n    padding: 16px;\n    border-top: 1px solid rgba(255, 255, 255, 0.1);\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    gap: 12px;\n    \n    .info-item {\n      .label {\n        color: rgba(255, 255, 255, 0.5);\n        font-size: 12px;\n        margin-bottom: 4px;\n        display: block;\n      }\n      \n      .value {\n        color: #fff;\n        font-size: 14px;\n      }\n    }\n  }\n}\n</style> "],"mappings":";;EACOA,KAAK,EAAC;AAAgB;;EACpBA,KAAK,EAAC;AAAiB;;EAErBA,KAAK,EAAC;AAAU;;EAKdA,KAAK,EAAC;AAAe;;EAYzBA,KAAK,EAAC;AAAiB;;;EACDA,KAAK,EAAC;;;;EAQxBA,KAAK,EAAC;AAAY;;EAChBA,KAAK,EAAC;AAAW;;EACjBA,KAAK,EAAC;AAAe;;;EAGlBA,KAAK,EAAC;;;EAKfA,KAAK,EAAC;AAAiB;;EACrBA,KAAK,EAAC;AAAkB;;;EAUtBA,KAAK,EAAC;AAAe;;;;;;;;EAOzBA,KAAK,EAAC;AAAe;;EACnBA,KAAK,EAAC;AAAW;;EAEdA,KAAK,EAAC;AAAO;;EAEhBA,KAAK,EAAC;AAAW;;EAEdA,KAAK,EAAC;AAAO;;EAEhBA,KAAK,EAAC;AAAW;;EAEdA,KAAK,EAAC;AAAO;;uBApEzBC,mBAAA,CAuEM,OAvENC,UAuEM,GAtEJC,mBAAA,CAiBM,OAjBNC,UAiBM,G,0BAhBJD,mBAAA,CAAc,YAAV,OAAK,qBACTA,mBAAA,CAcM,OAdNE,UAcM,GAbJF,mBAAA,CAES;IAFAG,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,SAAA,IAAAD,QAAA,CAAAC,SAAA,IAAAF,IAAA,CAAS;IAAER,KAAK,EAAC;sBAC5BW,KAAA,CAAAC,SAAS,sCAEdT,mBAAA,CAAyD;IAAhDG,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAI,KAAA,IAAAJ,QAAA,CAAAI,KAAA,IAAAL,IAAA,CAAK;IAAER,KAAK,EAAC;KAAc,OAAK,GAChDG,mBAAA,CAQM,OARNW,UAQM,G,0BAPJX,mBAAA,CAAkB,eAAX,KAAG,qB,gBACVA,mBAAA,CAKS;+DALQQ,KAAA,CAAAI,SAAS,GAAAC,MAAA;IAAGC,QAAM,EAAAV,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAS,eAAA,IAAAT,QAAA,CAAAS,eAAA,IAAAV,IAAA,CAAe;gCAClDL,mBAAA,CAAiC;IAAzBgB,KAAK,EAAC;EAAK,GAAC,MAAI,oBACxBhB,mBAAA,CAAgC;IAAxBgB,KAAK,EAAC;EAAM,GAAC,IAAE,oBACvBhB,mBAAA,CAAgC;IAAxBgB,KAAK,EAAC;EAAM,GAAC,IAAE,oBACvBhB,mBAAA,CAAgC;IAAxBgB,KAAK,EAAC;EAAM,GAAC,IAAE,mB,2DAJRR,KAAA,CAAAI,SAAS,E,SAUhCZ,mBAAA,CAiBM,OAjBNiB,UAiBM,GAhBOX,QAAA,CAAAY,YAAY,I,cAAvBpB,mBAAA,CAYM,OAZNqB,UAYM,GAXJnB,mBAAA,CAME;IALGoB,GAAG,EAAEd,QAAA,CAAAe,WAAW,CAACf,QAAA,CAAAY,YAAY,CAACI,QAAQ;IACtCC,GAAG,EAAEjB,QAAA,CAAAY,YAAY,CAACM,WAAW;IAC9B3B,KAAK,EAAC,gBAAgB;IACrB4B,MAAI,EAAArB,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAoB,WAAA,IAAApB,QAAA,CAAAoB,WAAA,IAAArB,IAAA,CAAW;IACjBsB,OAAK,EAAAvB,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAsB,YAAA,IAAAtB,QAAA,CAAAsB,YAAA,IAAAvB,IAAA,CAAY;wDAExBL,mBAAA,CAGM,OAHN6B,UAGM,GAFJ7B,mBAAA,CAA2D,OAA3D8B,UAA2D,EAAAC,gBAAA,CAAjCzB,QAAA,CAAAY,YAAY,CAACM,WAAW,kBAClDxB,mBAAA,CAA6E,OAA7EgC,WAA6E,EAAAD,gBAAA,CAA/CvB,KAAA,CAAAyB,YAAY,QAAO,KAAG,GAAAF,gBAAA,CAAGvB,KAAA,CAAA0B,MAAM,CAACC,MAAM,iB,sBAGxErC,mBAAA,CAEM,OAFNsC,WAEM,GADJpC,mBAAA,CAA4C,WAAA+B,gBAAA,CAAtCvB,KAAA,CAAA6B,SAAS,uC,MAInBrC,mBAAA,CAgBM,OAhBNsC,WAgBM,GAfJtC,mBAAA,CAcM,OAdNuC,WAcM,GAbJvC,mBAAA,CAQE;IAPEwC,IAAI,EAAC,OAAO;IACXC,GAAG,EAAE,CAAC;IACNC,GAAG,EAAEC,IAAI,CAACD,GAAG,IAAIlC,KAAA,CAAA0B,MAAM,CAACC,MAAM;IAC9BnB,KAAK,EAAER,KAAA,CAAAyB,YAAY;IACnBW,OAAK,EAAAxC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAuC,cAAA,IAAAvC,QAAA,CAAAuC,cAAA,IAAAxC,IAAA,CAAc;IACtBR,KAAK,EAAC,gBAAgB;IACrBiD,QAAQ,EAAEtC,KAAA,CAAA0B,MAAM,CAACC,MAAM;yDAE5BnC,mBAAA,CAGM,OAHN+C,WAGM,GAFQvC,KAAA,CAAA0B,MAAM,CAACC,MAAM,Q,cAAzBrC,mBAAA,CAAkE,QAAAkD,WAAA,EAAAjB,gBAAA,CAAhCvB,KAAA,CAAA0B,MAAM,KAAKV,WAAW,oB,mCAC5ChB,KAAA,CAAA0B,MAAM,CAACC,MAAM,Q,cAAzBrC,mBAAA,CAAkF,QAAAmD,WAAA,EAAAlB,gBAAA,CAAhDvB,KAAA,CAAA0B,MAAM,CAAC1B,KAAA,CAAA0B,MAAM,CAACC,MAAM,OAAOX,WAAW,oB,yCAK9ExB,mBAAA,CAaM,OAbNkD,WAaM,GAZJlD,mBAAA,CAGM,OAHNmD,WAGM,G,4BAFJnD,mBAAA,CAAgC;IAA1BH,KAAK,EAAC;EAAO,GAAC,OAAK,qBACzBG,mBAAA,CAAiE,QAAjEoD,WAAiE,EAAArB,gBAAA,CAA1CzB,QAAA,CAAAY,YAAY,EAAEM,WAAW,wB,GAElDxB,mBAAA,CAGM,OAHNqD,WAGM,G,4BAFJrD,mBAAA,CAAgC;IAA1BH,KAAK,EAAC;EAAO,GAAC,OAAK,qBACzBG,mBAAA,CAA8C,QAA9CsD,WAA8C,EAAAvB,gBAAA,CAAvBvB,KAAA,CAAA0B,MAAM,CAACC,MAAM,iB,GAEtCnC,mBAAA,CAGM,OAHNuD,WAGM,G,4BAFJvD,mBAAA,CAAgC;IAA1BH,KAAK,EAAC;EAAO,GAAC,OAAK,qBACzBG,mBAAA,CAA0D,QAA1DwD,WAA0D,EAAAzB,gBAAA,CAAnCvB,KAAA,CAAAC,SAAS,iC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}