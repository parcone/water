{"ast":null,"code":"import { normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    ref: \"chartRef\",\n    style: _normalizeStyle({\n      width: $props.width,\n      height: $props.height,\n      minHeight: '300px'\n    })\n  }, null, 4 /* STYLE */);\n}","map":{"version":3,"names":["_createElementBlock","ref","style","_normalizeStyle","$props","width","height"],"sources":["D:\\restore\\water-melt\\frontend\\src\\components\\BaseEChart.vue"],"sourcesContent":["<!-- ECharts基础组件 -->\r\n<template>\r\n  <div \r\n    ref=\"chartRef\" \r\n    :style=\"{ \r\n      width: width, \r\n      height: height,\r\n      minHeight: '300px'\r\n    }\"\r\n  ></div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, onBeforeUnmount, watch } from 'vue'\r\nimport * as echarts from 'echarts'\r\nimport { debounce } from 'lodash-es'\r\n\r\nexport default {\r\n  name: 'BaseEChart',\r\n  props: {\r\n    options: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    width: {\r\n      type: String,\r\n      default: '100%'\r\n    },\r\n    height: {\r\n      type: String,\r\n      default: '100%'\r\n    },\r\n    theme: {\r\n      type: String,\r\n      default: ''\r\n    }\r\n  },\r\n  emits: ['chartReady'],\r\n  setup(props, { emit }) {\r\n    const chartRef = ref(null)\r\n    let chart = null\r\n\r\n    // 初始化图表\r\n    const initChart = () => {\r\n      if (!chartRef.value) return\r\n      \r\n      chart = echarts.init(chartRef.value, props.theme)\r\n      chart.setOption(props.options)\r\n      emit('chartReady', chart)\r\n\r\n      // 监听窗口大小变化\r\n      window.addEventListener('resize', handleResize)\r\n    }\r\n\r\n    // 防抖处理窗口大小变化\r\n    const handleResize = debounce(() => {\r\n      chart && chart.resize()\r\n    }, 100)\r\n\r\n    // 更新图表选项\r\n    const updateChart = () => {\r\n      if (!chart) return\r\n      chart.setOption(props.options)\r\n    }\r\n\r\n    // 监听选项变化\r\n    watch(\r\n      () => props.options,\r\n      () => {\r\n        updateChart()\r\n      },\r\n      { deep: true }\r\n    )\r\n\r\n    // 生命周期钩子\r\n    onMounted(() => {\r\n      initChart()\r\n    })\r\n\r\n    onBeforeUnmount(() => {\r\n      if (!chart) return\r\n      window.removeEventListener('resize', handleResize)\r\n      chart.dispose()\r\n      chart = null\r\n    })\r\n\r\n    return {\r\n      chartRef\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* 确保容器有最小高度 */\r\ndiv {\r\n  min-height: 300px;\r\n}\r\n</style> "],"mappings":";;uBAEEA,mBAAA,CAOO;IANLC,GAAG,EAAC,UAAU;IACbC,KAAK,EAAAC,eAAA;aAAmBC,MAAA,CAAAC,KAAK;cAAkBD,MAAA,CAAAE,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}