{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle } from \"vue\";\nconst _hoisted_1 = {\n  ref: \"chartRef\",\n  class: \"chart-container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"chart-loading\"\n};\nconst _hoisted_3 = {\n  class: \"loading-text\"\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"chart-empty\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Loading = _resolveComponent(\"Loading\");\n  const _component_el_icon = _resolveComponent(\"el-icon\");\n  const _component_el_empty = _resolveComponent(\"el-empty\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([\"base-chart\", {\n      loading: $props.loading\n    }]),\n    style: _normalizeStyle({\n      height: typeof $props.height === 'number' ? `${$props.height}px` : $props.height\n    })\n  }, [_createElementVNode(\"div\", _hoisted_1, null, 512 /* NEED_PATCH */), $props.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode(_component_el_icon, {\n    class: \"loading-icon\",\n    size: 32\n  }, {\n    default: _withCtx(() => [_createVNode(_component_Loading)]),\n    _: 1 /* STABLE */\n  }), _createElementVNode(\"span\", _hoisted_3, _toDisplayString($props.loadingText), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), !$props.loading && $props.showEmpty ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createVNode(_component_el_empty, {\n    description: $props.emptyText\n  }, null, 8 /* PROPS */, [\"description\"])])) : _createCommentVNode(\"v-if\", true)], 6 /* CLASS, STYLE */);\n}","map":{"version":3,"names":["ref","class","_createElementBlock","_normalizeClass","loading","$props","style","_normalizeStyle","height","_createElementVNode","_hoisted_1","_hoisted_2","_createVNode","_component_el_icon","size","_component_Loading","_hoisted_3","_toDisplayString","loadingText","showEmpty","_hoisted_4","_component_el_empty","description","emptyText"],"sources":["D:\\restore\\water-melt\\frontend\\src\\components\\BaseChart.vue"],"sourcesContent":["<template>\r\n  <div\r\n    class=\"base-chart\"\r\n    :class=\"{ loading }\"\r\n    :style=\"{ height: typeof height === 'number' ? `${height}px` : height }\"\r\n  >\r\n    <div ref=\"chartRef\" class=\"chart-container\"></div>\r\n    <div v-if=\"loading\" class=\"chart-loading\">\r\n      <el-icon class=\"loading-icon\" :size=\"32\"><Loading /></el-icon>\r\n      <span class=\"loading-text\">{{ loadingText }}</span>\r\n    </div>\r\n    <div v-if=\"!loading && showEmpty\" class=\"chart-empty\">\r\n      <el-empty :description=\"emptyText\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, onBeforeUnmount, watch } from 'vue'\r\nimport { Loading } from '@element-plus/icons-vue'\r\nimport * as echarts from 'echarts'\r\nimport { debounce } from 'lodash-es'\r\n\r\nexport default {\r\n  name: 'BaseChart',\r\n  components: {\r\n    Loading\r\n  },\r\n  props: {\r\n    options: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    height: {\r\n      type: [String, Number],\r\n      default: '400px'\r\n    },\r\n    loading: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    loadingText: {\r\n      type: String,\r\n      default: '加载中...'\r\n    },\r\n    emptyText: {\r\n      type: String,\r\n      default: '暂无数据'\r\n    },\r\n    theme: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    autoResize: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    showEmpty: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  emits: ['chart-ready', 'chart-click', 'chart-error'],\r\n  setup(props, { emit }) {\r\n    const chartRef = ref(null)\r\n    let chart = null\r\n\r\n    // 初始化图表\r\n    const initChart = () => {\r\n      if (!chartRef.value) return\r\n\r\n      try {\r\n        chart = echarts.init(chartRef.value, props.theme)\r\n        chart.setOption(props.options)\r\n        \r\n        // 绑定事件\r\n        chart.on('click', (params) => {\r\n          emit('chart-click', params)\r\n        })\r\n\r\n        emit('chart-ready', chart)\r\n      } catch (error) {\r\n        console.error('Chart initialization error:', error)\r\n        emit('chart-error', error)\r\n      }\r\n    }\r\n\r\n    // 更新图表选项\r\n    const updateChart = () => {\r\n      if (!chart) return\r\n\r\n      try {\r\n        chart.setOption(props.options)\r\n      } catch (error) {\r\n        console.error('Chart update error:', error)\r\n        emit('chart-error', error)\r\n      }\r\n    }\r\n\r\n    // 调整图表大小\r\n    const resizeChart = debounce(() => {\r\n      if (chart) {\r\n        chart.resize()\r\n      }\r\n    }, 100)\r\n\r\n    // 监听选项变化\r\n    watch(() => props.options, () => {\r\n      updateChart()\r\n    }, { deep: true })\r\n\r\n    // 监听主题变化\r\n    watch(() => props.theme, () => {\r\n      if (chart) {\r\n        chart.dispose()\r\n        initChart()\r\n      }\r\n    })\r\n\r\n    onMounted(() => {\r\n      initChart()\r\n      if (props.autoResize) {\r\n        window.addEventListener('resize', resizeChart)\r\n      }\r\n    })\r\n\r\n    onBeforeUnmount(() => {\r\n      if (props.autoResize) {\r\n        window.removeEventListener('resize', resizeChart)\r\n      }\r\n      if (chart) {\r\n        chart.dispose()\r\n        chart = null\r\n      }\r\n    })\r\n\r\n    return {\r\n      chartRef\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.base-chart {\r\n  position: relative;\r\n  width: 100%;\r\n  min-height: 200px;\r\n\r\n  .chart-container {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  .chart-loading {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    gap: $spacing-sm;\r\n\r\n    .loading-icon {\r\n      animation: rotate 1s linear infinite;\r\n      color: $primary-color;\r\n    }\r\n\r\n    .loading-text {\r\n      color: $text-secondary;\r\n      font-size: $font-size-base;\r\n    }\r\n  }\r\n\r\n  .chart-empty {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n  }\r\n}\r\n\r\n@keyframes rotate {\r\n  from { transform: rotate(0deg); }\r\n  to { transform: rotate(360deg); }\r\n}\r\n</style> "],"mappings":";;EAMSA,GAAG,EAAC,UAAU;EAACC,KAAK,EAAC;;;;EACNA,KAAK,EAAC;;;EAElBA,KAAK,EAAC;AAAc;;;EAEMA,KAAK,EAAC;;;;;;uBAV1CC,mBAAA,CAaM;IAZJD,KAAK,EAAAE,eAAA,EAAC,YAAY;MAAAC,OAAA,EACRC,MAAA,CAAAD;IAAO;IAChBE,KAAK,EAAAC,eAAA;MAAAC,MAAA,SAAmBH,MAAA,CAAAG,MAAM,mBAAmBH,MAAA,CAAAG,MAAM,OAAOH,MAAA,CAAAG;IAAM;MAErEC,mBAAA,CAAkD,OAAlDC,UAAkD,+BACvCL,MAAA,CAAAD,OAAO,I,cAAlBF,mBAAA,CAGM,OAHNS,UAGM,GAFJC,YAAA,CAA8DC,kBAAA;IAArDZ,KAAK,EAAC,cAAc;IAAEa,IAAI,EAAE;;sBAAI,MAAW,CAAXF,YAAA,CAAWG,kBAAA,E;;MACpDN,mBAAA,CAAmD,QAAnDO,UAAmD,EAAAC,gBAAA,CAArBZ,MAAA,CAAAa,WAAW,iB,yCAE/Bb,MAAA,CAAAD,OAAO,IAAIC,MAAA,CAAAc,SAAS,I,cAAhCjB,mBAAA,CAEM,OAFNkB,UAEM,GADJR,YAAA,CAAqCS,mBAAA;IAA1BC,WAAW,EAAEjB,MAAA,CAAAkB;EAAS,yC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}