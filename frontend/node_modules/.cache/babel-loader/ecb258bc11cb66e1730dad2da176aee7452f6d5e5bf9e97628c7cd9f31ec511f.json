{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport * as echarts from 'echarts';\nexport default {\n  __name: 'Analysis',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const monitorList = ref([{\n      name: '点A',\n      type: '温度',\n      value: '23.5°C',\n      status: '正常'\n    }, {\n      name: '点B',\n      type: '湿度',\n      value: '60%',\n      status: '正常'\n    }, {\n      name: '点C',\n      type: 'PH值',\n      value: '7.1',\n      status: '异常'\n    }, {\n      name: '点D',\n      type: '重金属',\n      value: '0.03mg/L',\n      status: '正常'\n    }]);\n    const chartRef = ref(null);\n    // 最新12张tif文件路径\n    const tifFiles = Array.from({\n      length: 12\n    }, (_, i) => {\n      const year = 2075;\n      const mm = String(12 - i).padStart(2, '0');\n      const name = `SSM_${year}${mm}01.tif`;\n      const url = `/assets/photos/photos1/${year}/${mm}/${name}`;\n      return {\n        name,\n        url\n      };\n    });\n    const tifCanvases = [];\n    onMounted(() => {\n      const chart = echarts.init(chartRef.value);\n      chart.setOption({\n        title: {\n          text: '近7天监测数据',\n          left: 'center',\n          textStyle: {\n            color: '#fff'\n          }\n        },\n        tooltip: {},\n        xAxis: {\n          data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日'],\n          axisLabel: {\n            color: '#fff'\n          }\n        },\n        yAxis: {\n          axisLabel: {\n            color: '#fff'\n          }\n        },\n        series: [{\n          type: 'line',\n          data: [23, 25, 22, 24, 26, 27, 25]\n        }],\n        backgroundColor: 'rgba(0,0,0,0)',\n        grid: {\n          left: 40,\n          right: 20,\n          top: 60,\n          bottom: 40\n        }\n      });\n    });\n    onMounted(async () => {\n      // 动态加载 geotiff.js\n      if (!window.GeoTIFF) {\n        alert('GeoTIFF 脚本未加载，请检查 index.html 是否已正确引入 CDN');\n        return;\n      }\n      for (let i = 0; i < tifFiles.length; i++) {\n        renderTifToCanvas(tifFiles[i].url, tifCanvases[i]);\n      }\n    });\n    async function renderTifToCanvas(url, canvas) {\n      if (!canvas || !window.GeoTIFF) return;\n      try {\n        const response = await fetch(url);\n        const arrayBuffer = await response.arrayBuffer();\n        const tiff = await window.GeoTIFF.fromArrayBuffer(arrayBuffer);\n        const image = await tiff.getImage();\n        const width = image.getWidth();\n        const height = image.getHeight();\n        const raster = await image.readRasters({\n          interleave: true\n        });\n        // 灰度或单波段\n        let data;\n        if (raster.length === width * height) {\n          data = new Uint8ClampedArray(width * height * 4);\n          for (let i = 0; i < width * height; i++) {\n            const v = raster[i];\n            data[i * 4 + 0] = v;\n            data[i * 4 + 1] = v;\n            data[i * 4 + 2] = v;\n            data[i * 4 + 3] = 255;\n          }\n        } else {\n          // 多波段（假设RGB）\n          data = new Uint8ClampedArray(width * height * 4);\n          for (let i = 0; i < width * height; i++) {\n            data[i * 4 + 0] = raster[i * 3 + 0] || 0;\n            data[i * 4 + 1] = raster[i * 3 + 1] || 0;\n            data[i * 4 + 2] = raster[i * 3 + 2] || 0;\n            data[i * 4 + 3] = 255;\n          }\n        }\n        const ctx = canvas.getContext('2d');\n        const imgData = new ImageData(data, width, height);\n        // 缩放到canvas\n        const tmpCanvas = document.createElement('canvas');\n        tmpCanvas.width = width;\n        tmpCanvas.height = height;\n        tmpCanvas.getContext('2d').putImageData(imgData, 0, 0);\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.drawImage(tmpCanvas, 0, 0, canvas.width, canvas.height);\n      } catch (e) {\n        console.error('tif渲染失败', url, e);\n        if (canvas) {\n          const ctx = canvas.getContext('2d');\n          ctx.clearRect(0, 0, canvas.width, canvas.height);\n          ctx.fillStyle = '#333';\n          ctx.fillRect(0, 0, canvas.width, canvas.height);\n          ctx.fillStyle = '#fff';\n          ctx.font = '12px sans-serif';\n          ctx.fillText('加载失败', 10, 60);\n          ctx.fillText(e?.message || e, 10, 80);\n        }\n      }\n    }\n    const __returned__ = {\n      monitorList,\n      chartRef,\n      tifFiles,\n      tifCanvases,\n      renderTifToCanvas,\n      ref,\n      onMounted,\n      get echarts() {\n        return echarts;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","echarts","monitorList","name","type","value","status","chartRef","tifFiles","Array","from","length","_","i","year","mm","String","padStart","url","tifCanvases","chart","init","setOption","title","text","left","textStyle","color","tooltip","xAxis","data","axisLabel","yAxis","series","backgroundColor","grid","right","top","bottom","window","GeoTIFF","alert","renderTifToCanvas","canvas","response","fetch","arrayBuffer","tiff","fromArrayBuffer","image","getImage","width","getWidth","height","getHeight","raster","readRasters","interleave","Uint8ClampedArray","v","ctx","getContext","imgData","ImageData","tmpCanvas","document","createElement","putImageData","clearRect","drawImage","e","console","error","fillStyle","fillRect","font","fillText","message"],"sources":["D:/restore/water-melt/frontend/src/views/Analysis.vue"],"sourcesContent":["<template>\r\n  <div class=\"analysis-view\">\r\n    <h2>智能监测</h2>\r\n    <div class=\"stats-cards\">\r\n      <div class=\"stat-card\">今日监测数据：<span>256</span></div>\r\n      <div class=\"stat-card\">异常数据：<span>5</span></div>\r\n      <div class=\"stat-card\">监测点总数：<span>32</span></div>\r\n    </div>\r\n    <div class=\"chart-section\">\r\n      <el-card style=\"margin-bottom: 20px;\">\r\n        <div ref=\"chartRef\" style=\"height:300px;width:100%\"></div>\r\n      </el-card>\r\n    </div>\r\n    <el-table :data=\"monitorList\" style=\"width: 100%;\">\r\n      <el-table-column prop=\"name\" label=\"监测点\" />\r\n      <el-table-column prop=\"type\" label=\"类型\" />\r\n      <el-table-column prop=\"value\" label=\"最新数据\" />\r\n      <el-table-column prop=\"status\" label=\"状态\" />\r\n    </el-table>\r\n    <div class=\"tif-preview-section\">\r\n      <h3>最新12张遥感影像预览（.tif）</h3>\r\n      <div class=\"tif-preview-grid\">\r\n        <div v-for=\"(tif, idx) in tifFiles\" :key=\"tif.name\" class=\"tif-preview-item\">\r\n          <canvas :ref=\"el => tifCanvases[idx] = el\" width=\"160\" height=\"120\"></canvas>\r\n          <div class=\"tif-caption\">{{ tif.name }}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue'\r\nimport * as echarts from 'echarts'\r\nconst monitorList = ref([\r\n  { name: '点A', type: '温度', value: '23.5°C', status: '正常' },\r\n  { name: '点B', type: '湿度', value: '60%', status: '正常' },\r\n  { name: '点C', type: 'PH值', value: '7.1', status: '异常' },\r\n  { name: '点D', type: '重金属', value: '0.03mg/L', status: '正常' }\r\n])\r\nconst chartRef = ref(null)\r\n// 最新12张tif文件路径\r\nconst tifFiles = Array.from({length: 12}, (_, i) => {\r\n  const year = 2075\r\n  const mm = String(12 - i).padStart(2, '0')\r\n  const name = `SSM_${year}${mm}01.tif`\r\n  const url = `/assets/photos/photos1/${year}/${mm}/${name}`\r\n  return { name, url }\r\n})\r\nconst tifCanvases = []\r\n\r\nonMounted(() => {\r\n  const chart = echarts.init(chartRef.value)\r\n  chart.setOption({\r\n    title: { text: '近7天监测数据', left: 'center', textStyle: { color: '#fff' } },\r\n    tooltip: {},\r\n    xAxis: { data: ['周一','周二','周三','周四','周五','周六','周日'], axisLabel: { color: '#fff' } },\r\n    yAxis: { axisLabel: { color: '#fff' } },\r\n    series: [{ type: 'line', data: [23, 25, 22, 24, 26, 27, 25] }],\r\n    backgroundColor: 'rgba(0,0,0,0)',\r\n    grid: { left: 40, right: 20, top: 60, bottom: 40 }\r\n  })\r\n})\r\n\r\nonMounted(async () => {\r\n  // 动态加载 geotiff.js\r\n  if (!window.GeoTIFF) {\r\n    alert('GeoTIFF 脚本未加载，请检查 index.html 是否已正确引入 CDN');\r\n    return;\r\n  }\r\n  for (let i = 0; i < tifFiles.length; i++) {\r\n    renderTifToCanvas(tifFiles[i].url, tifCanvases[i])\r\n  }\r\n})\r\n\r\nasync function renderTifToCanvas(url, canvas) {\r\n  if (!canvas || !window.GeoTIFF) return\r\n  try {\r\n    const response = await fetch(url)\r\n    const arrayBuffer = await response.arrayBuffer()\r\n    const tiff = await window.GeoTIFF.fromArrayBuffer(arrayBuffer)\r\n    const image = await tiff.getImage()\r\n    const width = image.getWidth()\r\n    const height = image.getHeight()\r\n    const raster = await image.readRasters({ interleave: true })\r\n    // 灰度或单波段\r\n    let data\r\n    if (raster.length === width * height) {\r\n      data = new Uint8ClampedArray(width * height * 4)\r\n      for (let i = 0; i < width * height; i++) {\r\n        const v = raster[i]\r\n        data[i * 4 + 0] = v\r\n        data[i * 4 + 1] = v\r\n        data[i * 4 + 2] = v\r\n        data[i * 4 + 3] = 255\r\n      }\r\n    } else {\r\n      // 多波段（假设RGB）\r\n      data = new Uint8ClampedArray(width * height * 4)\r\n      for (let i = 0; i < width * height; i++) {\r\n        data[i * 4 + 0] = raster[i * 3 + 0] || 0\r\n        data[i * 4 + 1] = raster[i * 3 + 1] || 0\r\n        data[i * 4 + 2] = raster[i * 3 + 2] || 0\r\n        data[i * 4 + 3] = 255\r\n      }\r\n    }\r\n    const ctx = canvas.getContext('2d')\r\n    const imgData = new ImageData(data, width, height)\r\n    // 缩放到canvas\r\n    const tmpCanvas = document.createElement('canvas')\r\n    tmpCanvas.width = width\r\n    tmpCanvas.height = height\r\n    tmpCanvas.getContext('2d').putImageData(imgData, 0, 0)\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height)\r\n    ctx.drawImage(tmpCanvas, 0, 0, canvas.width, canvas.height)\r\n  } catch (e) {\r\n    console.error('tif渲染失败', url, e)\r\n    if (canvas) {\r\n      const ctx = canvas.getContext('2d')\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height)\r\n      ctx.fillStyle = '#333'\r\n      ctx.fillRect(0, 0, canvas.width, canvas.height)\r\n      ctx.fillStyle = '#fff'\r\n      ctx.font = '12px sans-serif'\r\n      ctx.fillText('加载失败', 10, 60)\r\n      ctx.fillText(e?.message || e, 10, 80)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.analysis-view {\r\n  color: #fff;\r\n}\r\n.stats-cards {\r\n  display: flex;\r\n  gap: 20px;\r\n  margin-bottom: 20px;\r\n}\r\n.stat-card {\r\n  background: #002140;\r\n  padding: 12px 24px;\r\n  border-radius: 6px;\r\n  font-size: 16px;\r\n}\r\n.chart-section {\r\n  margin-bottom: 20px;\r\n}\r\n.tif-preview-section {\r\n  margin-top: 40px;\r\n  background: #001529;\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n}\r\n.tif-preview-grid {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 20px;\r\n  margin-top: 16px;\r\n}\r\n.tif-preview-item {\r\n  width: 180px;\r\n  text-align: center;\r\n}\r\n.tif-caption {\r\n  margin-top: 8px;\r\n  font-size: 13px;\r\n  color: #fff;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}