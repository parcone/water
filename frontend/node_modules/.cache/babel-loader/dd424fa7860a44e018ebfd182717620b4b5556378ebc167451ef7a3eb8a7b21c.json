{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  style: {\n    \"color\": \"red\"\n  }\n};\nconst _hoisted_2 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"h3\", null, \"GeoTIFF 测试\", -1 /* CACHED */)), $setup.error ? (_openBlock(), _createElementBlock(\"p\", _hoisted_1, _toDisplayString($setup.error), 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"p\", _hoisted_2, \"请打开控制台查看 GeoTIFF 解析结果。\"))]);\n}","map":{"version":3,"names":["style","_createElementBlock","_createElementVNode","$setup","error","_hoisted_1","_toDisplayString","_hoisted_2"],"sources":["D:\\restore\\water-melt\\frontend\\src\\components\\GeoTiffTest.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h3>GeoTIFF 测试</h3>\r\n    <p v-if=\"error\" style=\"color:red\">{{ error }}</p>\r\n    <p v-else>请打开控制台查看 GeoTIFF 解析结果。</p>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nconst error = ref('');\r\n\r\nonMounted(async () => {\r\n  try {\r\n    if (!window.GeoTIFF) {\r\n      error.value = 'GeoTIFF 脚本未加载';\r\n      return;\r\n    }\r\n    // 这里假设 public 目录下有 test.tif 文件\r\n    const tiff = await window.GeoTIFF.fromUrl('/test.tif');\r\n    const image = await tiff.getImage();\r\n    const data = await image.readRasters();\r\n    console.log('GeoTIFF 数据:', data);\r\n  } catch (e) {\r\n    error.value = 'GeoTIFF 解析失败: ' + e.message;\r\n    console.error(e);\r\n  }\r\n});\r\n</script> "],"mappings":";;;EAGoBA,KAAiB,EAAjB;IAAA;EAAA;;;;;;uBAFlBC,mBAAA,CAIM,c,0BAHJC,mBAAA,CAAmB,YAAf,YAAU,qBACLC,MAAA,CAAAC,KAAK,I,cAAdH,mBAAA,CAAiD,KAAjDI,UAAiD,EAAAC,gBAAA,CAAZH,MAAA,CAAAC,KAAK,qB,cAC1CH,mBAAA,CAAoC,KAAAM,UAAA,EAA1B,wBAAsB,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}