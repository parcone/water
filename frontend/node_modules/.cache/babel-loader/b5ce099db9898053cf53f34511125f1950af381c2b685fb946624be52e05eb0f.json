{"ast":null,"code":"import { ref } from 'vue';\nexport default {\n  __name: 'DataManagement',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const dataList = ref([{\n      name: 'soil_data_2024.xlsx',\n      date: '2024-07-11',\n      size: '2MB'\n    }, {\n      name: 'monitoring_2024.csv',\n      date: '2024-07-10',\n      size: '1.2MB'\n    }]);\n    function handleUpload(file) {\n      alert('上传功能待实现: ' + file.name);\n    }\n    function download(row) {\n      alert('下载功能待实现: ' + row.name);\n    }\n    function remove(row) {\n      dataList.value = dataList.value.filter(item => item !== row);\n    }\n    // 只用 require.context 导入 jpg/png\n    function importAll(r) {\n      return r.keys().map(key => ({\n        name: key.split('/').pop(),\n        path: key,\n        url: r(key),\n        type: 'img'\n      }));\n    }\n    const imgFiles = importAll(require.context('../assets/photos', true, /\\.(jpe?g|png)$/i));\n\n    // 动态生成所有 .tif 文件的静态路径（假设 2025~2075 年 photos1 目录结构）\n    const tifFiles = [];\n    for (let year = 2025; year <= 2075; year++) {\n      for (let month = 1; month <= 12; month++) {\n        const mm = String(month).padStart(2, '0');\n        const name = `SSM_${year}${mm}01.tif`;\n        const url = `/assets/photos/photos1/${year}/${mm}/${name}`;\n        tifFiles.push({\n          name,\n          url,\n          type: 'tif'\n        });\n      }\n    }\n    const allPhotos = ref([...imgFiles, ...tifFiles]);\n    const __returned__ = {\n      dataList,\n      handleUpload,\n      download,\n      remove,\n      importAll,\n      imgFiles,\n      tifFiles,\n      allPhotos,\n      ref\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","dataList","name","date","size","handleUpload","file","alert","download","row","remove","value","filter","item","importAll","r","keys","map","key","split","pop","path","url","type","imgFiles","require","context","tifFiles","year","month","mm","String","padStart","push","allPhotos"],"sources":["D:/restore/water-melt/frontend/src/views/DataManagement.vue"],"sourcesContent":["<!-- DataManagement.vue -->\r\n<template>\r\n  <div class=\"data-management-view\">\r\n    <h2>数据管理</h2>\r\n    <el-upload\r\n      class=\"upload-demo\"\r\n      drag\r\n      action=\"#\"\r\n      :show-file-list=\"false\"\r\n      :on-change=\"handleUpload\"\r\n      style=\"margin-bottom: 20px;\"\r\n    >\r\n      <i class=\"el-icon-upload\"></i>\r\n      <div class=\"el-upload__text\">将文件拖到此处，或<em>点击上传</em></div>\r\n    </el-upload>\r\n    <el-table :data=\"dataList\" style=\"width: 100%; margin-bottom: 30px;\">\r\n      <el-table-column prop=\"name\" label=\"文件名\" />\r\n      <el-table-column prop=\"date\" label=\"上传日期\" />\r\n      <el-table-column prop=\"size\" label=\"大小\" />\r\n      <el-table-column label=\"操作\">\r\n        <template #default=\"scope\">\r\n          <el-button size=\"mini\" @click=\"download(scope.row)\">下载</el-button>\r\n          <el-button size=\"mini\" type=\"danger\" @click=\"remove(scope.row)\">删除</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    <h3>资源图片动态展示（assets/photos 全部）</h3>\r\n    <div class=\"photo-grid\">\r\n      <div v-for=\"file in allPhotos\" :key=\"file.path\" class=\"photo-item\">\r\n        <template v-if=\"file.type === 'img'\">\r\n          <img :src=\"file.url\" :alt=\"file.name\" class=\"photo-img\" />\r\n          <div class=\"photo-caption\">{{ file.name }}</div>\r\n        </template>\r\n        <template v-else>\r\n          <div class=\"photo-tif\">\r\n            <span>{{ file.name }}</span>\r\n            <a :href=\"file.url\" :download=\"file.name\">\r\n              <el-button size=\"mini\">下载</el-button>\r\n            </a>\r\n          </div>\r\n        </template>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue'\r\nconst dataList = ref([\r\n  { name: 'soil_data_2024.xlsx', date: '2024-07-11', size: '2MB' },\r\n  { name: 'monitoring_2024.csv', date: '2024-07-10', size: '1.2MB' }\r\n])\r\nfunction handleUpload(file) {\r\n  alert('上传功能待实现: ' + file.name)\r\n}\r\nfunction download(row) {\r\n  alert('下载功能待实现: ' + row.name)\r\n}\r\nfunction remove(row) {\r\n  dataList.value = dataList.value.filter(item => item !== row)\r\n}\r\n// 只用 require.context 导入 jpg/png\r\nfunction importAll(r) {\r\n  return r.keys().map(key => ({\r\n    name: key.split('/').pop(),\r\n    path: key,\r\n    url: r(key),\r\n    type: 'img'\r\n  }))\r\n}\r\nconst imgFiles = importAll(require.context('../assets/photos', true, /\\.(jpe?g|png)$/i))\r\n\r\n// 动态生成所有 .tif 文件的静态路径（假设 2025~2075 年 photos1 目录结构）\r\nconst tifFiles = []\r\nfor (let year = 2025; year <= 2075; year++) {\r\n  for (let month = 1; month <= 12; month++) {\r\n    const mm = String(month).padStart(2, '0')\r\n    const name = `SSM_${year}${mm}01.tif`\r\n    const url = `/assets/photos/photos1/${year}/${mm}/${name}`\r\n    tifFiles.push({ name, url, type: 'tif' })\r\n  }\r\n}\r\nconst allPhotos = ref([...imgFiles, ...tifFiles])\r\n</script>\r\n\r\n<style scoped>\r\n.data-management-view {\r\n  color: #fff;\r\n}\r\n.upload-demo {\r\n  background: #002140;\r\n  border: 1px dashed #1890ff;\r\n  border-radius: 6px;\r\n  padding: 30px 0;\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n.photo-grid {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 20px;\r\n  margin-top: 20px;\r\n}\r\n.photo-item {\r\n  background: #002140;\r\n  border-radius: 6px;\r\n  padding: 10px;\r\n  width: 180px;\r\n  text-align: center;\r\n}\r\n.photo-img {\r\n  width: 160px;\r\n  height: 120px;\r\n  object-fit: cover;\r\n  border-radius: 4px;\r\n  background: #222;\r\n}\r\n.photo-caption {\r\n  margin-top: 8px;\r\n  font-size: 13px;\r\n  color: #fff;\r\n}\r\n.photo-tif {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 8px;\r\n}\r\n</style> "],"mappings":"AA+CA,SAASA,GAAG,QAAQ,KAAK;;;;;;;IACzB,MAAMC,QAAQ,GAAGD,GAAG,CAAC,CACnB;MAAEE,IAAI,EAAE,qBAAqB;MAAEC,IAAI,EAAE,YAAY;MAAEC,IAAI,EAAE;IAAM,CAAC,EAChE;MAAEF,IAAI,EAAE,qBAAqB;MAAEC,IAAI,EAAE,YAAY;MAAEC,IAAI,EAAE;IAAQ,CAAC,CACnE,CAAC;IACF,SAASC,YAAYA,CAACC,IAAI,EAAE;MAC1BC,KAAK,CAAC,WAAW,GAAGD,IAAI,CAACJ,IAAI,CAAC;IAChC;IACA,SAASM,QAAQA,CAACC,GAAG,EAAE;MACrBF,KAAK,CAAC,WAAW,GAAGE,GAAG,CAACP,IAAI,CAAC;IAC/B;IACA,SAASQ,MAAMA,CAACD,GAAG,EAAE;MACnBR,QAAQ,CAACU,KAAK,GAAGV,QAAQ,CAACU,KAAK,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,KAAKJ,GAAG,CAAC;IAC9D;IACA;IACA,SAASK,SAASA,CAACC,CAAC,EAAE;MACpB,OAAOA,CAAC,CAACC,IAAI,CAAC,CAAC,CAACC,GAAG,CAACC,GAAG,KAAK;QAC1BhB,IAAI,EAAEgB,GAAG,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC;QAC1BC,IAAI,EAAEH,GAAG;QACTI,GAAG,EAAEP,CAAC,CAACG,GAAG,CAAC;QACXK,IAAI,EAAE;MACR,CAAC,CAAC,CAAC;IACL;IACA,MAAMC,QAAQ,GAAGV,SAAS,CAACW,OAAO,CAACC,OAAO,CAAC,kBAAkB,EAAE,IAAI,EAAE,iBAAiB,CAAC,CAAC;;IAExF;IACA,MAAMC,QAAQ,GAAG,EAAE;IACnB,KAAK,IAAIC,IAAI,GAAG,IAAI,EAAEA,IAAI,IAAI,IAAI,EAAEA,IAAI,EAAE,EAAE;MAC1C,KAAK,IAAIC,KAAK,GAAG,CAAC,EAAEA,KAAK,IAAI,EAAE,EAAEA,KAAK,EAAE,EAAE;QACxC,MAAMC,EAAE,GAAGC,MAAM,CAACF,KAAK,CAAC,CAACG,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;QACzC,MAAM9B,IAAI,GAAG,OAAO0B,IAAI,GAAGE,EAAE,QAAQ;QACrC,MAAMR,GAAG,GAAG,0BAA0BM,IAAI,IAAIE,EAAE,IAAI5B,IAAI,EAAE;QAC1DyB,QAAQ,CAACM,IAAI,CAAC;UAAE/B,IAAI;UAAEoB,GAAG;UAAEC,IAAI,EAAE;QAAM,CAAC,CAAC;MAC3C;IACF;IACA,MAAMW,SAAS,GAAGlC,GAAG,CAAC,CAAC,GAAGwB,QAAQ,EAAE,GAAGG,QAAQ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}