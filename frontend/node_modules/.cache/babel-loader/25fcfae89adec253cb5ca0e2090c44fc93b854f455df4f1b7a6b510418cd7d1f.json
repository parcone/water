{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"settings-page\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_option = _resolveComponent(\"el-option\");\n  const _component_el_select = _resolveComponent(\"el-select\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_switch = _resolveComponent(\"el-switch\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_base_panel = _resolveComponent(\"base-panel\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_base_panel, {\n    title: \"系统设置\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form, {\n      \"label-width\": \"120px\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        label: \"主题设置\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_select, {\n          modelValue: $data.settings.theme,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.settings.theme = $event),\n          onChange: $options.handleThemeChange\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_option, {\n            label: \"浅色主题\",\n            value: \"light\"\n          }), _createVNode(_component_el_option, {\n            label: \"深色主题\",\n            value: \"dark\"\n          })]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\", \"onChange\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"语言设置\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_select, {\n          modelValue: $data.settings.language,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.settings.language = $event)\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_option, {\n            label: \"简体中文\",\n            value: \"zh-CN\"\n          }), _createVNode(_component_el_option, {\n            label: \"English\",\n            value: \"en-US\"\n          })]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"通知设置\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_switch, {\n          modelValue: $data.settings.notifications,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.settings.notifications = $event)\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, null, {\n        default: _withCtx(() => [_createVNode(_component_el_button, {\n          type: \"primary\",\n          onClick: $options.saveSettings\n        }, {\n          default: _withCtx(() => _cache[3] || (_cache[3] = [_createTextVNode(\"保存设置\")])),\n          _: 1 /* STABLE */,\n          __: [3]\n        }, 8 /* PROPS */, [\"onClick\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_base_panel","title","_component_el_form","_component_el_form_item","label","_component_el_select","$data","settings","theme","$event","onChange","$options","handleThemeChange","_component_el_option","value","language","_component_el_switch","notifications","_component_el_button","type","onClick","saveSettings","_cache"],"sources":["D:\\restore\\water-melt\\frontend\\src\\views\\Settings.vue"],"sourcesContent":["<template>\r\n  <div class=\"settings-page\">\r\n    <base-panel title=\"系统设置\">\r\n      <el-form label-width=\"120px\">\r\n        <el-form-item label=\"主题设置\">\r\n          <el-select v-model=\"settings.theme\" @change=\"handleThemeChange\">\r\n            <el-option label=\"浅色主题\" value=\"light\"></el-option>\r\n            <el-option label=\"深色主题\" value=\"dark\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"语言设置\">\r\n          <el-select v-model=\"settings.language\">\r\n            <el-option label=\"简体中文\" value=\"zh-CN\"></el-option>\r\n            <el-option label=\"English\" value=\"en-US\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"通知设置\">\r\n          <el-switch v-model=\"settings.notifications\"></el-switch>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"saveSettings\">保存设置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </base-panel>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Settings',\r\n  data() {\r\n    return {\r\n      settings: {\r\n        theme: 'light',\r\n        language: 'zh-CN',\r\n        notifications: true\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    handleThemeChange(theme) {\r\n      this.$theme.toggle(theme === 'dark' ? 'dark' : '')\r\n    },\r\n    saveSettings() {\r\n      // TODO: Implement settings save logic\r\n      this.$message.success('设置已保存')\r\n    }\r\n  },\r\n  mounted() {\r\n    // Initialize theme from current setting\r\n    this.settings.theme = this.$theme.get() === 'dark' ? 'dark' : 'light'\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import '@/styles/variables.scss';\r\n\r\n.settings-page {\r\n  padding: $spacing-md;\r\n}\r\n</style> "],"mappings":";;EACOA,KAAK,EAAC;AAAe;;;;;;;;;uBAA1BC,mBAAA,CAuBM,OAvBNC,UAuBM,GAtBJC,YAAA,CAqBaC,qBAAA;IArBDC,KAAK,EAAC;EAAM;sBACtB,MAmBU,CAnBVF,YAAA,CAmBUG,kBAAA;MAnBD,aAAW,EAAC;IAAO;wBAC1B,MAKe,CALfH,YAAA,CAKeI,uBAAA;QALDC,KAAK,EAAC;MAAM;0BACxB,MAGY,CAHZL,YAAA,CAGYM,oBAAA;sBAHQC,KAAA,CAAAC,QAAQ,CAACC,KAAK;qEAAdF,KAAA,CAAAC,QAAQ,CAACC,KAAK,GAAAC,MAAA;UAAGC,QAAM,EAAEC,QAAA,CAAAC;;4BAC3C,MAAkD,CAAlDb,YAAA,CAAkDc,oBAAA;YAAvCT,KAAK,EAAC,MAAM;YAACU,KAAK,EAAC;cAC9Bf,YAAA,CAAiDc,oBAAA;YAAtCT,KAAK,EAAC,MAAM;YAACU,KAAK,EAAC;;;;;UAGlCf,YAAA,CAKeI,uBAAA;QALDC,KAAK,EAAC;MAAM;0BACxB,MAGY,CAHZL,YAAA,CAGYM,oBAAA;sBAHQC,KAAA,CAAAC,QAAQ,CAACQ,QAAQ;qEAAjBT,KAAA,CAAAC,QAAQ,CAACQ,QAAQ,GAAAN,MAAA;;4BACnC,MAAkD,CAAlDV,YAAA,CAAkDc,oBAAA;YAAvCT,KAAK,EAAC,MAAM;YAACU,KAAK,EAAC;cAC9Bf,YAAA,CAAqDc,oBAAA;YAA1CT,KAAK,EAAC,SAAS;YAACU,KAAK,EAAC;;;;;UAGrCf,YAAA,CAEeI,uBAAA;QAFDC,KAAK,EAAC;MAAM;0BACxB,MAAwD,CAAxDL,YAAA,CAAwDiB,oBAAA;sBAApCV,KAAA,CAAAC,QAAQ,CAACU,aAAa;qEAAtBX,KAAA,CAAAC,QAAQ,CAACU,aAAa,GAAAR,MAAA;;;UAE5CV,YAAA,CAEeI,uBAAA;0BADb,MAAgE,CAAhEJ,YAAA,CAAgEmB,oBAAA;UAArDC,IAAI,EAAC,SAAS;UAAEC,OAAK,EAAET,QAAA,CAAAU;;4BAAc,MAAIC,MAAA,QAAAA,MAAA,O,iBAAJ,MAAI,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}