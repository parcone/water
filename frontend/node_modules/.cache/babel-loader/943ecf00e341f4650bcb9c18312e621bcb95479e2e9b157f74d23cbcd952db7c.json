{"ast":null,"code":"import { ref, computed, onMounted, onBeforeUnmount } from 'vue';\nimport { VideoPlay, VideoPause, RefreshRight, Picture, PictureRounded } from '@element-plus/icons-vue';\n\n// 使用require.context一次性加载所有图片\nfunction loadAllImages() {\n  const allImages = {};\n  try {\n    // 修正图片路径\n    const requireImages = require.context('./photos', false, /\\.(png|jpg|jpeg|gif)$/i);\n    requireImages.keys().forEach(key => {\n      const filename = key.replace('./', '');\n      allImages[filename] = requireImages(key);\n    });\n    return allImages;\n  } catch (error) {\n    console.error('加载图片失败:', error);\n    return {};\n  }\n}\n\n// 解析文件名中的日期信息\nfunction parseImageFilename(filename) {\n  const match = filename.match(/(\\d{4})_(\\d{2})_\\w+_(\\d{8})/);\n  if (match) {\n    const [, year, month, dateStr] = match;\n    const fullYear = dateStr.substring(0, 4);\n    const fullMonth = dateStr.substring(4, 6);\n    const day = dateStr.substring(6, 8);\n    return {\n      filename,\n      year: parseInt(fullYear),\n      month: parseInt(fullMonth),\n      day: parseInt(day),\n      displayName: `${fullYear}年${fullMonth}月${day}日`,\n      sortKey: parseInt(dateStr)\n    };\n  }\n  return {\n    filename,\n    displayName: filename.replace(/\\.(png|jpg|jpeg|gif)$/i, ''),\n    sortKey: 0\n  };\n}\nexport default {\n  name: 'PhotoTimeline',\n  components: {\n    VideoPlay,\n    VideoPause,\n    RefreshRight,\n    Picture,\n    PictureRounded\n  },\n  setup() {\n    const photos = ref([]);\n    const currentIndex = ref(0);\n    const isPlaying = ref(false);\n    const playSpeed = ref(2000);\n    const playInterval = ref(null);\n    const isLoading = ref(false);\n    const allImages = ref({});\n    const preloadedImages = ref(new Set());\n    const currentPhoto = computed(() => photos.value[currentIndex.value] || null);\n    const nextPhotos = computed(() => {\n      const start = currentIndex.value + 1;\n      const end = Math.min(start + 3, photos.value.length);\n      return photos.value.slice(start, end);\n    });\n    async function initializeComponent() {\n      isLoading.value = true;\n      try {\n        allImages.value = loadAllImages();\n        await generatePhotoData();\n        await preloadNextBatch();\n      } catch (error) {\n        console.error('初始化失败:', error);\n      } finally {\n        isLoading.value = false;\n      }\n    }\n    async function generatePhotoData() {\n      const imageFilenames = Object.keys(allImages.value);\n      if (imageFilenames.length === 0) return;\n      photos.value = imageFilenames.map(filename => parseImageFilename(filename)).sort((a, b) => a.sortKey - b.sortKey);\n    }\n    function getImageUrl(filename) {\n      return allImages.value[filename] || '';\n    }\n    async function preloadNextBatch() {\n      if (nextPhotos.value.length === 0) return;\n      for (const photo of nextPhotos.value) {\n        if (!preloadedImages.value.has(photo.filename)) {\n          const img = new Image();\n          img.src = getImageUrl(photo.filename);\n          img.onload = () => {\n            preloadedImages.value.add(photo.filename);\n          };\n        }\n      }\n    }\n    function playPause() {\n      if (isPlaying.value) {\n        stopPlay();\n      } else {\n        startPlay();\n      }\n    }\n    function startPlay() {\n      if (photos.value.length === 0) return;\n      isPlaying.value = true;\n      playInterval.value = setInterval(() => {\n        currentIndex.value = (currentIndex.value + 1) % photos.value.length;\n      }, playSpeed.value);\n    }\n    function stopPlay() {\n      isPlaying.value = false;\n      if (playInterval.value) {\n        clearInterval(playInterval.value);\n        playInterval.value = null;\n      }\n    }\n    function updatePlaySpeed() {\n      if (isPlaying.value) {\n        stopPlay();\n        startPlay();\n      }\n    }\n    function reset() {\n      stopPlay();\n      currentIndex.value = 0;\n    }\n    onMounted(() => {\n      initializeComponent();\n    });\n    onBeforeUnmount(() => {\n      stopPlay();\n    });\n    return {\n      photos,\n      currentIndex,\n      isPlaying,\n      playSpeed,\n      isLoading,\n      currentPhoto,\n      getImageUrl,\n      playPause,\n      reset,\n      updatePlaySpeed\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","onBeforeUnmount","VideoPlay","VideoPause","RefreshRight","Picture","PictureRounded","loadAllImages","allImages","requireImages","require","context","keys","forEach","key","filename","replace","error","console","parseImageFilename","match","year","month","dateStr","fullYear","substring","fullMonth","day","parseInt","displayName","sortKey","name","components","setup","photos","currentIndex","isPlaying","playSpeed","playInterval","isLoading","preloadedImages","Set","currentPhoto","value","nextPhotos","start","end","Math","min","length","slice","initializeComponent","generatePhotoData","preloadNextBatch","imageFilenames","Object","map","sort","a","b","getImageUrl","photo","has","img","Image","src","onload","add","playPause","stopPlay","startPlay","setInterval","clearInterval","updatePlaySpeed","reset"],"sources":["D:\\restore\\water-melt\\frontend\\src\\assets\\water\\1.vue"],"sourcesContent":["<template>\n  <div class=\"photo-timeline\">\n    <div class=\"timeline-header\">\n      <h2>图片时间轴</h2>\n      <div class=\"controls\">\n        <el-button @click=\"playPause\" :type=\"isPlaying ? 'warning' : 'primary'\" size=\"small\">\n          <el-icon><VideoPlay v-if=\"!isPlaying\" /><VideoPause v-else /></el-icon>\n          {{ isPlaying ? '暂停' : '播放' }}\n        </el-button>\n        <el-button @click=\"reset\" type=\"info\" size=\"small\">\n          <el-icon><RefreshRight /></el-icon>\n          重置\n        </el-button>\n        <el-select v-model=\"playSpeed\" size=\"small\" @change=\"updatePlaySpeed\" style=\"width: 100px\">\n          <el-option label=\"0.5秒\" :value=\"500\" />\n          <el-option label=\"1秒\" :value=\"1000\" />\n          <el-option label=\"2秒\" :value=\"2000\" />\n          <el-option label=\"3秒\" :value=\"3000\" />\n        </el-select>\n      </div>\n    </div>\n\n    <div class=\"image-container\">\n      <div v-if=\"currentPhoto\" class=\"image-wrapper\">\n        <el-image\n          :src=\"getImageUrl(currentPhoto.filename)\"\n          :alt=\"currentPhoto.displayName\"\n          class=\"timeline-image\"\n          fit=\"contain\"\n          :loading=\"isLoading ? 'eager' : 'lazy'\"\n          :preview-src-list=\"[getImageUrl(currentPhoto.filename)]\"\n        >\n          <template #placeholder>\n            <div class=\"image-placeholder\">\n              <el-icon><Picture /></el-icon>\n              <span>加载中...</span>\n            </div>\n          </template>\n          <template #error>\n            <div class=\"image-error\">\n              <el-icon><PictureRounded /></el-icon>\n              <span>加载失败</span>\n            </div>\n          </template>\n        </el-image>\n        <div class=\"image-info\">\n          <div class=\"date-info\">{{ currentPhoto.displayName }}</div>\n          <div class=\"progress-info\">{{ currentIndex + 1 }} / {{ photos.length }}</div>\n        </div>\n      </div>\n      <div v-else class=\"no-image\">\n        <el-empty :image-size=\"200\" description=\"暂无图片数据\" />\n      </div>\n    </div>\n\n    <div class=\"timeline-slider\">\n      <el-slider\n        v-model=\"currentIndex\"\n        :min=\"0\"\n        :max=\"Math.max(0, photos.length - 1)\"\n        :disabled=\"photos.length === 0\"\n        show-stops\n        :step=\"1\"\n      />\n      <div class=\"slider-labels\">\n        <span v-if=\"photos.length > 0\">{{ photos[0]?.displayName }}</span>\n        <span v-if=\"photos.length > 1\">{{ photos[photos.length - 1]?.displayName }}</span>\n      </div>\n    </div>\n\n    <div class=\"timeline-info\">\n      <el-descriptions :column=\"3\" border>\n        <el-descriptions-item label=\"当前时间\">\n          {{ currentPhoto?.displayName || '无' }}\n        </el-descriptions-item>\n        <el-descriptions-item label=\"总图片数\">\n          {{ photos.length }}\n        </el-descriptions-item>\n        <el-descriptions-item label=\"播放状态\">\n          <el-tag :type=\"isPlaying ? 'success' : 'info'\">\n            {{ isPlaying ? '播放中' : '已暂停' }}\n          </el-tag>\n        </el-descriptions-item>\n      </el-descriptions>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted, onBeforeUnmount } from 'vue'\nimport {\n  VideoPlay,\n  VideoPause,\n  RefreshRight,\n  Picture,\n  PictureRounded\n} from '@element-plus/icons-vue'\n\n// 使用require.context一次性加载所有图片\nfunction loadAllImages() {\n  const allImages = {}\n\n  try {\n    // 修正图片路径\n    const requireImages = require.context('./photos', false, /\\.(png|jpg|jpeg|gif)$/i)\n    requireImages.keys().forEach(key => {\n      const filename = key.replace('./', '')\n      allImages[filename] = requireImages(key)\n    })\n    return allImages\n  } catch (error) {\n    console.error('加载图片失败:', error)\n    return {}\n  }\n}\n\n// 解析文件名中的日期信息\nfunction parseImageFilename(filename) {\n  const match = filename.match(/(\\d{4})_(\\d{2})_\\w+_(\\d{8})/)\n  if (match) {\n    const [, year, month, dateStr] = match\n    const fullYear = dateStr.substring(0, 4)\n    const fullMonth = dateStr.substring(4, 6)\n    const day = dateStr.substring(6, 8)\n    return {\n      filename,\n      year: parseInt(fullYear),\n      month: parseInt(fullMonth),\n      day: parseInt(day),\n      displayName: `${fullYear}年${fullMonth}月${day}日`,\n      sortKey: parseInt(dateStr)\n    }\n  }\n  return {\n    filename,\n    displayName: filename.replace(/\\.(png|jpg|jpeg|gif)$/i, ''),\n    sortKey: 0\n  }\n}\n\nexport default {\n  name: 'PhotoTimeline',\n  components: {\n    VideoPlay,\n    VideoPause,\n    RefreshRight,\n    Picture,\n    PictureRounded\n  },\n  setup() {\n    const photos = ref([])\n    const currentIndex = ref(0)\n    const isPlaying = ref(false)\n    const playSpeed = ref(2000)\n    const playInterval = ref(null)\n    const isLoading = ref(false)\n    const allImages = ref({})\n    const preloadedImages = ref(new Set())\n\n    const currentPhoto = computed(() => photos.value[currentIndex.value] || null)\n    \n    const nextPhotos = computed(() => {\n      const start = currentIndex.value + 1\n      const end = Math.min(start + 3, photos.value.length)\n      return photos.value.slice(start, end)\n    })\n\n    async function initializeComponent() {\n      isLoading.value = true\n      try {\n        allImages.value = loadAllImages()\n        await generatePhotoData()\n        await preloadNextBatch()\n      } catch (error) {\n        console.error('初始化失败:', error)\n      } finally {\n        isLoading.value = false\n      }\n    }\n\n    async function generatePhotoData() {\n      const imageFilenames = Object.keys(allImages.value)\n      if (imageFilenames.length === 0) return\n\n      photos.value = imageFilenames\n        .map(filename => parseImageFilename(filename))\n        .sort((a, b) => a.sortKey - b.sortKey)\n    }\n\n    function getImageUrl(filename) {\n      return allImages.value[filename] || ''\n    }\n\n    async function preloadNextBatch() {\n      if (nextPhotos.value.length === 0) return\n\n      for (const photo of nextPhotos.value) {\n        if (!preloadedImages.value.has(photo.filename)) {\n          const img = new Image()\n          img.src = getImageUrl(photo.filename)\n          img.onload = () => {\n            preloadedImages.value.add(photo.filename)\n          }\n        }\n      }\n    }\n\n    function playPause() {\n      if (isPlaying.value) {\n        stopPlay()\n      } else {\n        startPlay()\n      }\n    }\n\n    function startPlay() {\n      if (photos.value.length === 0) return\n\n      isPlaying.value = true\n      playInterval.value = setInterval(() => {\n        currentIndex.value = (currentIndex.value + 1) % photos.value.length\n      }, playSpeed.value)\n    }\n\n    function stopPlay() {\n      isPlaying.value = false\n      if (playInterval.value) {\n        clearInterval(playInterval.value)\n        playInterval.value = null\n      }\n    }\n\n    function updatePlaySpeed() {\n      if (isPlaying.value) {\n        stopPlay()\n        startPlay()\n      }\n    }\n\n    function reset() {\n      stopPlay()\n      currentIndex.value = 0\n    }\n\n    onMounted(() => {\n      initializeComponent()\n    })\n\n    onBeforeUnmount(() => {\n      stopPlay()\n    })\n\n    return {\n      photos,\n      currentIndex,\n      isPlaying,\n      playSpeed,\n      isLoading,\n      currentPhoto,\n      getImageUrl,\n      playPause,\n      reset,\n      updatePlaySpeed\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.photo-timeline {\n  height: 100%;\n  padding: 20px;\n  background: var(--el-bg-color);\n  border-radius: 8px;\n  box-shadow: var(--el-box-shadow-light);\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  .timeline-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding-bottom: 16px;\n    border-bottom: 1px solid var(--el-border-color-light);\n\n    h2 {\n      margin: 0;\n      font-size: 18px;\n      color: var(--el-text-color-primary);\n    }\n\n    .controls {\n      display: flex;\n      gap: 12px;\n      align-items: center;\n    }\n  }\n\n  .image-container {\n    flex: 1;\n    min-height: 0;\n    position: relative;\n    border-radius: 8px;\n    overflow: hidden;\n    background: var(--el-bg-color-page);\n\n    .image-wrapper {\n      height: 100%;\n      display: flex;\n      flex-direction: column;\n\n      .timeline-image {\n        flex: 1;\n        width: 100%;\n        object-fit: contain;\n        background: var(--el-bg-color-page);\n      }\n\n      .image-info {\n        padding: 12px;\n        background: rgba(0, 0, 0, 0.5);\n        color: #fff;\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        backdrop-filter: blur(8px);\n      }\n    }\n\n    .image-placeholder,\n    .image-error {\n      height: 100%;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      color: var(--el-text-color-secondary);\n      gap: 12px;\n\n      .el-icon {\n        font-size: 48px;\n      }\n    }\n\n    .no-image {\n      height: 100%;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n  }\n\n  .timeline-slider {\n    padding: 0 16px;\n\n    .slider-labels {\n      display: flex;\n      justify-content: space-between;\n      margin-top: 8px;\n      color: var(--el-text-color-secondary);\n      font-size: 12px;\n    }\n  }\n\n  .timeline-info {\n    :deep(.el-descriptions) {\n      --el-descriptions-item-bordered-label-background: var(--el-bg-color-page);\n    }\n  }\n}\n</style>"],"mappings":"AAyFA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,eAAc,QAAS,KAAI;AAC9D,SACEC,SAAS,EACTC,UAAU,EACVC,YAAY,EACZC,OAAO,EACPC,cAAa,QACR,yBAAwB;;AAE/B;AACA,SAASC,aAAaA,CAAA,EAAG;EACvB,MAAMC,SAAQ,GAAI,CAAC;EAEnB,IAAI;IACF;IACA,MAAMC,aAAY,GAAIC,OAAO,CAACC,OAAO,CAAC,UAAU,EAAE,KAAK,EAAE,wBAAwB;IACjFF,aAAa,CAACG,IAAI,CAAC,CAAC,CAACC,OAAO,CAACC,GAAE,IAAK;MAClC,MAAMC,QAAO,GAAID,GAAG,CAACE,OAAO,CAAC,IAAI,EAAE,EAAE;MACrCR,SAAS,CAACO,QAAQ,IAAIN,aAAa,CAACK,GAAG;IACzC,CAAC;IACD,OAAON,SAAQ;EACjB,EAAE,OAAOS,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK;IAC9B,OAAO,CAAC;EACV;AACF;;AAEA;AACA,SAASE,kBAAkBA,CAACJ,QAAQ,EAAE;EACpC,MAAMK,KAAI,GAAIL,QAAQ,CAACK,KAAK,CAAC,6BAA6B;EAC1D,IAAIA,KAAK,EAAE;IACT,MAAM,GAAGC,IAAI,EAAEC,KAAK,EAAEC,OAAO,IAAIH,KAAI;IACrC,MAAMI,QAAO,GAAID,OAAO,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC;IACvC,MAAMC,SAAQ,GAAIH,OAAO,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC;IACxC,MAAME,GAAE,GAAIJ,OAAO,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC;IAClC,OAAO;MACLV,QAAQ;MACRM,IAAI,EAAEO,QAAQ,CAACJ,QAAQ,CAAC;MACxBF,KAAK,EAAEM,QAAQ,CAACF,SAAS,CAAC;MAC1BC,GAAG,EAAEC,QAAQ,CAACD,GAAG,CAAC;MAClBE,WAAW,EAAE,GAAGL,QAAQ,IAAIE,SAAS,IAAIC,GAAG,GAAG;MAC/CG,OAAO,EAAEF,QAAQ,CAACL,OAAO;IAC3B;EACF;EACA,OAAO;IACLR,QAAQ;IACRc,WAAW,EAAEd,QAAQ,CAACC,OAAO,CAAC,wBAAwB,EAAE,EAAE,CAAC;IAC3Dc,OAAO,EAAE;EACX;AACF;AAEA,eAAe;EACbC,IAAI,EAAE,eAAe;EACrBC,UAAU,EAAE;IACV9B,SAAS;IACTC,UAAU;IACVC,YAAY;IACZC,OAAO;IACPC;EACF,CAAC;EACD2B,KAAKA,CAAA,EAAG;IACN,MAAMC,MAAK,GAAIpC,GAAG,CAAC,EAAE;IACrB,MAAMqC,YAAW,GAAIrC,GAAG,CAAC,CAAC;IAC1B,MAAMsC,SAAQ,GAAItC,GAAG,CAAC,KAAK;IAC3B,MAAMuC,SAAQ,GAAIvC,GAAG,CAAC,IAAI;IAC1B,MAAMwC,YAAW,GAAIxC,GAAG,CAAC,IAAI;IAC7B,MAAMyC,SAAQ,GAAIzC,GAAG,CAAC,KAAK;IAC3B,MAAMU,SAAQ,GAAIV,GAAG,CAAC,CAAC,CAAC;IACxB,MAAM0C,eAAc,GAAI1C,GAAG,CAAC,IAAI2C,GAAG,CAAC,CAAC;IAErC,MAAMC,YAAW,GAAI3C,QAAQ,CAAC,MAAMmC,MAAM,CAACS,KAAK,CAACR,YAAY,CAACQ,KAAK,KAAK,IAAI;IAE5E,MAAMC,UAAS,GAAI7C,QAAQ,CAAC,MAAM;MAChC,MAAM8C,KAAI,GAAIV,YAAY,CAACQ,KAAI,GAAI;MACnC,MAAMG,GAAE,GAAIC,IAAI,CAACC,GAAG,CAACH,KAAI,GAAI,CAAC,EAAEX,MAAM,CAACS,KAAK,CAACM,MAAM;MACnD,OAAOf,MAAM,CAACS,KAAK,CAACO,KAAK,CAACL,KAAK,EAAEC,GAAG;IACtC,CAAC;IAED,eAAeK,mBAAmBA,CAAA,EAAG;MACnCZ,SAAS,CAACI,KAAI,GAAI,IAAG;MACrB,IAAI;QACFnC,SAAS,CAACmC,KAAI,GAAIpC,aAAa,CAAC;QAChC,MAAM6C,iBAAiB,CAAC;QACxB,MAAMC,gBAAgB,CAAC;MACzB,EAAE,OAAOpC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK;MAC/B,UAAU;QACRsB,SAAS,CAACI,KAAI,GAAI,KAAI;MACxB;IACF;IAEA,eAAeS,iBAAiBA,CAAA,EAAG;MACjC,MAAME,cAAa,GAAIC,MAAM,CAAC3C,IAAI,CAACJ,SAAS,CAACmC,KAAK;MAClD,IAAIW,cAAc,CAACL,MAAK,KAAM,CAAC,EAAE;MAEjCf,MAAM,CAACS,KAAI,GAAIW,cAAa,CACzBE,GAAG,CAACzC,QAAO,IAAKI,kBAAkB,CAACJ,QAAQ,CAAC,EAC5C0C,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAAC5B,OAAM,GAAI6B,CAAC,CAAC7B,OAAO;IACzC;IAEA,SAAS8B,WAAWA,CAAC7C,QAAQ,EAAE;MAC7B,OAAOP,SAAS,CAACmC,KAAK,CAAC5B,QAAQ,KAAK,EAAC;IACvC;IAEA,eAAesC,gBAAgBA,CAAA,EAAG;MAChC,IAAIT,UAAU,CAACD,KAAK,CAACM,MAAK,KAAM,CAAC,EAAE;MAEnC,KAAK,MAAMY,KAAI,IAAKjB,UAAU,CAACD,KAAK,EAAE;QACpC,IAAI,CAACH,eAAe,CAACG,KAAK,CAACmB,GAAG,CAACD,KAAK,CAAC9C,QAAQ,CAAC,EAAE;UAC9C,MAAMgD,GAAE,GAAI,IAAIC,KAAK,CAAC;UACtBD,GAAG,CAACE,GAAE,GAAIL,WAAW,CAACC,KAAK,CAAC9C,QAAQ;UACpCgD,GAAG,CAACG,MAAK,GAAI,MAAM;YACjB1B,eAAe,CAACG,KAAK,CAACwB,GAAG,CAACN,KAAK,CAAC9C,QAAQ;UAC1C;QACF;MACF;IACF;IAEA,SAASqD,SAASA,CAAA,EAAG;MACnB,IAAIhC,SAAS,CAACO,KAAK,EAAE;QACnB0B,QAAQ,CAAC;MACX,OAAO;QACLC,SAAS,CAAC;MACZ;IACF;IAEA,SAASA,SAASA,CAAA,EAAG;MACnB,IAAIpC,MAAM,CAACS,KAAK,CAACM,MAAK,KAAM,CAAC,EAAE;MAE/Bb,SAAS,CAACO,KAAI,GAAI,IAAG;MACrBL,YAAY,CAACK,KAAI,GAAI4B,WAAW,CAAC,MAAM;QACrCpC,YAAY,CAACQ,KAAI,GAAI,CAACR,YAAY,CAACQ,KAAI,GAAI,CAAC,IAAIT,MAAM,CAACS,KAAK,CAACM,MAAK;MACpE,CAAC,EAAEZ,SAAS,CAACM,KAAK;IACpB;IAEA,SAAS0B,QAAQA,CAAA,EAAG;MAClBjC,SAAS,CAACO,KAAI,GAAI,KAAI;MACtB,IAAIL,YAAY,CAACK,KAAK,EAAE;QACtB6B,aAAa,CAAClC,YAAY,CAACK,KAAK;QAChCL,YAAY,CAACK,KAAI,GAAI,IAAG;MAC1B;IACF;IAEA,SAAS8B,eAAeA,CAAA,EAAG;MACzB,IAAIrC,SAAS,CAACO,KAAK,EAAE;QACnB0B,QAAQ,CAAC;QACTC,SAAS,CAAC;MACZ;IACF;IAEA,SAASI,KAAKA,CAAA,EAAG;MACfL,QAAQ,CAAC;MACTlC,YAAY,CAACQ,KAAI,GAAI;IACvB;IAEA3C,SAAS,CAAC,MAAM;MACdmD,mBAAmB,CAAC;IACtB,CAAC;IAEDlD,eAAe,CAAC,MAAM;MACpBoE,QAAQ,CAAC;IACX,CAAC;IAED,OAAO;MACLnC,MAAM;MACNC,YAAY;MACZC,SAAS;MACTC,SAAS;MACTE,SAAS;MACTG,YAAY;MACZkB,WAAW;MACXQ,SAAS;MACTM,KAAK;MACLD;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}