{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"register-container\"\n};\nconst _hoisted_2 = {\n  class: \"form-actions\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_link = _resolveComponent(\"el-link\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_card, {\n    class: \"register-card\"\n  }, {\n    header: _withCtx(() => _cache[5] || (_cache[5] = [_createElementVNode(\"h2\", {\n      class: \"card-title\"\n    }, \"Register\", -1 /* CACHED */)])),\n    default: _withCtx(() => [_createVNode(_component_el_form, {\n      ref: \"registerForm\",\n      model: $setup.form,\n      rules: $setup.rules,\n      \"label-position\": \"top\",\n      onSubmit: _withModifiers($setup.handleSubmit, [\"prevent\"])\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        label: \"Username\",\n        prop: \"username\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.form.username,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.form.username = $event),\n          \"prefix-icon\": \"User\",\n          placeholder: \"Choose a username\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"Email\",\n        prop: \"email\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.form.email,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.form.email = $event),\n          \"prefix-icon\": \"Message\",\n          placeholder: \"Enter your email\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"Password\",\n        prop: \"password\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.form.password,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.form.password = $event),\n          type: \"password\",\n          \"prefix-icon\": \"Lock\",\n          placeholder: \"Choose a password\",\n          \"show-password\": \"\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"Confirm Password\",\n        prop: \"confirmPassword\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.form.confirmPassword,\n          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.form.confirmPassword = $event),\n          type: \"password\",\n          \"prefix-icon\": \"Lock\",\n          placeholder: \"Confirm your password\",\n          \"show-password\": \"\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_el_button, {\n        type: \"primary\",\n        \"native-type\": \"submit\",\n        loading: $setup.loading\n      }, {\n        default: _withCtx(() => _cache[6] || (_cache[6] = [_createTextVNode(\" Register \")])),\n        _: 1 /* STABLE */,\n        __: [6]\n      }, 8 /* PROPS */, [\"loading\"]), _createVNode(_component_el_link, {\n        type: \"primary\",\n        onClick: _cache[4] || (_cache[4] = $event => _ctx.$router.push('/login'))\n      }, {\n        default: _withCtx(() => _cache[7] || (_cache[7] = [_createTextVNode(\" Already have an account? Login \")])),\n        _: 1 /* STABLE */,\n        __: [7]\n      })])]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\", \"rules\", \"onSubmit\"])]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_el_card","header","_withCtx","_cache","_createElementVNode","_component_el_form","ref","model","$setup","form","rules","onSubmit","_withModifiers","handleSubmit","_component_el_form_item","label","prop","_component_el_input","username","$event","placeholder","email","password","type","confirmPassword","_hoisted_2","_component_el_button","loading","_component_el_link","onClick","_ctx","$router","push"],"sources":["D:\\restore\\water-melt\\frontend\\src\\views\\Register.vue"],"sourcesContent":["<template>\r\n  <div class=\"register-container\">\r\n    <el-card class=\"register-card\">\r\n      <template #header>\r\n        <h2 class=\"card-title\">Register</h2>\r\n      </template>\r\n\r\n      <el-form\r\n        ref=\"registerForm\"\r\n        :model=\"form\"\r\n        :rules=\"rules\"\r\n        label-position=\"top\"\r\n        @submit.prevent=\"handleSubmit\"\r\n      >\r\n        <el-form-item label=\"Username\" prop=\"username\">\r\n          <el-input\r\n            v-model=\"form.username\"\r\n            prefix-icon=\"User\"\r\n            placeholder=\"Choose a username\"\r\n          />\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"Email\" prop=\"email\">\r\n          <el-input\r\n            v-model=\"form.email\"\r\n            prefix-icon=\"Message\"\r\n            placeholder=\"Enter your email\"\r\n          />\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"Password\" prop=\"password\">\r\n          <el-input\r\n            v-model=\"form.password\"\r\n            type=\"password\"\r\n            prefix-icon=\"Lock\"\r\n            placeholder=\"Choose a password\"\r\n            show-password\r\n          />\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"Confirm Password\" prop=\"confirmPassword\">\r\n          <el-input\r\n            v-model=\"form.confirmPassword\"\r\n            type=\"password\"\r\n            prefix-icon=\"Lock\"\r\n            placeholder=\"Confirm your password\"\r\n            show-password\r\n          />\r\n        </el-form-item>\r\n\r\n        <div class=\"form-actions\">\r\n          <el-button type=\"primary\" native-type=\"submit\" :loading=\"loading\">\r\n            Register\r\n          </el-button>\r\n          <el-link type=\"primary\" @click=\"$router.push('/login')\">\r\n            Already have an account? Login\r\n          </el-link>\r\n        </div>\r\n      </el-form>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport { useRouter } from 'vue-router'\r\nimport { ElMessage } from 'element-plus'\r\n\r\nexport default {\r\n  name: 'Register',\r\n  setup() {\r\n    const store = useStore()\r\n    const router = useRouter()\r\n    const registerForm = ref(null)\r\n    const loading = ref(false)\r\n\r\n    const form = reactive({\r\n      username: '',\r\n      email: '',\r\n      password: '',\r\n      confirmPassword: ''\r\n    })\r\n\r\n    const validatePass = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('Please enter your password'))\r\n      } else {\r\n        if (form.confirmPassword !== '') {\r\n          registerForm.value?.validateField('confirmPassword')\r\n        }\r\n        callback()\r\n      }\r\n    }\r\n\r\n    const validatePass2 = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('Please confirm your password'))\r\n      } else if (value !== form.password) {\r\n        callback(new Error('Passwords do not match'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n\r\n    const rules = {\r\n      username: [\r\n        { required: true, message: 'Please enter your username', trigger: 'blur' },\r\n        { min: 3, message: 'Username must be at least 3 characters', trigger: 'blur' }\r\n      ],\r\n      email: [\r\n        { required: true, message: 'Please enter your email', trigger: 'blur' },\r\n        { type: 'email', message: 'Please enter a valid email address', trigger: 'blur' }\r\n      ],\r\n      password: [\r\n        { required: true, validator: validatePass, trigger: 'blur' },\r\n        { min: 6, message: 'Password must be at least 6 characters', trigger: 'blur' }\r\n      ],\r\n      confirmPassword: [\r\n        { required: true, validator: validatePass2, trigger: 'blur' }\r\n      ]\r\n    }\r\n\r\n    const handleSubmit = async () => {\r\n      if (!registerForm.value) return\r\n\r\n      try {\r\n        await registerForm.value.validate()\r\n        loading.value = true\r\n\r\n        const { confirmPassword, ...userData } = form\r\n        await store.dispatch('auth/register', userData)\r\n        ElMessage.success('Registration successful')\r\n        router.push('/')\r\n      } catch (error) {\r\n        ElMessage.error(error.response?.data?.message || 'Registration failed')\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n\r\n    return {\r\n      form,\r\n      rules,\r\n      loading,\r\n      registerForm,\r\n      handleSubmit\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.register-container {\r\n  min-height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: #f5f7fa;\r\n}\r\n\r\n.register-card {\r\n  width: 100%;\r\n  max-width: 400px;\r\n  margin: 20px;\r\n}\r\n\r\n.card-title {\r\n  margin: 0;\r\n  text-align: center;\r\n  color: #303133;\r\n}\r\n\r\n.form-actions {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 16px;\r\n  margin-top: 24px;\r\n\r\n  .el-button {\r\n    width: 100%;\r\n  }\r\n}\r\n</style> "],"mappings":";;EACOA,KAAK,EAAC;AAAoB;;EAiDpBA,KAAK,EAAC;AAAc;;;;;;;;uBAjD/BC,mBAAA,CA2DM,OA3DNC,UA2DM,GA1DJC,YAAA,CAyDUC,kBAAA;IAzDDJ,KAAK,EAAC;EAAe;IACjBK,MAAM,EAAAC,QAAA,CACf,MAAoCC,MAAA,QAAAA,MAAA,OAApCC,mBAAA,CAAoC;MAAhCR,KAAK,EAAC;IAAY,GAAC,UAAQ,mB;sBAGjC,MAmDU,CAnDVG,YAAA,CAmDUM,kBAAA;MAlDRC,GAAG,EAAC,cAAc;MACjBC,KAAK,EAAEC,MAAA,CAAAC,IAAI;MACXC,KAAK,EAAEF,MAAA,CAAAE,KAAK;MACb,gBAAc,EAAC,KAAK;MACnBC,QAAM,EAAAC,cAAA,CAAUJ,MAAA,CAAAK,YAAY;;wBAE7B,MAMe,CANfd,YAAA,CAMee,uBAAA;QANDC,KAAK,EAAC,UAAU;QAACC,IAAI,EAAC;;0BAClC,MAIE,CAJFjB,YAAA,CAIEkB,mBAAA;sBAHST,MAAA,CAAAC,IAAI,CAACS,QAAQ;qEAAbV,MAAA,CAAAC,IAAI,CAACS,QAAQ,GAAAC,MAAA;UACtB,aAAW,EAAC,MAAM;UAClBC,WAAW,EAAC;;;UAIhBrB,YAAA,CAMee,uBAAA;QANDC,KAAK,EAAC,OAAO;QAACC,IAAI,EAAC;;0BAC/B,MAIE,CAJFjB,YAAA,CAIEkB,mBAAA;sBAHST,MAAA,CAAAC,IAAI,CAACY,KAAK;qEAAVb,MAAA,CAAAC,IAAI,CAACY,KAAK,GAAAF,MAAA;UACnB,aAAW,EAAC,SAAS;UACrBC,WAAW,EAAC;;;UAIhBrB,YAAA,CAQee,uBAAA;QARDC,KAAK,EAAC,UAAU;QAACC,IAAI,EAAC;;0BAClC,MAME,CANFjB,YAAA,CAMEkB,mBAAA;sBALST,MAAA,CAAAC,IAAI,CAACa,QAAQ;qEAAbd,MAAA,CAAAC,IAAI,CAACa,QAAQ,GAAAH,MAAA;UACtBI,IAAI,EAAC,UAAU;UACf,aAAW,EAAC,MAAM;UAClBH,WAAW,EAAC,mBAAmB;UAC/B,eAAa,EAAb;;;UAIJrB,YAAA,CAQee,uBAAA;QARDC,KAAK,EAAC,kBAAkB;QAACC,IAAI,EAAC;;0BAC1C,MAME,CANFjB,YAAA,CAMEkB,mBAAA;sBALST,MAAA,CAAAC,IAAI,CAACe,eAAe;qEAApBhB,MAAA,CAAAC,IAAI,CAACe,eAAe,GAAAL,MAAA;UAC7BI,IAAI,EAAC,UAAU;UACf,aAAW,EAAC,MAAM;UAClBH,WAAW,EAAC,uBAAuB;UACnC,eAAa,EAAb;;;UAIJhB,mBAAA,CAOM,OAPNqB,UAOM,GANJ1B,YAAA,CAEY2B,oBAAA;QAFDH,IAAI,EAAC,SAAS;QAAC,aAAW,EAAC,QAAQ;QAAEI,OAAO,EAAEnB,MAAA,CAAAmB;;0BAAS,MAElExB,MAAA,QAAAA,MAAA,O,iBAFkE,YAElE,E;;;sCACAJ,YAAA,CAEU6B,kBAAA;QAFDL,IAAI,EAAC,SAAS;QAAEM,OAAK,EAAA1B,MAAA,QAAAA,MAAA,MAAAgB,MAAA,IAAEW,IAAA,CAAAC,OAAO,CAACC,IAAI;;0BAAY,MAExD7B,MAAA,QAAAA,MAAA,O,iBAFwD,kCAExD,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}