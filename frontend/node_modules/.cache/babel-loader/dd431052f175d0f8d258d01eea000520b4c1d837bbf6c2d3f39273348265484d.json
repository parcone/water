{"ast":null,"code":"// 使用require.context一次性加载所有图片\nfunction loadAllImages() {\n  const allImages = {};\n  try {\n    // 精确匹配您的路径\n    const requireImages = require.context('../assets/water/photos', false, /\\.(png|jpg|jpeg|gif)$/i);\n    console.log('发现的图片文件:', requireImages.keys());\n    requireImages.keys().forEach(key => {\n      // key格式: \"./2025_01_SSM_20250101.png\"\n      const filename = key.replace('./', '');\n      allImages[filename] = requireImages(key);\n    });\n    console.log('成功加载的图片:', Object.keys(allImages));\n    return allImages;\n  } catch (error) {\n    console.error('加载图片失败:', error);\n    return {};\n  }\n}\n\n// 解析文件名中的日期信息\nfunction parseImageFilename(filename) {\n  // 匹配格式: 2025_01_SSM_20250101.png\n  const match = filename.match(/(\\d{4})_(\\d{2})_\\w+_(\\d{8})/);\n  if (match) {\n    const [, year, month, dateStr] = match;\n    const fullYear = dateStr.substring(0, 4);\n    const fullMonth = dateStr.substring(4, 6);\n    const day = dateStr.substring(6, 8);\n    return {\n      filename,\n      year: parseInt(fullYear),\n      month: parseInt(fullMonth),\n      day: parseInt(day),\n      displayName: `${fullYear}年${fullMonth}月${day}日`,\n      sortKey: parseInt(dateStr)\n    };\n  }\n\n  // 备用解析方案\n  const basicMatch = filename.match(/(\\d{4})_(\\d{2})/);\n  if (basicMatch) {\n    const [, year, month] = basicMatch;\n    return {\n      filename,\n      year: parseInt(year),\n      month: parseInt(month),\n      day: 1,\n      displayName: `${year}年${month}月`,\n      sortKey: parseInt(year) * 10000 + parseInt(month) * 100\n    };\n  }\n\n  // 如果无法解析，使用文件名\n  return {\n    filename,\n    year: 2025,\n    month: 1,\n    day: 1,\n    displayName: filename.replace(/\\.(png|jpg|jpeg|gif)$/i, ''),\n    sortKey: 0\n  };\n}\nexport default {\n  name: 'PhotoTimeline',\n  data() {\n    return {\n      photos: [],\n      currentIndex: 0,\n      isPlaying: false,\n      playSpeed: 2000,\n      playInterval: null,\n      isLoading: false,\n      allImages: {}\n    };\n  },\n  computed: {\n    currentPhoto() {\n      return this.photos[this.currentIndex] || null;\n    }\n  },\n  async mounted() {\n    await this.initializeComponent();\n  },\n  beforeUnmount() {\n    this.stopPlay();\n  },\n  methods: {\n    async initializeComponent() {\n      this.isLoading = true;\n      try {\n        // 加载所有图片\n        this.allImages = loadAllImages();\n\n        // 生成照片数据\n        await this.generatePhotoData();\n        console.log(`初始化完成，共加载 ${this.photos.length} 张图片`);\n      } catch (error) {\n        console.error('初始化失败:', error);\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    async generatePhotoData() {\n      const imageFilenames = Object.keys(this.allImages);\n      if (imageFilenames.length === 0) {\n        console.warn('没有找到图片文件');\n        return;\n      }\n\n      // 解析并排序图片\n      this.photos = imageFilenames.map(filename => parseImageFilename(filename)).sort((a, b) => a.sortKey - b.sortKey);\n      console.log('图片排序完成:', this.photos.map(p => p.displayName));\n    },\n    getImageUrl(filename) {\n      if (!filename || !this.allImages[filename]) {\n        console.warn('图片不存在:', filename);\n        return '';\n      }\n      return this.allImages[filename];\n    },\n    onSliderChange(event) {\n      const newIndex = parseInt(event.target.value);\n      if (newIndex >= 0 && newIndex < this.photos.length) {\n        this.currentIndex = newIndex;\n        this.stopPlay();\n      }\n    },\n    playPause() {\n      if (this.isPlaying) {\n        this.stopPlay();\n      } else {\n        this.startPlay();\n      }\n    },\n    startPlay() {\n      if (this.photos.length === 0) return;\n      this.isPlaying = true;\n      this.playInterval = setInterval(() => {\n        this.currentIndex = (this.currentIndex + 1) % this.photos.length;\n      }, this.playSpeed);\n    },\n    stopPlay() {\n      this.isPlaying = false;\n      if (this.playInterval) {\n        clearInterval(this.playInterval);\n        this.playInterval = null;\n      }\n    },\n    updatePlaySpeed() {\n      if (this.isPlaying) {\n        this.stopPlay();\n        this.startPlay();\n      }\n    },\n    reset() {\n      this.stopPlay();\n      this.currentIndex = 0;\n    },\n    onImageLoad() {\n      // 图片加载成功\n    },\n    onImageError(event) {\n      console.error('图片加载失败:', this.currentPhoto?.filename);\n      console.error('错误详情:', event);\n    }\n  }\n};","map":{"version":3,"names":["loadAllImages","allImages","requireImages","require","context","console","log","keys","forEach","key","filename","replace","Object","error","parseImageFilename","match","year","month","dateStr","fullYear","substring","fullMonth","day","parseInt","displayName","sortKey","basicMatch","name","data","photos","currentIndex","isPlaying","playSpeed","playInterval","isLoading","computed","currentPhoto","mounted","initializeComponent","beforeUnmount","stopPlay","methods","generatePhotoData","length","imageFilenames","warn","map","sort","a","b","p","getImageUrl","onSliderChange","event","newIndex","target","value","playPause","startPlay","setInterval","clearInterval","updatePlaySpeed","reset","onImageLoad","onImageError"],"sources":["D:\\restore\\water-melt\\frontend\\src\\assets\\water\\1.vue"],"sourcesContent":["<template>\r\n  <div class=\"photo-timeline\">\r\n    <div class=\"timeline-header\">\r\n      <h2>图片时间轴</h2>\r\n      <div class=\"controls\">\r\n        <button @click=\"playPause\" class=\"control-btn\">\r\n          {{ isPlaying ? '⏸️ 暂停' : '▶️ 播放' }}\r\n        </button>\r\n        <button @click=\"reset\" class=\"control-btn\">🔄 重置</button>\r\n        <div class=\"speed-control\">\r\n          <label>速度:</label>\r\n          <select v-model=\"playSpeed\" @change=\"updatePlaySpeed\">\r\n            <option value=\"500\">0.5秒</option>\r\n            <option value=\"1000\">1秒</option>\r\n            <option value=\"2000\">2秒</option>\r\n            <option value=\"3000\">3秒</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"image-container\">\r\n      <div v-if=\"currentPhoto\" class=\"image-wrapper\">\r\n        <img\r\n            :src=\"getImageUrl(currentPhoto.filename)\"\r\n            :alt=\"currentPhoto.displayName\"\r\n            class=\"timeline-image\"\r\n            @load=\"onImageLoad\"\r\n            @error=\"onImageError\"\r\n        />\r\n        <div class=\"image-info\">\r\n          <div class=\"date-info\">{{ currentPhoto.displayName }}</div>\r\n          <div class=\"progress-info\">{{ currentIndex + 1 }} / {{ photos.length }}</div>\r\n        </div>\r\n      </div>\r\n      <div v-else class=\"no-image\">\r\n        <p>{{ isLoading ? '加载中...' : '暂无图片数据' }}</p>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"timeline-slider\">\r\n      <div class=\"slider-container\">\r\n        <input\r\n            type=\"range\"\r\n            :min=\"0\"\r\n            :max=\"Math.max(0, photos.length - 1)\"\r\n            :value=\"currentIndex\"\r\n            @input=\"onSliderChange\"\r\n            class=\"timeline-range\"\r\n            :disabled=\"photos.length === 0\"\r\n        />\r\n        <div class=\"slider-labels\">\r\n          <span v-if=\"photos.length > 0\">{{ photos[0]?.displayName }}</span>\r\n          <span v-if=\"photos.length > 1\">{{ photos[photos.length - 1]?.displayName }}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"timeline-info\">\r\n      <div class=\"info-item\">\r\n        <span class=\"label\">当前时间:</span>\r\n        <span class=\"value\">{{ currentPhoto?.displayName || '无' }}</span>\r\n      </div>\r\n      <div class=\"info-item\">\r\n        <span class=\"label\">总图片数:</span>\r\n        <span class=\"value\">{{ photos.length }}</span>\r\n      </div>\r\n      <div class=\"info-item\">\r\n        <span class=\"label\">播放状态:</span>\r\n        <span class=\"value\">{{ isPlaying ? '播放中' : '已暂停' }}</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// 使用require.context一次性加载所有图片\r\nfunction loadAllImages() {\r\n  const allImages = {}\r\n\r\n  try {\r\n    // 精确匹配您的路径\r\n    const requireImages = require.context('../assets/water/photos', false, /\\.(png|jpg|jpeg|gif)$/i)\r\n\r\n    console.log('发现的图片文件:', requireImages.keys())\r\n\r\n    requireImages.keys().forEach(key => {\r\n      // key格式: \"./2025_01_SSM_20250101.png\"\r\n      const filename = key.replace('./', '')\r\n      allImages[filename] = requireImages(key)\r\n    })\r\n\r\n    console.log('成功加载的图片:', Object.keys(allImages))\r\n    return allImages\r\n  } catch (error) {\r\n    console.error('加载图片失败:', error)\r\n    return {}\r\n  }\r\n}\r\n\r\n// 解析文件名中的日期信息\r\nfunction parseImageFilename(filename) {\r\n  // 匹配格式: 2025_01_SSM_20250101.png\r\n  const match = filename.match(/(\\d{4})_(\\d{2})_\\w+_(\\d{8})/)\r\n\r\n  if (match) {\r\n    const [, year, month, dateStr] = match\r\n    const fullYear = dateStr.substring(0, 4)\r\n    const fullMonth = dateStr.substring(4, 6)\r\n    const day = dateStr.substring(6, 8)\r\n\r\n    return {\r\n      filename,\r\n      year: parseInt(fullYear),\r\n      month: parseInt(fullMonth),\r\n      day: parseInt(day),\r\n      displayName: `${fullYear}年${fullMonth}月${day}日`,\r\n      sortKey: parseInt(dateStr)\r\n    }\r\n  }\r\n\r\n  // 备用解析方案\r\n  const basicMatch = filename.match(/(\\d{4})_(\\d{2})/)\r\n  if (basicMatch) {\r\n    const [, year, month] = basicMatch\r\n    return {\r\n      filename,\r\n      year: parseInt(year),\r\n      month: parseInt(month),\r\n      day: 1,\r\n      displayName: `${year}年${month}月`,\r\n      sortKey: parseInt(year) * 10000 + parseInt(month) * 100\r\n    }\r\n  }\r\n\r\n  // 如果无法解析，使用文件名\r\n  return {\r\n    filename,\r\n    year: 2025,\r\n    month: 1,\r\n    day: 1,\r\n    displayName: filename.replace(/\\.(png|jpg|jpeg|gif)$/i, ''),\r\n    sortKey: 0\r\n  }\r\n}\r\n\r\nexport default {\r\n  name: 'PhotoTimeline',\r\n  data() {\r\n    return {\r\n      photos: [],\r\n      currentIndex: 0,\r\n      isPlaying: false,\r\n      playSpeed: 2000,\r\n      playInterval: null,\r\n      isLoading: false,\r\n      allImages: {}\r\n    }\r\n  },\r\n  computed: {\r\n    currentPhoto() {\r\n      return this.photos[this.currentIndex] || null\r\n    }\r\n  },\r\n  async mounted() {\r\n    await this.initializeComponent()\r\n  },\r\n  beforeUnmount() {\r\n    this.stopPlay()\r\n  },\r\n  methods: {\r\n    async initializeComponent() {\r\n      this.isLoading = true\r\n\r\n      try {\r\n        // 加载所有图片\r\n        this.allImages = loadAllImages()\r\n\r\n        // 生成照片数据\r\n        await this.generatePhotoData()\r\n\r\n        console.log(`初始化完成，共加载 ${this.photos.length} 张图片`)\r\n      } catch (error) {\r\n        console.error('初始化失败:', error)\r\n      } finally {\r\n        this.isLoading = false\r\n      }\r\n    },\r\n\r\n    async generatePhotoData() {\r\n      const imageFilenames = Object.keys(this.allImages)\r\n\r\n      if (imageFilenames.length === 0) {\r\n        console.warn('没有找到图片文件')\r\n        return\r\n      }\r\n\r\n      // 解析并排序图片\r\n      this.photos = imageFilenames\r\n          .map(filename => parseImageFilename(filename))\r\n          .sort((a, b) => a.sortKey - b.sortKey)\r\n\r\n      console.log('图片排序完成:', this.photos.map(p => p.displayName))\r\n    },\r\n\r\n    getImageUrl(filename) {\r\n      if (!filename || !this.allImages[filename]) {\r\n        console.warn('图片不存在:', filename)\r\n        return ''\r\n      }\r\n\r\n      return this.allImages[filename]\r\n    },\r\n\r\n    onSliderChange(event) {\r\n      const newIndex = parseInt(event.target.value)\r\n      if (newIndex >= 0 && newIndex < this.photos.length) {\r\n        this.currentIndex = newIndex\r\n        this.stopPlay()\r\n      }\r\n    },\r\n\r\n    playPause() {\r\n      if (this.isPlaying) {\r\n        this.stopPlay()\r\n      } else {\r\n        this.startPlay()\r\n      }\r\n    },\r\n\r\n    startPlay() {\r\n      if (this.photos.length === 0) return\r\n\r\n      this.isPlaying = true\r\n      this.playInterval = setInterval(() => {\r\n        this.currentIndex = (this.currentIndex + 1) % this.photos.length\r\n      }, this.playSpeed)\r\n    },\r\n\r\n    stopPlay() {\r\n      this.isPlaying = false\r\n      if (this.playInterval) {\r\n        clearInterval(this.playInterval)\r\n        this.playInterval = null\r\n      }\r\n    },\r\n\r\n    updatePlaySpeed() {\r\n      if (this.isPlaying) {\r\n        this.stopPlay()\r\n        this.startPlay()\r\n      }\r\n    },\r\n\r\n    reset() {\r\n      this.stopPlay()\r\n      this.currentIndex = 0\r\n    },\r\n\r\n    onImageLoad() {\r\n      // 图片加载成功\r\n    },\r\n\r\n    onImageError(event) {\r\n      console.error('图片加载失败:', this.currentPhoto?.filename)\r\n      console.error('错误详情:', event)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.photo-timeline {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\r\n}\r\n\r\n.timeline-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n  padding-bottom: 15px;\r\n  border-bottom: 2px solid #e9ecef;\r\n}\r\n\r\n.timeline-header h2 {\r\n  margin: 0;\r\n  color: #2c3e50;\r\n  font-size: 24px;\r\n}\r\n\r\n.controls {\r\n  display: flex;\r\n  gap: 15px;\r\n  align-items: center;\r\n}\r\n\r\n.control-btn {\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 6px;\r\n  background: #007bff;\r\n  color: white;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.control-btn:hover {\r\n  background: #0056b3;\r\n}\r\n\r\n.control-btn:active {\r\n  transform: translateY(1px);\r\n}\r\n\r\n.speed-control {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n}\r\n\r\n.speed-control label {\r\n  font-weight: 500;\r\n  color: #495057;\r\n}\r\n\r\n.speed-control select {\r\n  padding: 5px 10px;\r\n  border: 1px solid #ced4da;\r\n  border-radius: 4px;\r\n  background: white;\r\n  cursor: pointer;\r\n}\r\n\r\n.image-container {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 500px;\r\n  border: 2px solid #dee2e6;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  margin-bottom: 20px;\r\n  background: #f8f9fa;\r\n}\r\n\r\n.image-wrapper {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.timeline-image {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: contain;\r\n  background: white;\r\n}\r\n\r\n.image-info {\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  background: linear-gradient(transparent, rgba(0, 0, 0, 0.8));\r\n  color: white;\r\n  padding: 15px 20px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.date-info {\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n}\r\n\r\n.progress-info {\r\n  font-size: 14px;\r\n  opacity: 0.9;\r\n}\r\n\r\n.no-image {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100%;\r\n  color: #6c757d;\r\n  font-size: 16px;\r\n}\r\n\r\n.timeline-slider {\r\n  margin-bottom: 25px;\r\n}\r\n\r\n.slider-container {\r\n  position: relative;\r\n}\r\n\r\n.timeline-range {\r\n  width: 100%;\r\n  height: 6px;\r\n  border-radius: 3px;\r\n  background: #dee2e6;\r\n  outline: none;\r\n  -webkit-appearance: none;\r\n  cursor: pointer;\r\n}\r\n\r\n.timeline-range::-webkit-slider-thumb {\r\n  appearance: none;\r\n  width: 18px;\r\n  height: 18px;\r\n  border-radius: 50%;\r\n  background: #007bff;\r\n  cursor: pointer;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.timeline-range::-moz-range-thumb {\r\n  width: 18px;\r\n  height: 18px;\r\n  border-radius: 50%;\r\n  background: #007bff;\r\n  cursor: pointer;\r\n  border: none;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.slider-labels {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 8px;\r\n  font-size: 12px;\r\n  color: #6c757d;\r\n}\r\n\r\n.timeline-info {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n  gap: 20px;\r\n  padding: 20px;\r\n  background: #f8f9fa;\r\n  border-radius: 6px;\r\n  border: 1px solid #dee2e6;\r\n}\r\n\r\n.info-item {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 5px;\r\n}\r\n\r\n.label {\r\n  font-weight: 600;\r\n  color: #495057;\r\n  font-size: 14px;\r\n}\r\n\r\n.value {\r\n  color: #212529;\r\n  font-size: 16px;\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 768px) {\r\n  .timeline-header {\r\n    flex-direction: column;\r\n    gap: 15px;\r\n    align-items: stretch;\r\n  }\r\n\r\n  .controls {\r\n    justify-content: center;\r\n  }\r\n\r\n  .image-container {\r\n    height: 400px;\r\n  }\r\n\r\n  .timeline-info {\r\n    grid-template-columns: 1fr;\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}