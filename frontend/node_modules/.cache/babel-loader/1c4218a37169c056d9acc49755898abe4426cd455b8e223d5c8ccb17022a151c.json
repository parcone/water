{"ast":null,"code":"import { createVNode as _createVNode, resolveComponent as _resolveComponent, normalizeClass as _normalizeClass, withCtx as _withCtx, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"device-card-header\"\n};\nconst _hoisted_2 = {\n  class: \"device-info\"\n};\nconst _hoisted_3 = {\n  class: \"device-name\"\n};\nconst _hoisted_4 = {\n  class: \"device-meta\"\n};\nconst _hoisted_5 = {\n  class: \"device-location\"\n};\nconst _hoisted_6 = {\n  class: \"device-status\"\n};\nconst _hoisted_7 = {\n  class: \"device-metrics\"\n};\nconst _hoisted_8 = {\n  class: \"metric-label\"\n};\nconst _hoisted_9 = {\n  class: \"metric-value\"\n};\nconst _hoisted_10 = {\n  key: 1,\n  class: \"no-data\"\n};\nconst _hoisted_11 = {\n  class: \"device-card-footer\"\n};\nconst _hoisted_12 = {\n  class: \"update-time\"\n};\nconst _hoisted_13 = {\n  class: \"actions\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_icon = _resolveComponent(\"el-icon\");\n  const _component_el_tag = _resolveComponent(\"el-tag\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_tooltip = _resolveComponent(\"el-tooltip\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([\"device-card\", $props.source.status])\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_icon, {\n    class: _normalizeClass($setup.getDeviceIcon($props.source.type))\n  }, {\n    default: _withCtx(() => [_createVNode($setup[\"Monitor\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"class\"]), _createTextVNode(\" \" + _toDisplayString($props.source.name), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_el_tag, {\n    type: $setup.getDeviceTagType($props.source.type),\n    size: \"small\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString($props.source.type), 1 /* TEXT */)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"type\"]), _createElementVNode(\"span\", _hoisted_5, [_createVNode(_component_el_icon, null, {\n    default: _withCtx(() => [_createVNode($setup[\"Location\"])]),\n    _: 1 /* STABLE */\n  }), _createTextVNode(\" \" + _toDisplayString($props.source.location), 1 /* TEXT */)])])]), _createElementVNode(\"div\", _hoisted_6, [_cache[3] || (_cache[3] = _createElementVNode(\"span\", {\n    class: \"status-dot\"\n  }, null, -1 /* CACHED */)), _createTextVNode(\" \" + _toDisplayString($setup.getStatusText($props.source.status)), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_7, [$props.source.metrics ? (_openBlock(true), _createElementBlock(_Fragment, {\n    key: 0\n  }, _renderList($setup.filteredMetrics, (value, key) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: key,\n      class: \"metric-item\"\n    }, [_createElementVNode(\"div\", _hoisted_8, _toDisplayString($setup.getMetricLabel(key)), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_9, _toDisplayString($setup.formatMetricValue(value, key)), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_10, \"暂无数据\"))]), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"div\", _hoisted_12, [_createVNode(_component_el_icon, null, {\n    default: _withCtx(() => [_createVNode($setup[\"Timer\"])]),\n    _: 1 /* STABLE */\n  }), _createTextVNode(\" \" + _toDisplayString($setup.formatTime($props.source.lastUpdate)), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_13, [_createVNode(_component_el_tooltip, {\n    content: \"查看详情\",\n    placement: \"top\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_button, {\n      link: \"\",\n      type: \"primary\",\n      onClick: _cache[0] || (_cache[0] = $event => _ctx.$emit('view', $props.source))\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n        default: _withCtx(() => [_createVNode($setup[\"View\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_el_tooltip, {\n    content: \"配置设备\",\n    placement: \"top\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_button, {\n      link: \"\",\n      type: \"primary\",\n      onClick: _cache[1] || (_cache[1] = $event => _ctx.$emit('config', $props.source))\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n        default: _withCtx(() => [_createVNode($setup[\"Setting\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_el_tooltip, {\n    content: \"删除设备\",\n    placement: \"top\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_button, {\n      link: \"\",\n      type: \"danger\",\n      onClick: _cache[2] || (_cache[2] = $event => _ctx.$emit('delete', $props.source))\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n        default: _withCtx(() => [_createVNode($setup[\"Delete\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  })])])], 2 /* CLASS */);\n}","map":{"version":3,"names":["class","_createElementBlock","_normalizeClass","$props","source","status","_createElementVNode","_hoisted_1","_hoisted_2","_hoisted_3","_createVNode","_component_el_icon","$setup","getDeviceIcon","type","_toDisplayString","name","_hoisted_4","_component_el_tag","getDeviceTagType","size","_hoisted_5","location","_hoisted_6","getStatusText","_hoisted_7","metrics","_Fragment","key","_renderList","filteredMetrics","value","_hoisted_8","getMetricLabel","_hoisted_9","formatMetricValue","_hoisted_10","_hoisted_11","_hoisted_12","formatTime","lastUpdate","_hoisted_13","_component_el_tooltip","content","placement","_component_el_button","link","onClick","_cache","$event","_ctx","$emit"],"sources":["D:\\restore\\water-melt\\frontend\\src\\components\\DeviceCard.vue"],"sourcesContent":["<!-- DeviceCard.vue -->\r\n<template>\r\n  <div class=\"device-card\" :class=\"source.status\">\r\n    <div class=\"device-card-header\">\r\n      <div class=\"device-info\">\r\n        <div class=\"device-name\">\r\n          <el-icon :class=\"getDeviceIcon(source.type)\"><Monitor /></el-icon>\r\n          {{ source.name }}\r\n        </div>\r\n        <div class=\"device-meta\">\r\n          <el-tag :type=\"getDeviceTagType(source.type)\" size=\"small\">{{ source.type }}</el-tag>\r\n          <span class=\"device-location\">\r\n            <el-icon><Location /></el-icon>\r\n            {{ source.location }}\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div class=\"device-status\">\r\n        <span class=\"status-dot\"></span>\r\n        {{ getStatusText(source.status) }}\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"device-metrics\">\r\n      <template v-if=\"source.metrics\">\r\n        <div v-for=\"(value, key) in filteredMetrics\" :key=\"key\" class=\"metric-item\">\r\n          <div class=\"metric-label\">{{ getMetricLabel(key) }}</div>\r\n          <div class=\"metric-value\">\r\n            {{ formatMetricValue(value, key) }}\r\n          </div>\r\n        </div>\r\n      </template>\r\n      <div v-else class=\"no-data\">暂无数据</div>\r\n    </div>\r\n\r\n    <div class=\"device-card-footer\">\r\n      <div class=\"update-time\">\r\n        <el-icon><Timer /></el-icon>\r\n        {{ formatTime(source.lastUpdate) }}\r\n      </div>\r\n      <div class=\"actions\">\r\n        <el-tooltip content=\"查看详情\" placement=\"top\">\r\n          <el-button link type=\"primary\" @click=\"$emit('view', source)\">\r\n            <el-icon><View /></el-icon>\r\n          </el-button>\r\n        </el-tooltip>\r\n        <el-tooltip content=\"配置设备\" placement=\"top\">\r\n          <el-button link type=\"primary\" @click=\"$emit('config', source)\">\r\n            <el-icon><Setting /></el-icon>\r\n          </el-button>\r\n        </el-tooltip>\r\n        <el-tooltip content=\"删除设备\" placement=\"top\">\r\n          <el-button link type=\"danger\" @click=\"$emit('delete', source)\">\r\n            <el-icon><Delete /></el-icon>\r\n          </el-button>\r\n        </el-tooltip>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed } from 'vue'\r\nimport { Monitor, Location, Timer, View, Setting, Delete } from '@element-plus/icons-vue'\r\nimport { formatTime } from '@/utils/format'\r\n\r\nconst props = defineProps({\r\n  source: {\r\n    type: Object,\r\n    required: true\r\n  }\r\n})\r\n\r\nconst emit = defineEmits(['view', 'config', 'delete'])\r\n\r\nconst filteredMetrics = computed(() => {\r\n  if (!props.source.metrics) return {}\r\n  // 只显示重要指标\r\n  const importantKeys = ['temperature', 'humidity', 'ph', 'battery']\r\n  return Object.entries(props.source.metrics)\r\n    .filter(([key]) => importantKeys.includes(key))\r\n    .reduce((acc, [key, value]) => {\r\n      acc[key] = value\r\n      return acc\r\n    }, {})\r\n})\r\n\r\n// 辅助函数\r\nfunction getDeviceIcon(type) {\r\n  const icons = {\r\n    '温湿度': 'Temperature',\r\n    'PH值': 'Experiment',\r\n    '视频监控': 'VideoCamera',\r\n    '数据网关': 'Connection'\r\n  }\r\n  return icons[type] || 'Monitor'\r\n}\r\n\r\nfunction getDeviceTagType(type) {\r\n  const types = {\r\n    '温湿度': '',\r\n    'PH值': 'warning',\r\n    '视频监控': 'success',\r\n    '数据网关': 'info'\r\n  }\r\n  return types[type] || 'info'\r\n}\r\n\r\nfunction getStatusText(status) {\r\n  const statuses = {\r\n    online: '在线',\r\n    offline: '离线',\r\n    error: '异常'\r\n  }\r\n  return statuses[status] || status\r\n}\r\n\r\nfunction getMetricLabel(key) {\r\n  const labels = {\r\n    temperature: '温度',\r\n    humidity: '湿度',\r\n    ph: 'PH值',\r\n    battery: '电量'\r\n  }\r\n  return labels[key] || key\r\n}\r\n\r\nfunction formatMetricValue(value, key) {\r\n  const units = {\r\n    temperature: '°C',\r\n    humidity: '%',\r\n    ph: '',\r\n    battery: '%'\r\n  }\r\n  return `${value}${units[key] || ''}`\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.device-card {\r\n  background: rgba(255, 255, 255, 0.04);\r\n  border-radius: 8px;\r\n  padding: 12px;\r\n  transition: all 0.3s ease;\r\n  border-left: 4px solid transparent;\r\n\r\n  &:hover {\r\n    transform: translateY(-2px);\r\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n  }\r\n\r\n  &.online { border-left-color: #52c41a; }\r\n  &.offline { border-left-color: #ff4d4f; }\r\n  &.error { border-left-color: #faad14; }\r\n}\r\n\r\n.device-card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n  margin-bottom: 12px;\r\n}\r\n\r\n.device-info {\r\n  flex: 1;\r\n  min-width: 0;\r\n\r\n  .device-name {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 8px;\r\n    font-size: 15px;\r\n    font-weight: 500;\r\n    margin-bottom: 8px;\r\n    \r\n    .el-icon {\r\n      font-size: 18px;\r\n      color: #40a9ff;\r\n    }\r\n  }\r\n\r\n  .device-meta {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 12px;\r\n    \r\n    .device-location {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 4px;\r\n      color: rgba(255, 255, 255, 0.65);\r\n      font-size: 13px;\r\n      \r\n      .el-icon {\r\n        font-size: 14px;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.device-status {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 6px;\r\n  font-size: 13px;\r\n  color: rgba(255, 255, 255, 0.65);\r\n  padding: 4px 8px;\r\n  border-radius: 4px;\r\n  background: rgba(0, 0, 0, 0.2);\r\n\r\n  .status-dot {\r\n    width: 6px;\r\n    height: 6px;\r\n    border-radius: 50%;\r\n  }\r\n\r\n  .online & .status-dot { background: #52c41a; }\r\n  .offline & .status-dot { background: #ff4d4f; }\r\n  .error & .status-dot { background: #faad14; }\r\n}\r\n\r\n.device-metrics {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\r\n  gap: 8px;\r\n  margin-bottom: 12px;\r\n  \r\n  .metric-item {\r\n    padding: 6px 8px;\r\n    background: rgba(0, 0, 0, 0.2);\r\n    border-radius: 4px;\r\n    \r\n    .metric-label {\r\n      font-size: 12px;\r\n      color: rgba(255, 255, 255, 0.45);\r\n      margin-bottom: 2px;\r\n    }\r\n    \r\n    .metric-value {\r\n      font-size: 14px;\r\n      color: rgba(255, 255, 255, 0.85);\r\n    }\r\n  }\r\n  \r\n  .no-data {\r\n    grid-column: 1 / -1;\r\n    text-align: center;\r\n    color: rgba(255, 255, 255, 0.45);\r\n    font-size: 13px;\r\n    padding: 8px;\r\n  }\r\n}\r\n\r\n.device-card-footer {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  \r\n  .update-time {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 4px;\r\n    color: rgba(255, 255, 255, 0.45);\r\n    font-size: 12px;\r\n    \r\n    .el-icon {\r\n      font-size: 14px;\r\n    }\r\n  }\r\n  \r\n  .actions {\r\n    display: flex;\r\n    gap: 8px;\r\n    \r\n    .el-button {\r\n      padding: 4px;\r\n      \r\n      .el-icon {\r\n        font-size: 16px;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style> "],"mappings":";;EAGSA,KAAK,EAAC;AAAoB;;EACxBA,KAAK,EAAC;AAAa;;EACjBA,KAAK,EAAC;AAAa;;EAInBA,KAAK,EAAC;AAAa;;EAEhBA,KAAK,EAAC;AAAiB;;EAM5BA,KAAK,EAAC;AAAe;;EAMvBA,KAAK,EAAC;AAAgB;;EAGhBA,KAAK,EAAC;AAAc;;EACpBA,KAAK,EAAC;AAAc;;;EAKjBA,KAAK,EAAC;;;EAGfA,KAAK,EAAC;AAAoB;;EACxBA,KAAK,EAAC;AAAa;;EAInBA,KAAK,EAAC;AAAS;;;;;;uBAtCxBC,mBAAA,CAwDM;IAxDDD,KAAK,EAAAE,eAAA,EAAC,aAAa,EAASC,MAAA,CAAAC,MAAM,CAACC,MAAM;MAC5CC,mBAAA,CAkBM,OAlBNC,UAkBM,GAjBJD,mBAAA,CAYM,OAZNE,UAYM,GAXJF,mBAAA,CAGM,OAHNG,UAGM,GAFJC,YAAA,CAAkEC,kBAAA;IAAxDX,KAAK,EAAAE,eAAA,CAAEU,MAAA,CAAAC,aAAa,CAACV,MAAA,CAAAC,MAAM,CAACU,IAAI;;sBAAG,MAAW,CAAXJ,YAAA,CAAWE,MAAA,a;;iDAAU,GAClE,GAAAG,gBAAA,CAAGZ,MAAA,CAAAC,MAAM,CAACY,IAAI,iB,GAEhBV,mBAAA,CAMM,OANNW,UAMM,GALJP,YAAA,CAAqFQ,iBAAA;IAA5EJ,IAAI,EAAEF,MAAA,CAAAO,gBAAgB,CAAChB,MAAA,CAAAC,MAAM,CAACU,IAAI;IAAGM,IAAI,EAAC;;sBAAQ,MAAiB,C,kCAAdjB,MAAA,CAAAC,MAAM,CAACU,IAAI,iB;;+BACzER,mBAAA,CAGO,QAHPe,UAGO,GAFLX,YAAA,CAA+BC,kBAAA;sBAAtB,MAAY,CAAZD,YAAA,CAAYE,MAAA,c;;uBAAU,GAC/B,GAAAG,gBAAA,CAAGZ,MAAA,CAAAC,MAAM,CAACkB,QAAQ,iB,OAIxBhB,mBAAA,CAGM,OAHNiB,UAGM,G,0BAFJjB,mBAAA,CAAgC;IAA1BN,KAAK,EAAC;EAAY,4B,iBAAQ,GAChC,GAAAe,gBAAA,CAAGH,MAAA,CAAAY,aAAa,CAACrB,MAAA,CAAAC,MAAM,CAACC,MAAM,kB,KAIlCC,mBAAA,CAUM,OAVNmB,UAUM,GATYtB,MAAA,CAAAC,MAAM,CAACsB,OAAO,I,kBAC5BzB,mBAAA,CAKM0B,SAAA;IAAAC,GAAA;EAAA,GAAAC,WAAA,CALsBjB,MAAA,CAAAkB,eAAe,GAA9BC,KAAK,EAAEH,GAAG;yBAAvB3B,mBAAA,CAKM;MALwC2B,GAAG,EAAEA,GAAG;MAAE5B,KAAK,EAAC;QAC5DM,mBAAA,CAAyD,OAAzD0B,UAAyD,EAAAjB,gBAAA,CAA5BH,MAAA,CAAAqB,cAAc,CAACL,GAAG,mBAC/CtB,mBAAA,CAEM,OAFN4B,UAEM,EAAAnB,gBAAA,CADDH,MAAA,CAAAuB,iBAAiB,CAACJ,KAAK,EAAEH,GAAG,kB;kDAIrC3B,mBAAA,CAAsC,OAAtCmC,WAAsC,EAAV,MAAI,G,GAGlC9B,mBAAA,CAsBM,OAtBN+B,WAsBM,GArBJ/B,mBAAA,CAGM,OAHNgC,WAGM,GAFJ5B,YAAA,CAA4BC,kBAAA;sBAAnB,MAAS,CAATD,YAAA,CAASE,MAAA,W;;uBAAU,GAC5B,GAAAG,gBAAA,CAAGH,MAAA,CAAA2B,UAAU,CAACpC,MAAA,CAAAC,MAAM,CAACoC,UAAU,kB,GAEjClC,mBAAA,CAgBM,OAhBNmC,WAgBM,GAfJ/B,YAAA,CAIagC,qBAAA;IAJDC,OAAO,EAAC,MAAM;IAACC,SAAS,EAAC;;sBACnC,MAEY,CAFZlC,YAAA,CAEYmC,oBAAA;MAFDC,IAAI,EAAJ,EAAI;MAAChC,IAAI,EAAC,SAAS;MAAEiC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,KAAK,SAAShD,MAAA,CAAAC,MAAM;;wBACzD,MAA2B,CAA3BM,YAAA,CAA2BC,kBAAA;0BAAlB,MAAQ,CAARD,YAAA,CAAQE,MAAA,U;;;;;;MAGrBF,YAAA,CAIagC,qBAAA;IAJDC,OAAO,EAAC,MAAM;IAACC,SAAS,EAAC;;sBACnC,MAEY,CAFZlC,YAAA,CAEYmC,oBAAA;MAFDC,IAAI,EAAJ,EAAI;MAAChC,IAAI,EAAC,SAAS;MAAEiC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,KAAK,WAAWhD,MAAA,CAAAC,MAAM;;wBAC3D,MAA8B,CAA9BM,YAAA,CAA8BC,kBAAA;0BAArB,MAAW,CAAXD,YAAA,CAAWE,MAAA,a;;;;;;MAGxBF,YAAA,CAIagC,qBAAA;IAJDC,OAAO,EAAC,MAAM;IAACC,SAAS,EAAC;;sBACnC,MAEY,CAFZlC,YAAA,CAEYmC,oBAAA;MAFDC,IAAI,EAAJ,EAAI;MAAChC,IAAI,EAAC,QAAQ;MAAEiC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,KAAK,WAAWhD,MAAA,CAAAC,MAAM;;wBAC1D,MAA6B,CAA7BM,YAAA,CAA6BC,kBAAA;0BAApB,MAAU,CAAVD,YAAA,CAAUE,MAAA,Y","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}