{"ast":null,"code":"import axios from 'axios';\nimport store from '@/store';\nimport router from '@/router';\nconst service = axios.create({\n  baseURL: process.env.VUE_APP_API_URL || 'http://localhost:8080/api',\n  timeout: 15000\n});\n\n// Request interceptor\nservice.interceptors.request.use(config => {\n  const token = store.state.auth.token;\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  console.error('Request error:', error);\n  return Promise.reject(error);\n});\n\n// Response interceptor\nservice.interceptors.response.use(response => {\n  return response.data;\n}, error => {\n  if (error.response) {\n    switch (error.response.status) {\n      case 401:\n        store.dispatch('auth/logout');\n        router.push('/login');\n        break;\n      case 403:\n        console.error('没有权限访问该资源');\n        break;\n      case 404:\n        console.error('请求的资源不存在');\n        break;\n      case 500:\n        console.error('服务器内部错误');\n        break;\n      default:\n        console.error('未知错误:', error.response.data);\n    }\n  }\n  return Promise.reject(error);\n});\nexport default service;","map":{"version":3,"names":["axios","store","router","service","create","baseURL","process","env","VUE_APP_API_URL","timeout","interceptors","request","use","config","token","state","auth","headers","Authorization","error","console","Promise","reject","response","data","status","dispatch","push"],"sources":["D:/restore/water-melt/frontend/src/utils/request.js"],"sourcesContent":["import axios from 'axios'\r\nimport store from '@/store'\r\nimport router from '@/router'\r\n\r\nconst service = axios.create({\r\n  baseURL: process.env.VUE_APP_API_URL || 'http://localhost:8080/api',\r\n  timeout: 15000\r\n})\r\n\r\n// Request interceptor\r\nservice.interceptors.request.use(\r\n  config => {\r\n    const token = store.state.auth.token\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`\r\n    }\r\n    return config\r\n  },\r\n  error => {\r\n    console.error('Request error:', error)\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\n// Response interceptor\r\nservice.interceptors.response.use(\r\n  response => {\r\n    return response.data\r\n  },\r\n  error => {\r\n    if (error.response) {\r\n      switch (error.response.status) {\r\n        case 401:\r\n          store.dispatch('auth/logout')\r\n          router.push('/login')\r\n          break\r\n        case 403:\r\n          console.error('没有权限访问该资源')\r\n          break\r\n        case 404:\r\n          console.error('请求的资源不存在')\r\n          break\r\n        case 500:\r\n          console.error('服务器内部错误')\r\n          break\r\n        default:\r\n          console.error('未知错误:', error.response.data)\r\n      }\r\n    }\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\nexport default service "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,MAAM,MAAM,UAAU;AAE7B,MAAMC,OAAO,GAAGH,KAAK,CAACI,MAAM,CAAC;EAC3BC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,eAAe,IAAI,2BAA2B;EACnEC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACAN,OAAO,CAACO,YAAY,CAACC,OAAO,CAACC,GAAG,CAC9BC,MAAM,IAAI;EACR,MAAMC,KAAK,GAAGb,KAAK,CAACc,KAAK,CAACC,IAAI,CAACF,KAAK;EACpC,IAAIA,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACDM,KAAK,IAAI;EACPC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;EACtC,OAAOE,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAhB,OAAO,CAACO,YAAY,CAACa,QAAQ,CAACX,GAAG,CAC/BW,QAAQ,IAAI;EACV,OAAOA,QAAQ,CAACC,IAAI;AACtB,CAAC,EACDL,KAAK,IAAI;EACP,IAAIA,KAAK,CAACI,QAAQ,EAAE;IAClB,QAAQJ,KAAK,CAACI,QAAQ,CAACE,MAAM;MAC3B,KAAK,GAAG;QACNxB,KAAK,CAACyB,QAAQ,CAAC,aAAa,CAAC;QAC7BxB,MAAM,CAACyB,IAAI,CAAC,QAAQ,CAAC;QACrB;MACF,KAAK,GAAG;QACNP,OAAO,CAACD,KAAK,CAAC,WAAW,CAAC;QAC1B;MACF,KAAK,GAAG;QACNC,OAAO,CAACD,KAAK,CAAC,UAAU,CAAC;QACzB;MACF,KAAK,GAAG;QACNC,OAAO,CAACD,KAAK,CAAC,SAAS,CAAC;QACxB;MACF;QACEC,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK,CAACI,QAAQ,CAACC,IAAI,CAAC;IAC/C;EACF;EACA,OAAOH,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAehB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}