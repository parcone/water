{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"prediction-studio\"\n};\nconst _hoisted_2 = {\n  class: \"card-header\"\n};\nconst _hoisted_3 = {\n  class: \"metric-card\"\n};\nconst _hoisted_4 = {\n  class: \"metric-label\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_page_header = _resolveComponent(\"el-page-header\");\n  const _component_el_icon = _resolveComponent(\"el-icon\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_option = _resolveComponent(\"el-option\");\n  const _component_el_select = _resolveComponent(\"el-select\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_input_number = _resolveComponent(\"el-input-number\");\n  const _component_el_slider = _resolveComponent(\"el-slider\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_divider = _resolveComponent(\"el-divider\");\n  const _component_el_col = _resolveComponent(\"el-col\");\n  const _component_el_row = _resolveComponent(\"el-row\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_page_header, {\n    content: \"智能预测实验室\",\n    style: {\n      \"margin-bottom\": \"20px\"\n    }\n  }), _createCommentVNode(\" 顶部模型选择与评估指标 \"), _createVNode(_component_el_card, {\n    shadow: \"hover\",\n    class: \"model-config-card\"\n  }, {\n    header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [_cache[4] || (_cache[4] = _createElementVNode(\"span\", null, \"模型配置\", -1 /* CACHED */)), _createVNode(_component_el_button, {\n      type: \"primary\",\n      size: \"small\",\n      onClick: $setup.trainModel\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n        default: _withCtx(() => [_createVNode($setup[\"Refresh\"])]),\n        _: 1 /* STABLE */\n      }), _cache[3] || (_cache[3] = _createTextVNode(\" 重新训练 \"))]),\n      _: 1 /* STABLE */,\n      __: [3]\n    })])]),\n    default: _withCtx(() => [_createVNode(_component_el_form, {\n      inline: true,\n      model: $setup.config,\n      \"label-width\": \"100px\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        label: \"选择模型\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_select, {\n          modelValue: $setup.config.model,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.config.model = $event),\n          placeholder: \"请选择模型\",\n          style: {\n            \"width\": \"180px\"\n          }\n        }, {\n          default: _withCtx(() => [(_openBlock(), _createElementBlock(_Fragment, null, _renderList($setup.models, m => {\n            return _createVNode(_component_el_option, {\n              key: m.value,\n              label: m.label,\n              value: m.value\n            }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n          }), 64 /* STABLE_FRAGMENT */))]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"预测步长\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input_number, {\n          modelValue: $setup.config.horizon,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.config.horizon = $event),\n          min: 1,\n          max: 72\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"训练集比例\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_slider, {\n          modelValue: $setup.config.trainSplit,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.config.trainSplit = $event),\n          min: 0.5,\n          max: 0.95,\n          step: 0.05,\n          style: {\n            \"width\": \"200px\"\n          }\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\"]), _createVNode(_component_el_divider), _createVNode(_component_el_row, {\n      gutter: 20\n    }, {\n      default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.metrics, metric => {\n        return _openBlock(), _createBlock(_component_el_col, {\n          span: 6,\n          key: metric.label\n        }, {\n          default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, _toDisplayString(metric.label), 1 /* TEXT */), _createVNode($setup[\"AnimatedNumber\"], {\n            value: metric.value,\n            duration: 800\n          }, null, 8 /* PROPS */, [\"value\"])])]),\n          _: 2 /* DYNAMIC */\n        }, 1024 /* DYNAMIC_SLOTS */);\n      }), 128 /* KEYED_FRAGMENT */))]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_el_row, {\n    gutter: 20,\n    style: {\n      \"margin-top\": \"20px\"\n    }\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_col, {\n      span: 16\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_card, {\n        shadow: \"hover\"\n      }, {\n        header: _withCtx(() => _cache[5] || (_cache[5] = [_createElementVNode(\"span\", null, \"预测结果（实际值 vs 预测值）\", -1 /* CACHED */)])),\n        default: _withCtx(() => [_createVNode($setup[\"BaseEChart\"], {\n          options: $setup.forecastChartOptions,\n          height: \"400px\"\n        }, null, 8 /* PROPS */, [\"options\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_col, {\n      span: 8\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_card, {\n        shadow: \"hover\"\n      }, {\n        header: _withCtx(() => _cache[6] || (_cache[6] = [_createElementVNode(\"span\", null, \"特征重要性\", -1 /* CACHED */)])),\n        default: _withCtx(() => [_createVNode($setup[\"BaseEChart\"], {\n          options: $setup.importanceChartOptions,\n          height: \"400px\"\n        }, null, 8 /* PROPS */, [\"options\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_el_card, {\n    shadow: \"never\",\n    style: {\n      \"margin-top\": \"20px\"\n    }\n  }, {\n    header: _withCtx(() => _cache[7] || (_cache[7] = [_createElementVNode(\"span\", null, \"预测数据表\", -1 /* CACHED */)])),\n    default: _withCtx(() => [_createVNode(_component_el_table, {\n      data: $setup.tableData,\n      height: \"300\",\n      size: \"small\",\n      stripe: \"\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_table_column, {\n        prop: \"time\",\n        label: \"时间\",\n        width: \"180\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"actual\",\n        label: \"实际值\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"predicted\",\n        label: \"预测值\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"error\",\n        label: \"误差\"\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"data\"])]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_el_page_header","content","style","_createCommentVNode","_component_el_card","shadow","header","_withCtx","_createElementVNode","_hoisted_2","_component_el_button","type","size","onClick","$setup","trainModel","_component_el_icon","_component_el_form","inline","model","config","_component_el_form_item","label","_component_el_select","$event","placeholder","_Fragment","_renderList","models","m","_component_el_option","key","value","_component_el_input_number","horizon","min","max","_component_el_slider","trainSplit","step","_component_el_divider","_component_el_row","gutter","metrics","metric","_createBlock","_component_el_col","span","_hoisted_3","_hoisted_4","_toDisplayString","duration","_cache","options","forecastChartOptions","height","importanceChartOptions","_component_el_table","data","tableData","stripe","_component_el_table_column","prop","width"],"sources":["D:\\restore\\water-melt\\frontend\\src\\views\\PredictionStudio.vue"],"sourcesContent":["<template>\r\n  <div class=\"prediction-studio\">\r\n    <el-page-header content=\"智能预测实验室\" style=\"margin-bottom: 20px\" />\r\n\r\n    <!-- 顶部模型选择与评估指标 -->\r\n    <el-card shadow=\"hover\" class=\"model-config-card\">\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <span>模型配置</span>\r\n          <el-button type=\"primary\" size=\"small\" @click=\"trainModel\">\r\n            <el-icon><Refresh /></el-icon>\r\n            重新训练\r\n          </el-button>\r\n        </div>\r\n      </template>\r\n\r\n      <el-form :inline=\"true\" :model=\"config\" label-width=\"100px\">\r\n        <el-form-item label=\"选择模型\">\r\n          <el-select v-model=\"config.model\" placeholder=\"请选择模型\" style=\"width: 180px\">\r\n            <el-option v-for=\"m in models\" :key=\"m.value\" :label=\"m.label\" :value=\"m.value\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"预测步长\">\r\n          <el-input-number v-model=\"config.horizon\" :min=\"1\" :max=\"72\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"训练集比例\">\r\n          <el-slider v-model=\"config.trainSplit\" :min=\"0.5\" :max=\"0.95\" :step=\"0.05\" style=\"width: 200px\" />\r\n        </el-form-item>\r\n      </el-form>\r\n\r\n      <el-divider />\r\n      <el-row :gutter=\"20\">\r\n        <el-col :span=\"6\" v-for=\"metric in metrics\" :key=\"metric.label\">\r\n          <div class=\"metric-card\">\r\n            <div class=\"metric-label\">{{ metric.label }}</div>\r\n            <animated-number :value=\"metric.value\" :duration=\"800\" />\r\n          </div>\r\n        </el-col>\r\n      </el-row>\r\n    </el-card>\r\n\r\n    <el-row :gutter=\"20\" style=\"margin-top: 20px\">\r\n      <el-col :span=\"16\">\r\n        <el-card shadow=\"hover\">\r\n          <template #header>\r\n            <span>预测结果（实际值 vs 预测值）</span>\r\n          </template>\r\n          <base-e-chart :options=\"forecastChartOptions\" height=\"400px\" />\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"8\">\r\n        <el-card shadow=\"hover\">\r\n          <template #header>\r\n            <span>特征重要性</span>\r\n          </template>\r\n          <base-e-chart :options=\"importanceChartOptions\" height=\"400px\" />\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <el-card shadow=\"never\" style=\"margin-top: 20px\">\r\n      <template #header>\r\n        <span>预测数据表</span>\r\n      </template>\r\n      <el-table :data=\"tableData\" height=\"300\" size=\"small\" stripe>\r\n        <el-table-column prop=\"time\" label=\"时间\" width=\"180\" />\r\n        <el-table-column prop=\"actual\" label=\"实际值\" />\r\n        <el-table-column prop=\"predicted\" label=\"预测值\" />\r\n        <el-table-column prop=\"error\" label=\"误差\" />\r\n      </el-table>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, ref } from 'vue'\r\nimport BaseEChart from '@/components/BaseEChart.vue'\r\nimport AnimatedNumber from '@/components/AnimatedNumber.vue'\r\nimport { ElMessage } from 'element-plus'\r\nimport { Refresh } from '@element-plus/icons-vue'\r\n\r\n// 模型候选\r\nconst models = [\r\n  { label: 'LSTM 双层', value: 'lstm' },\r\n  { label: 'ARIMA', value: 'arima' },\r\n  { label: 'Prophet', value: 'prophet' },\r\n  { label: 'XGBoost', value: 'xgb' }\r\n]\r\n\r\n// 表单配置\r\nconst config = reactive({\r\n  model: 'lstm',\r\n  horizon: 24,\r\n  trainSplit: 0.8\r\n})\r\n\r\nconst metrics = reactive([\r\n  { label: 'MAE', value: 1.12 },\r\n  { label: 'RMSE', value: 1.95 },\r\n  { label: 'MAPE(%)', value: 3.25 },\r\n  { label: 'R²', value: 0.93 }\r\n])\r\n\r\n// 图表配置（静态示例数据）\r\nconst forecastChartOptions = ref({\r\n  tooltip: { trigger: 'axis' },\r\n  legend: { data: ['实际值', '预测值'] },\r\n  xAxis: {\r\n    type: 'category',\r\n    data: Array.from({ length: 24 }).map((_, i) => `${i}:00`)\r\n  },\r\n  yAxis: { type: 'value' },\r\n  series: [\r\n    {\r\n      name: '实际值',\r\n      type: 'line',\r\n      data: Array.from({ length: 24 }).map(() => (Math.random() * 20 + 30).toFixed(2))\r\n    },\r\n    {\r\n      name: '预测值',\r\n      type: 'line',\r\n      areaStyle: {},\r\n      data: Array.from({ length: 24 }).map(() => (Math.random() * 20 + 30).toFixed(2))\r\n    }\r\n  ]\r\n})\r\n\r\nconst importanceChartOptions = ref({\r\n  tooltip: { trigger: 'axis' },\r\n  grid: { left: '3%', right: '4%', bottom: '3%', containLabel: true },\r\n  xAxis: { type: 'value' },\r\n  yAxis: {\r\n    type: 'category',\r\n    data: ['温度', '湿度', '风速', '土壤含水量', '降雨量'],\r\n    inverse: true\r\n  },\r\n  series: [{\r\n    type: 'bar',\r\n    data: [0.35, 0.28, 0.18, 0.12, 0.07],\r\n    itemStyle: { color: '#409EFF' },\r\n    label: { show: true, position: 'right', formatter: '{c}%'}\r\n  }]\r\n})\r\n\r\n// 表格示例数据\r\nconst tableData = ref(\r\n  Array.from({ length: 24 }).map((_, i) => {\r\n    const actual = +(Math.random() * 20 + 30).toFixed(2)\r\n    const predicted = +(actual + (Math.random() * 2 - 1)).toFixed(2)\r\n    return {\r\n      time: `${i}:00`,\r\n      actual,\r\n      predicted,\r\n      error: +(predicted - actual).toFixed(2)\r\n    }\r\n  })\r\n)\r\n\r\n// 模拟训练模型\r\nfunction trainModel() {\r\n  ElMessage.success('已触发模型重新训练（示例）')\r\n  // TODO: 调用后端训练接口\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.prediction-studio {\r\n  padding: 24px;\r\n}\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n.metric-card {\r\n  text-align: center;\r\n  padding: 12px 0;\r\n  border-right: 1px solid #eee;\r\n}\r\n.metric-card:last-child {\r\n  border-right: none;\r\n}\r\n.metric-label {\r\n  color: #909399;\r\n  font-size: 14px;\r\n  margin-bottom: 4px;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}