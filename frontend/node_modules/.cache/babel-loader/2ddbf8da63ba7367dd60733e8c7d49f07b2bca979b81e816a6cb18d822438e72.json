{"ast":null,"code":"import { ref, computed, onMounted, onUnmounted, onActivated, onDeactivated, nextTick } from 'vue';\nimport { useStore } from 'vuex';\nimport { debounce } from 'lodash-es';\nimport cache from '@/utils/cache';\nimport BaseEChart from '@/components/BaseEChart.vue';\nimport PhotoTimeline from '@/components/PhotoTimeline.vue';\nimport { Monitor, Connection, Warning, InfoFilled, Cpu, ArrowUp, ArrowDown, Plus, View, Setting, Delete, Search, Grid, List, Refresh, Download } from '@element-plus/icons-vue';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nimport AnimatedNumber from '@/components/AnimatedNumber.vue';\nimport { exportToExcel } from '@/utils/excel';\n\n// WebSocket连接\nconst MAX_RECONNECT_ATTEMPTS = 5;\n\n// 状态管理\nconst DEVICE_CACHE_KEY = 'monitoring_devices';\nconst DEVICE_CACHE_EXPIRY = 5 * 60 * 1000; // 5分钟\n\n// 防抖的搜索和筛选\n\nexport default {\n  __name: 'Monitoring',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const ws = ref(null);\n    const wsReconnectTimer = ref(null);\n    const wsReconnectAttempts = ref(0);\n    const store = useStore();\n\n    // 加载状态\n    const loading = ref(false);\n\n    // 缓存设备数据\n    const debouncedSearch = debounce(query => {\n      searchQuery.value = query;\n    }, 300);\n    const debouncedFilter = debounce((status, type) => {\n      filterStatus.value = status;\n      filterType.value = type;\n    }, 300);\n\n    // 初始化WebSocket连接\n    const initWebSocket = () => {\n      if (ws.value) return;\n      ws.value = new WebSocket(process.env.VUE_APP_WS_URL || 'ws://localhost:8080/api/ws/monitoring');\n      ws.value.onopen = () => {\n        console.log('WebSocket connected');\n        wsReconnectAttempts.value = 0;\n      };\n      ws.value.onmessage = event => {\n        const data = JSON.parse(event.data);\n        handleWebSocketMessage(data);\n      };\n      ws.value.onclose = () => {\n        console.log('WebSocket disconnected');\n        ws.value = null;\n        handleWebSocketReconnect();\n      };\n      ws.value.onerror = error => {\n        console.error('WebSocket error:', error);\n        ws.value?.close();\n      };\n    };\n\n    // 处理WebSocket重连\n    const handleWebSocketReconnect = () => {\n      if (wsReconnectAttempts.value >= MAX_RECONNECT_ATTEMPTS) {\n        ElMessage.error('连接服务器失败，请刷新页面重试');\n        return;\n      }\n      if (wsReconnectTimer.value) {\n        clearTimeout(wsReconnectTimer.value);\n      }\n      wsReconnectTimer.value = setTimeout(() => {\n        wsReconnectAttempts.value++;\n        initWebSocket();\n      }, 3000 * Math.min(wsReconnectAttempts.value + 1, 5));\n    };\n\n    // 处理WebSocket消息\n    const handleWebSocketMessage = data => {\n      switch (data.type) {\n        case 'deviceUpdate':\n          updateDeviceData(data.payload);\n          break;\n        case 'alert':\n          handleNewAlert(data.payload);\n          break;\n        case 'stats':\n          updateDeviceStats(data.payload);\n          break;\n      }\n    };\n\n    // 更新设备数据\n    const updateDeviceData = async deviceData => {\n      const index = deviceList.value.findIndex(d => d.name === deviceData.name);\n      if (index !== -1) {\n        deviceList.value[index] = {\n          ...deviceList.value[index],\n          ...deviceData\n        };\n        // 更新缓存\n        await cache.set(DEVICE_CACHE_KEY, deviceList.value, DEVICE_CACHE_EXPIRY);\n      }\n    };\n\n    // 处理新告警\n    const handleNewAlert = alert => {\n      alerts.value.unshift({\n        ...alert,\n        unread: true\n      });\n\n      // 限制告警列表长度\n      if (alerts.value.length > 50) {\n        alerts.value = alerts.value.slice(0, 50);\n      }\n\n      // 显示告警通知\n      ElMessage({\n        type: alert.level === 'error' ? 'error' : alert.level === 'warning' ? 'warning' : 'info',\n        message: `${alert.device}: ${alert.title}`,\n        duration: 5000\n      });\n    };\n\n    // 更新设备统计数据\n    const updateDeviceStats = stats => {\n      deviceStats.value = stats;\n    };\n\n    // 初始化数据\n    const initData = async () => {\n      loading.value = true;\n      try {\n        // 尝试从缓存获取数据\n        const cachedData = await cache.get(DEVICE_CACHE_KEY);\n        if (cachedData) {\n          deviceList.value = cachedData;\n          loading.value = false;\n          return;\n        }\n\n        // 如果没有缓存，从服务器获取\n        const response = await store.dispatch('device/fetchDevices');\n        deviceList.value = response;\n\n        // 更新缓存\n        await cache.set(DEVICE_CACHE_KEY, response, DEVICE_CACHE_EXPIRY);\n      } catch (error) {\n        ElMessage.error('获取设备数据失败');\n        console.error('Failed to fetch devices:', error);\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 生命周期钩子\n    onMounted(() => {\n      initWebSocket();\n      initData();\n    });\n    onUnmounted(() => {\n      if (ws.value) {\n        ws.value.close();\n        ws.value = null;\n      }\n      if (wsReconnectTimer.value) {\n        clearTimeout(wsReconnectTimer.value);\n      }\n    });\n\n    // keep-alive 支持\n    onActivated(() => {\n      initWebSocket();\n      initData();\n    });\n    onDeactivated(() => {\n      if (ws.value) {\n        ws.value.close();\n        ws.value = null;\n      }\n    });\n\n    // 视图模式\n    const viewMode = ref('grid');\n\n    // 设备统计数据\n    const deviceStats = ref({\n      online: 12,\n      offline: 3,\n      error: 1,\n      total: 16\n    });\n\n    // 设备列表数据\n    const deviceList = ref([{\n      name: '传感器A',\n      type: '温湿度',\n      status: 'online',\n      location: '田块1',\n      latestData: '温度: 25°C, 湿度: 65%',\n      lastUpdate: '2024-03-15 14:30:00'\n    }, {\n      name: '摄像头B',\n      type: '视频监控',\n      status: 'offline',\n      location: '田块2',\n      latestData: '离线中',\n      lastUpdate: '2024-03-15 10:15:00'\n    }, {\n      name: '网关C',\n      type: '数据网关',\n      status: 'online',\n      location: '田块3',\n      latestData: '数据流量: 2.5MB/s',\n      lastUpdate: '2024-03-15 14:35:00'\n    }, {\n      name: '传感器D',\n      type: 'PH值',\n      status: 'error',\n      location: '田块4',\n      latestData: 'PH值: 异常',\n      lastUpdate: '2024-03-15 14:20:00'\n    }]);\n\n    // 告警数据\n    const alerts = ref([{\n      id: 1,\n      title: 'PH值超出正常范围',\n      device: '传感器D',\n      time: '10分钟前',\n      level: 'error',\n      unread: true\n    }, {\n      id: 2,\n      title: '设备离线超过4小时',\n      device: '摄像头B',\n      time: '4小时前',\n      level: 'warning',\n      unread: true\n    }, {\n      id: 3,\n      title: '数据传输异常',\n      device: '网关C',\n      time: '2小时前',\n      level: 'info',\n      unread: false\n    }]);\n\n    // 搜索和筛选\n    const searchQuery = ref('');\n    const filterStatus = ref('');\n    const filterType = ref('');\n\n    // 优化的计算属性\n    const filteredDeviceList = computed(() => {\n      const query = searchQuery.value.toLowerCase();\n      const status = filterStatus.value;\n      const type = filterType.value;\n      return deviceList.value.filter(device => {\n        if (status && device.status !== status) return false;\n        if (type && device.type !== type) return false;\n        if (!query) return true;\n        return device.name.toLowerCase().includes(query) || device.type.toLowerCase().includes(query) || device.location.toLowerCase().includes(query);\n      });\n    });\n\n    // 设备详情相关\n    const showDetail = ref(false);\n    const currentDevice = ref(null);\n    const deviceAlerts = ref([{\n      time: '2024-03-15 14:20:00',\n      title: 'PH值超出正常范围',\n      level: 'error',\n      status: '未处理'\n    }, {\n      time: '2024-03-15 10:15:00',\n      title: '设备离线',\n      level: 'warning',\n      status: '已处理'\n    }, {\n      time: '2024-03-14 16:30:00',\n      title: '数据异常',\n      level: 'info',\n      status: '已处理'\n    }]);\n\n    // 新增设备相关\n    const showAddDeviceDialog = ref(false);\n    const deviceForm = ref(null);\n    const newDevice = ref({\n      name: '',\n      type: '',\n      location: ''\n    });\n    const deviceRules = {\n      name: [{\n        required: true,\n        message: '请输入设备名称',\n        trigger: 'blur'\n      }, {\n        min: 2,\n        max: 20,\n        message: '长度在 2 到 20 个字符',\n        trigger: 'blur'\n      }],\n      type: [{\n        required: true,\n        message: '请选择设备类型',\n        trigger: 'change'\n      }],\n      location: [{\n        required: true,\n        message: '请输入安装位置',\n        trigger: 'blur'\n      }]\n    };\n\n    // 图表相关\n    const selectedDevice = ref('');\n    /* 实时数据图表配置 */\n    const chartOptions = computed(() => {\n      // 使用 requestAnimationFrame 优化图表更新\n      if (chartUpdateTimer) {\n        cancelAnimationFrame(chartUpdateTimer);\n      }\n      chartUpdateTimer = requestAnimationFrame(() => {\n        // ... existing chart options ...\n      });\n    });\n    const historyChartOptions = computed(() => ({\n      backgroundColor: 'transparent',\n      title: {\n        text: '历史数据趋势',\n        textStyle: {\n          color: '#fff'\n        }\n      },\n      tooltip: {\n        trigger: 'axis',\n        axisPointer: {\n          type: 'shadow'\n        }\n      },\n      legend: {\n        data: ['温度', '湿度', 'PH值'],\n        textStyle: {\n          color: '#fff'\n        },\n        top: 30\n      },\n      grid: {\n        top: 80,\n        right: 20,\n        bottom: 30,\n        left: 50,\n        containLabel: true\n      },\n      xAxis: {\n        type: 'category',\n        data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日'],\n        axisLabel: {\n          color: '#fff'\n        },\n        axisLine: {\n          lineStyle: {\n            color: '#8c8c8c'\n          }\n        }\n      },\n      yAxis: {\n        type: 'value',\n        axisLabel: {\n          color: '#fff'\n        },\n        splitLine: {\n          lineStyle: {\n            color: 'rgba(255, 255, 255, 0.1)'\n          }\n        },\n        axisLine: {\n          lineStyle: {\n            color: '#8c8c8c'\n          }\n        }\n      },\n      series: [{\n        name: '温度',\n        type: 'bar',\n        data: [23, 24, 25, 23, 24, 26, 25],\n        itemStyle: {\n          color: {\n            type: 'linear',\n            x: 0,\n            y: 0,\n            x2: 0,\n            y2: 1,\n            colorStops: [{\n              offset: 0,\n              color: '#1890ff'\n            }, {\n              offset: 1,\n              color: 'rgba(24, 144, 255, 0.3)'\n            }]\n          }\n        }\n      }, {\n        name: '湿度',\n        type: 'bar',\n        data: [65, 63, 68, 64, 62, 65, 66],\n        itemStyle: {\n          color: {\n            type: 'linear',\n            x: 0,\n            y: 0,\n            x2: 0,\n            y2: 1,\n            colorStops: [{\n              offset: 0,\n              color: '#52c41a'\n            }, {\n              offset: 1,\n              color: 'rgba(82, 196, 26, 0.3)'\n            }]\n          }\n        }\n      }, {\n        name: 'PH值',\n        type: 'bar',\n        data: [7.1, 7.0, 7.2, 7.1, 7.0, 7.1, 7.2],\n        itemStyle: {\n          color: {\n            type: 'linear',\n            x: 0,\n            y: 0,\n            x2: 0,\n            y2: 1,\n            colorStops: [{\n              offset: 0,\n              color: '#faad14'\n            }, {\n              offset: 1,\n              color: 'rgba(250, 173, 20, 0.3)'\n            }]\n          }\n        }\n      }]\n    }));\n\n    // 生成时间序列数据\n    function generateTimeData(baseValue, variance) {\n      const now = new Date();\n      const data = [];\n      for (let i = 0; i < 60; i++) {\n        const time = new Date(now - (59 - i) * 60000);\n        data.push([time.toISOString(), +(baseValue + (Math.random() * 2 - 1) * variance).toFixed(1)]);\n      }\n      return data;\n    }\n\n    // 优化的设备操作\n    const viewDetail = async device => {\n      currentDevice.value = device;\n      showDetail.value = true;\n      try {\n        // 预加载设备历史数据\n        const history = await store.dispatch('device/fetchDeviceHistory', device.name);\n        await nextTick();\n        // 可以在这里更新依赖于历史数据的图表或组件\n      } catch (error) {\n        ElMessage.error('获取设备历史数据失败');\n      }\n    };\n    const configDevice = async device => {\n      try {\n        loading.value = true;\n        await store.dispatch('device/configureDevice', device);\n        ElMessage.success('设备配置已更新');\n      } catch (error) {\n        ElMessage.error('设备配置失败');\n      } finally {\n        loading.value = false;\n      }\n    };\n    const deleteDevice = async device => {\n      try {\n        await ElMessageBox.confirm(`您正在尝试删除设备：<strong>${device.name}</strong><br/>此操作将永久删除该设备及其所有关联数据，且无法恢复。`, '删除确认', {\n          type: 'warning',\n          confirmButtonText: '确定删除',\n          cancelButtonText: '取消',\n          dangerouslyUseHTMLString: true\n        });\n        loading.value = true;\n        await store.dispatch('device/deleteDevice', device.name);\n\n        // 更新本地数据和缓存\n        deviceList.value = deviceList.value.filter(d => d.name !== device.name);\n        await cache.set(DEVICE_CACHE_KEY, deviceList.value, DEVICE_CACHE_EXPIRY);\n        ElMessage.success('设备已删除');\n      } catch (error) {\n        if (error !== 'cancel') {\n          ElMessage.error('删除设备失败');\n          console.error('Delete device error:', error);\n        }\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 优化的告警处理\n    const handleAlert = async alert => {\n      const device = deviceList.value.find(d => d.name === alert.device);\n      if (device) {\n        viewDetail(device);\n      }\n      if (alert.unread) {\n        // 使用 nextTick 确保在 DOM 更新后再标记为已读\n        await nextTick();\n        const index = alerts.value.findIndex(a => a.id === alert.id);\n        if (index !== -1 && alerts.value[index].unread) {\n          alerts.value[index].unread = false;\n          try {\n            await store.dispatch('alert/markAsRead', alert.id);\n          } catch (error) {\n            // 如果标记已读失败，将状态改回未读\n            alerts.value[index].unread = true;\n            console.error('Failed to mark alert as read:', error);\n          }\n        }\n      }\n    };\n    function showAddDevice() {\n      showAddDeviceDialog.value = true;\n    }\n    function submitNewDevice() {\n      deviceForm.value?.validate(valid => {\n        if (valid) {\n          const device = {\n            ...newDevice.value,\n            status: 'online',\n            latestData: '暂无数据',\n            lastUpdate: new Date().toLocaleString()\n          };\n          deviceList.value.push(device);\n          showAddDeviceDialog.value = false;\n          ElMessage.success('添加成功');\n          newDevice.value = {\n            name: '',\n            type: '',\n            location: ''\n          };\n        }\n      });\n    }\n\n    // Helper functions\n    function getDeviceIcon(type) {\n      const icons = {\n        '温湿度': 'Temperature',\n        'PH值': 'Experiment',\n        '视频监控': 'VideoCamera',\n        '数据网关': 'Connection'\n      };\n      return icons[type] || 'Monitor';\n    }\n    function getDeviceTagType(type) {\n      const types = {\n        '温湿度': '',\n        'PH值': 'warning',\n        '视频监控': 'success',\n        '数据网关': 'info'\n      };\n      return types[type] || 'info';\n    }\n    function getStatusText(status) {\n      const statuses = {\n        online: '在线',\n        offline: '离线',\n        error: '异常'\n      };\n      return statuses[status] || status;\n    }\n    function getAlertTagType(level) {\n      const types = {\n        error: 'danger',\n        warning: 'warning',\n        info: 'info'\n      };\n      return types[level] || 'info';\n    }\n\n    // 状态选项\n    const statusOptions = [{\n      label: '全部',\n      value: ''\n    }, {\n      label: '在线',\n      value: 'online'\n    }, {\n      label: '离线',\n      value: 'offline'\n    }, {\n      label: '异常',\n      value: 'error'\n    }];\n\n    // 类型选项\n    const typeOptions = [{\n      label: '全部',\n      value: ''\n    }, {\n      label: '温湿度传感器',\n      value: '温湿度'\n    }, {\n      label: 'PH值传感器',\n      value: 'PH值'\n    }, {\n      label: '视频监控',\n      value: '视频监控'\n    }, {\n      label: '数据网关',\n      value: '数据网关'\n    }];\n\n    // 高级搜索\n    const showAdvancedSearchDialog = ref(false);\n    const advancedSearch = ref({\n      name: '',\n      type: '',\n      status: '',\n      location: '',\n      updateTime: []\n    });\n\n    // Excel导出\n    const exporting = ref(false);\n\n    // 刷新数据\n    const refreshData = async () => {\n      await initData();\n    };\n\n    // 导出数据\n    const exportData = async () => {\n      try {\n        exporting.value = true;\n        await exportToExcel(deviceList.value, {\n          filename: `设备列表_${new Date().toLocaleDateString()}`,\n          sheets: [{\n            name: '设备列表',\n            columns: [{\n              header: '设备名称',\n              key: 'name'\n            }, {\n              header: '设备类型',\n              key: 'type'\n            }, {\n              header: '状态',\n              key: 'status'\n            }, {\n              header: '位置',\n              key: 'location'\n            }, {\n              header: '最近数据',\n              key: 'latestData'\n            }, {\n              header: '最后更新',\n              key: 'lastUpdate'\n            }]\n          }]\n        });\n        ElMessage.success('导出成功');\n      } catch (error) {\n        ElMessage.error('导出失败');\n        console.error('Export failed:', error);\n      } finally {\n        exporting.value = false;\n      }\n    };\n\n    // 显示高级搜索\n    const showAdvancedSearch = () => {\n      showAdvancedSearchDialog.value = true;\n    };\n\n    // 重置高级搜索\n    const resetAdvancedSearch = () => {\n      advancedSearch.value = {\n        name: '',\n        type: '',\n        status: '',\n        location: '',\n        updateTime: []\n      };\n    };\n\n    // 应用高级搜索\n    const applyAdvancedSearch = () => {\n      searchQuery.value = advancedSearch.value.name;\n      filterType.value = advancedSearch.value.type;\n      filterStatus.value = advancedSearch.value.status;\n      showAdvancedSearchDialog.value = false;\n    };\n\n    // 统计卡片相关方法\n    const getStatTooltip = key => {\n      const tooltips = {\n        online: '当前在线的设备数量',\n        offline: '当前离线的设备数量',\n        error: '存在异常的设备数量',\n        total: '系统中的设备总数'\n      };\n      return tooltips[key];\n    };\n    const getStatLabel = key => {\n      const labels = {\n        online: '在线设备',\n        offline: '离线设备',\n        error: '异常设备',\n        total: '设备总数'\n      };\n      return labels[key];\n    };\n    const getStatIcon = key => {\n      const icons = {\n        online: Monitor,\n        offline: Connection,\n        error: Warning,\n        total: Cpu\n      };\n      return icons[key];\n    };\n    const getTrendClass = key => {\n      const trends = {\n        online: 'up',\n        offline: 'down',\n        error: '',\n        total: 'up'\n      };\n      return trends[key];\n    };\n    const getTrendIcon = key => {\n      const trends = {\n        online: ArrowUp,\n        offline: ArrowDown,\n        error: InfoFilled,\n        total: ArrowUp\n      };\n      return trends[key];\n    };\n    const getTrendText = key => {\n      const texts = {\n        online: '2台',\n        offline: '1台',\n        error: '无变化',\n        total: '1台'\n      };\n      return texts[key];\n    };\n    const __returned__ = {\n      ws,\n      wsReconnectTimer,\n      wsReconnectAttempts,\n      MAX_RECONNECT_ATTEMPTS,\n      store,\n      loading,\n      DEVICE_CACHE_KEY,\n      DEVICE_CACHE_EXPIRY,\n      debouncedSearch,\n      debouncedFilter,\n      initWebSocket,\n      handleWebSocketReconnect,\n      handleWebSocketMessage,\n      updateDeviceData,\n      handleNewAlert,\n      updateDeviceStats,\n      initData,\n      viewMode,\n      deviceStats,\n      deviceList,\n      alerts,\n      searchQuery,\n      filterStatus,\n      filterType,\n      filteredDeviceList,\n      showDetail,\n      currentDevice,\n      deviceAlerts,\n      showAddDeviceDialog,\n      deviceForm,\n      newDevice,\n      deviceRules,\n      selectedDevice,\n      chartOptions,\n      historyChartOptions,\n      generateTimeData,\n      viewDetail,\n      configDevice,\n      deleteDevice,\n      handleAlert,\n      showAddDevice,\n      submitNewDevice,\n      getDeviceIcon,\n      getDeviceTagType,\n      getStatusText,\n      getAlertTagType,\n      statusOptions,\n      typeOptions,\n      showAdvancedSearchDialog,\n      advancedSearch,\n      exporting,\n      refreshData,\n      exportData,\n      showAdvancedSearch,\n      resetAdvancedSearch,\n      applyAdvancedSearch,\n      getStatTooltip,\n      getStatLabel,\n      getStatIcon,\n      getTrendClass,\n      getTrendIcon,\n      getTrendText,\n      ref,\n      computed,\n      onMounted,\n      onUnmounted,\n      onActivated,\n      onDeactivated,\n      nextTick,\n      get useStore() {\n        return useStore;\n      },\n      get debounce() {\n        return debounce;\n      },\n      get cache() {\n        return cache;\n      },\n      BaseEChart,\n      PhotoTimeline,\n      get Monitor() {\n        return Monitor;\n      },\n      get Connection() {\n        return Connection;\n      },\n      get Warning() {\n        return Warning;\n      },\n      get InfoFilled() {\n        return InfoFilled;\n      },\n      get Cpu() {\n        return Cpu;\n      },\n      get ArrowUp() {\n        return ArrowUp;\n      },\n      get ArrowDown() {\n        return ArrowDown;\n      },\n      get Plus() {\n        return Plus;\n      },\n      get View() {\n        return View;\n      },\n      get Setting() {\n        return Setting;\n      },\n      get Delete() {\n        return Delete;\n      },\n      get Search() {\n        return Search;\n      },\n      get Grid() {\n        return Grid;\n      },\n      get List() {\n        return List;\n      },\n      get Refresh() {\n        return Refresh;\n      },\n      get Download() {\n        return Download;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get ElMessageBox() {\n        return ElMessageBox;\n      },\n      AnimatedNumber,\n      get exportToExcel() {\n        return exportToExcel;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","onUnmounted","onActivated","onDeactivated","nextTick","useStore","debounce","cache","BaseEChart","PhotoTimeline","Monitor","Connection","Warning","InfoFilled","Cpu","ArrowUp","ArrowDown","Plus","View","Setting","Delete","Search","Grid","List","Refresh","Download","ElMessage","ElMessageBox","AnimatedNumber","exportToExcel","MAX_RECONNECT_ATTEMPTS","DEVICE_CACHE_KEY","DEVICE_CACHE_EXPIRY","ws","wsReconnectTimer","wsReconnectAttempts","store","loading","debouncedSearch","query","searchQuery","value","debouncedFilter","status","type","filterStatus","filterType","initWebSocket","WebSocket","process","env","VUE_APP_WS_URL","onopen","console","log","onmessage","event","data","JSON","parse","handleWebSocketMessage","onclose","handleWebSocketReconnect","onerror","error","close","clearTimeout","setTimeout","Math","min","updateDeviceData","payload","handleNewAlert","updateDeviceStats","deviceData","index","deviceList","findIndex","d","name","set","alert","alerts","unshift","unread","length","slice","level","message","device","title","duration","stats","deviceStats","initData","cachedData","get","response","dispatch","viewMode","online","offline","total","location","latestData","lastUpdate","id","time","filteredDeviceList","toLowerCase","filter","includes","showDetail","currentDevice","deviceAlerts","showAddDeviceDialog","deviceForm","newDevice","deviceRules","required","trigger","max","selectedDevice","chartOptions","chartUpdateTimer","cancelAnimationFrame","requestAnimationFrame","historyChartOptions","backgroundColor","text","textStyle","color","tooltip","axisPointer","legend","top","grid","right","bottom","left","containLabel","xAxis","axisLabel","axisLine","lineStyle","yAxis","splitLine","series","itemStyle","x","y","x2","y2","colorStops","offset","generateTimeData","baseValue","variance","now","Date","i","push","toISOString","random","toFixed","viewDetail","history","configDevice","success","deleteDevice","confirm","confirmButtonText","cancelButtonText","dangerouslyUseHTMLString","handleAlert","find","a","showAddDevice","submitNewDevice","validate","valid","toLocaleString","getDeviceIcon","icons","getDeviceTagType","types","getStatusText","statuses","getAlertTagType","warning","info","statusOptions","label","typeOptions","showAdvancedSearchDialog","advancedSearch","updateTime","exporting","refreshData","exportData","filename","toLocaleDateString","sheets","columns","header","key","showAdvancedSearch","resetAdvancedSearch","applyAdvancedSearch","getStatTooltip","tooltips","getStatLabel","labels","getStatIcon","getTrendClass","trends","getTrendIcon","getTrendText","texts"],"sources":["D:/restore/water-melt/frontend/src/views/Monitoring.vue"],"sourcesContent":["<!-- Monitoring.vue -->\r\n<template>\r\n  <div class=\"monitoring-view\">\r\n    <!-- 顶部统计卡片 -->\r\n    <div class=\"stats-section\">\r\n      <el-tooltip\r\n        v-for=\"(stat, key) in deviceStats\"\r\n        :key=\"key\"\r\n        :content=\"getStatTooltip(key)\"\r\n        placement=\"top\"\r\n      >\r\n        <div :class=\"['stat-card', key]\">\r\n          <div class=\"stat-icon\">\r\n            <el-icon><component :is=\"getStatIcon(key)\" /></el-icon>\r\n          </div>\r\n          <div class=\"stat-content\">\r\n            <animated-number \r\n              :value=\"stat\" \r\n              :duration=\"1000\"\r\n              class=\"stat-value\"\r\n            />\r\n            <div class=\"stat-label\">{{ getStatLabel(key) }}</div>\r\n          </div>\r\n          <div :class=\"['stat-trend', getTrendClass(key)]\">\r\n            <el-icon><component :is=\"getTrendIcon(key)\" /></el-icon>\r\n            <span>{{ getTrendText(key) }}</span>\r\n          </div>\r\n        </div>\r\n      </el-tooltip>\r\n    </div>\r\n\r\n    <!-- 设备列表工具栏 -->\r\n    <div class=\"toolbar\">\r\n      <div class=\"toolbar-left\">\r\n        <el-button-group>\r\n          <el-button \r\n            type=\"primary\" \r\n            @click=\"showAddDevice\"\r\n            :loading=\"loading\"\r\n          >\r\n            <el-icon><Plus /></el-icon>新增设备\r\n          </el-button>\r\n          <el-button \r\n            :class=\"{ active: viewMode === 'grid' }\" \r\n            @click=\"viewMode = 'grid'\"\r\n          >\r\n            <el-icon><Grid /></el-icon>\r\n          </el-button>\r\n          <el-button \r\n            :class=\"{ active: viewMode === 'table' }\" \r\n            @click=\"viewMode = 'table'\"\r\n          >\r\n            <el-icon><List /></el-icon>\r\n          </el-button>\r\n        </el-button-group>\r\n        \r\n        <el-button-group class=\"view-options\">\r\n          <el-tooltip content=\"刷新数据\" placement=\"top\">\r\n            <el-button @click=\"refreshData\" :loading=\"loading\">\r\n              <el-icon><Refresh /></el-icon>\r\n            </el-button>\r\n          </el-tooltip>\r\n          <el-tooltip content=\"导出数据\" placement=\"top\">\r\n            <el-button @click=\"exportData\" :loading=\"exporting\">\r\n              <el-icon><Download /></el-icon>\r\n            </el-button>\r\n          </el-tooltip>\r\n        </el-button-group>\r\n      </div>\r\n      \r\n      <div class=\"toolbar-right\">\r\n        <el-input\r\n          v-model=\"searchQuery\"\r\n          placeholder=\"搜索设备...\"\r\n          prefix-icon=\"Search\"\r\n          clearable\r\n          @input=\"debouncedSearch\"\r\n        >\r\n          <template #append>\r\n            <el-button @click=\"showAdvancedSearch\">\r\n              <el-icon><Setting /></el-icon>\r\n            </el-button>\r\n          </template>\r\n        </el-input>\r\n        \r\n        <el-select\r\n          v-model=\"filterStatus\"\r\n          placeholder=\"状态筛选\"\r\n          clearable\r\n          @change=\"debouncedFilter\"\r\n        >\r\n          <el-option\r\n            v-for=\"option in statusOptions\"\r\n            :key=\"option.value\"\r\n            v-bind=\"option\"\r\n          >\r\n            <div class=\"select-option\">\r\n              <span class=\"status-dot\" :class=\"option.value\"></span>\r\n              {{ option.label }}\r\n            </div>\r\n          </el-option>\r\n        </el-select>\r\n        \r\n        <el-select\r\n          v-model=\"filterType\"\r\n          placeholder=\"类型筛选\"\r\n          clearable\r\n          @change=\"debouncedFilter\"\r\n        >\r\n          <el-option\r\n            v-for=\"option in typeOptions\"\r\n            :key=\"option.value\"\r\n            v-bind=\"option\"\r\n          >\r\n            <div class=\"select-option\">\r\n              <el-icon :class=\"getDeviceIcon(option.value)\"></el-icon>\r\n              {{ option.label }}\r\n            </div>\r\n          </el-option>\r\n        </el-select>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 高级搜索对话框 -->\r\n    <el-dialog\r\n      v-model=\"showAdvancedSearchDialog\"\r\n      title=\"高级搜索\"\r\n      width=\"500px\"\r\n      destroy-on-close\r\n    >\r\n      <el-form\r\n        ref=\"searchForm\"\r\n        :model=\"advancedSearch\"\r\n        label-width=\"100px\"\r\n      >\r\n        <el-form-item label=\"设备名称\">\r\n          <el-input v-model=\"advancedSearch.name\" placeholder=\"支持模糊搜索\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"设备类型\">\r\n          <el-select v-model=\"advancedSearch.type\" placeholder=\"请选择\" clearable>\r\n            <el-option\r\n              v-for=\"option in typeOptions\"\r\n              :key=\"option.value\"\r\n              v-bind=\"option\"\r\n            />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"设备状态\">\r\n          <el-select v-model=\"advancedSearch.status\" placeholder=\"请选择\" clearable>\r\n            <el-option\r\n              v-for=\"option in statusOptions\"\r\n              :key=\"option.value\"\r\n              v-bind=\"option\"\r\n            />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"安装位置\">\r\n          <el-input v-model=\"advancedSearch.location\" placeholder=\"支持模糊搜索\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"更新时间\">\r\n          <el-date-picker\r\n            v-model=\"advancedSearch.updateTime\"\r\n            type=\"daterange\"\r\n            range-separator=\"至\"\r\n            start-placeholder=\"开始日期\"\r\n            end-placeholder=\"结束日期\"\r\n          />\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <el-button @click=\"showAdvancedSearchDialog = false\">取消</el-button>\r\n        <el-button @click=\"resetAdvancedSearch\">重置</el-button>\r\n        <el-button type=\"primary\" @click=\"applyAdvancedSearch\">确定</el-button>\r\n      </template>\r\n    </el-dialog>\r\n\r\n    <!-- 主要内容区域 -->\r\n    <div class=\"main-content\">\r\n      <!-- 左侧：设备列表和状态 -->\r\n      <div class=\"content-main\">\r\n        <div class=\"panel device-list-panel\">\r\n          <div class=\"panel-header\">\r\n            <div class=\"header-left\">\r\n              <h3>设备管理</h3>\r\n            </div>\r\n            <div class=\"header-right\">\r\n            </div>\r\n          </div>\r\n\r\n          <!-- 网格视图 -->\r\n          <div v-if=\"viewMode === 'grid'\" class=\"device-grid\">\r\n            <el-scrollbar height=\"calc(100vh - 280px)\">\r\n              <el-virtual-list\r\n                :items=\"filteredDeviceList\"\r\n                :item-size=\"180\"\r\n                :buffer-size=\"5\"\r\n              >\r\n                <template #default=\"{ item: device }\">\r\n                  <div class=\"device-card\"\r\n                       :class=\"device.status\">\r\n                    <div class=\"device-card-header\">\r\n                      <div class=\"device-icon\">\r\n                        <el-icon :class=\"getDeviceIcon(device.type)\"><Monitor /></el-icon>\r\n                      </div>\r\n                      <div class=\"device-status\">\r\n                        <span class=\"status-dot\"></span>\r\n                        {{ getStatusText(device.status) }}\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"device-card-content\">\r\n                      <div class=\"device-name\">{{ device.name }}</div>\r\n                      <div class=\"device-type\">\r\n                        <el-tag :type=\"getDeviceTagType(device.type)\" size=\"small\">{{ device.type }}</el-tag>\r\n                      </div>\r\n                      <div class=\"device-location\">{{ device.location }}</div>\r\n                      <div class=\"device-data\">\r\n                        <el-tooltip \r\n                          :content=\"device.lastUpdate\" \r\n                          placement=\"top\"\r\n                        >\r\n                          <span>{{ device.latestData }}</span>\r\n                        </el-tooltip>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"device-card-footer\">\r\n                      <el-button-group>\r\n                        <el-button size=\"small\" @click=\"viewDetail(device)\">\r\n                          <el-icon><View /></el-icon>\r\n                          详情\r\n                        </el-button>\r\n                        <el-button size=\"small\" type=\"primary\" @click=\"configDevice(device)\">\r\n                          <el-icon><Setting /></el-icon>\r\n                          配置\r\n                        </el-button>\r\n                        <el-button size=\"small\" type=\"danger\" @click=\"deleteDevice(device)\">\r\n                          <el-icon><Delete /></el-icon>\r\n                          删除\r\n                        </el-button>\r\n                      </el-button-group>\r\n                    </div>\r\n                  </div>\r\n                </template>\r\n              </el-virtual-list>\r\n            </el-scrollbar>\r\n          </div>\r\n\r\n          <!-- 表格视图 -->\r\n          <el-scrollbar v-else height=\"calc(100vh - 280px)\">\r\n            <el-table \r\n              :data=\"filteredDeviceList\" \r\n              style=\"width: 100%\"\r\n              :header-cell-style=\"{ background: '#1a1a1a', color: '#fff' }\"\r\n              v-loading=\"loading\"\r\n              height=\"100%\"\r\n              :virtual-scrolling=\"true\"\r\n              :row-height=\"54\"\r\n            >\r\n              <el-table-column prop=\"name\" label=\"设备名称\" min-width=\"200\">\r\n                <template #default=\"{ row }\">\r\n                  <div class=\"device-name\">\r\n                    <el-icon :class=\"getDeviceIcon(row.type)\"><Monitor /></el-icon>\r\n                    <span>{{ row.name }}</span>\r\n                  </div>\r\n                </template>\r\n              </el-table-column>\r\n              <el-table-column prop=\"type\" label=\"类型\" width=\"120\">\r\n                <template #default=\"{ row }\">\r\n                  <el-tag :type=\"getDeviceTagType(row.type)\">{{ row.type }}</el-tag>\r\n                </template>\r\n              </el-table-column>\r\n              <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\r\n                <template #default=\"{ row }\">\r\n                  <div class=\"status-indicator\" :class=\"row.status\">\r\n                    <span class=\"status-dot\"></span>\r\n                    {{ getStatusText(row.status) }}\r\n                  </div>\r\n                </template>\r\n              </el-table-column>\r\n              <el-table-column prop=\"location\" label=\"位置\" width=\"120\" />\r\n              <el-table-column label=\"最近数据\" min-width=\"180\">\r\n                <template #default=\"{ row }\">\r\n                  <div class=\"latest-data\">\r\n                    <el-tooltip \r\n                      :content=\"row.lastUpdate\" \r\n                      placement=\"top\"\r\n                    >\r\n                      <span>{{ row.latestData }}</span>\r\n                    </el-tooltip>\r\n                  </div>\r\n                </template>\r\n              </el-table-column>\r\n              <el-table-column label=\"操作\" width=\"200\" fixed=\"right\">\r\n                <template #default=\"{ row }\">\r\n                  <el-button-group>\r\n                    <el-button size=\"small\" @click=\"viewDetail(row)\">\r\n                      <el-icon><View /></el-icon>\r\n                    </el-button>\r\n                    <el-button size=\"small\" type=\"primary\" @click=\"configDevice(row)\">\r\n                      <el-icon><Setting /></el-icon>\r\n                    </el-button>\r\n                    <el-button size=\"small\" type=\"danger\" @click=\"deleteDevice(row)\">\r\n                      <el-icon><Delete /></el-icon>\r\n                    </el-button>\r\n                  </el-button-group>\r\n                </template>\r\n              </el-table-column>\r\n            </el-table>\r\n          </el-scrollbar>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 右侧：实时数据和告警 -->\r\n      <div class=\"content-side\">\r\n        <!-- 实时数据图表 -->\r\n        <div class=\"side-panel\">\r\n          <div class=\"panel-header\">\r\n            <h3>实时数据</h3>\r\n            <el-select v-model=\"selectedDevice\" size=\"small\" placeholder=\"选择设备\">\r\n              <el-option \r\n                v-for=\"device in deviceList\" \r\n                :key=\"device.name\" \r\n                :label=\"device.name\" \r\n                :value=\"device.name\"\r\n              />\r\n            </el-select>\r\n          </div>\r\n          <div class=\"chart-container\">\r\n            <base-e-chart :options=\"chartOptions\" />\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 最近告警 -->\r\n        <div class=\"side-panel\">\r\n          <div class=\"panel-header\">\r\n            <h3>最近告警</h3>\r\n            <el-tag size=\"small\" type=\"danger\">{{ alerts.length }} 个未处理</el-tag>\r\n          </div>\r\n          <div class=\"alert-list\">\r\n            <div v-for=\"alert in alerts\" \r\n                 :key=\"alert.id\" \r\n                 class=\"alert-item\"\r\n                 :class=\"[alert.level, { unread: alert.unread }]\"\r\n                 @click=\"handleAlert(alert)\">\r\n              <div class=\"alert-icon\">\r\n                <el-icon><Warning /></el-icon>\r\n              </div>\r\n              <div class=\"alert-content\">\r\n                <div class=\"alert-title\">{{ alert.title }}</div>\r\n                <div class=\"alert-info\">\r\n                  <span class=\"alert-device\">{{ alert.device }}</span>\r\n                  <span class=\"alert-time\">{{ alert.time }}</span>\r\n                </div>\r\n              </div>\r\n              <div class=\"alert-action\">\r\n                <el-button size=\"small\" type=\"primary\" link>处理</el-button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 动态照片播放 -->\r\n        <div class=\"side-panel\">\r\n          <div class=\"panel-header\">\r\n            <h3>智能检测照片</h3>\r\n          </div>\r\n          <photo-timeline />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 设备详情对话框 -->\r\n    <el-dialog \r\n      v-model=\"showDetail\" \r\n      title=\"设备详情\" \r\n      width=\"60%\"\r\n      destroy-on-close\r\n    >\r\n      <el-tabs v-if=\"currentDevice\">\r\n        <el-tab-pane label=\"基本信息\">\r\n          <div class=\"device-info\">\r\n            <div class=\"info-item\">\r\n              <span class=\"label\">设备名称</span>\r\n              <span class=\"value\">{{ currentDevice.name }}</span>\r\n            </div>\r\n            <div class=\"info-item\">\r\n              <span class=\"label\">设备类型</span>\r\n              <span class=\"value\">{{ currentDevice.type }}</span>\r\n            </div>\r\n            <div class=\"info-item\">\r\n              <span class=\"label\">当前状态</span>\r\n              <span class=\"value\">{{ getStatusText(currentDevice.status) }}</span>\r\n            </div>\r\n            <div class=\"info-item\">\r\n              <span class=\"label\">安装位置</span>\r\n              <span class=\"value\">{{ currentDevice.location }}</span>\r\n            </div>\r\n            <div class=\"info-item\">\r\n              <span class=\"label\">最近数据</span>\r\n              <span class=\"value\">{{ currentDevice.latestData }}</span>\r\n            </div>\r\n            <div class=\"info-item\">\r\n              <span class=\"label\">最后更新</span>\r\n              <span class=\"value\">{{ currentDevice.lastUpdate }}</span>\r\n            </div>\r\n          </div>\r\n        </el-tab-pane>\r\n        <el-tab-pane label=\"历史数据\">\r\n          <div class=\"history-data\">\r\n            <base-e-chart :options=\"historyChartOptions\" />\r\n          </div>\r\n        </el-tab-pane>\r\n        <el-tab-pane label=\"告警记录\">\r\n          <el-table :data=\"deviceAlerts\" style=\"width: 100%\">\r\n            <el-table-column prop=\"time\" label=\"时间\" width=\"180\" />\r\n            <el-table-column prop=\"title\" label=\"告警内容\" />\r\n            <el-table-column prop=\"level\" label=\"级别\" width=\"100\">\r\n              <template #default=\"{ row }\">\r\n                <el-tag :type=\"getAlertTagType(row.level)\">{{ row.level }}</el-tag>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"status\" label=\"状态\" width=\"100\" />\r\n          </el-table>\r\n        </el-tab-pane>\r\n      </el-tabs>\r\n    </el-dialog>\r\n\r\n    <!-- 新增设备对话框 -->\r\n    <el-dialog \r\n      v-model=\"showAddDeviceDialog\" \r\n      title=\"新增设备\" \r\n      width=\"50%\"\r\n      destroy-on-close\r\n    >\r\n      <el-form \r\n        ref=\"deviceForm\"\r\n        :model=\"newDevice\"\r\n        :rules=\"deviceRules\"\r\n        label-width=\"100px\"\r\n      >\r\n        <el-form-item label=\"设备名称\" prop=\"name\">\r\n          <el-input v-model=\"newDevice.name\" placeholder=\"请输入设备名称\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"设备类型\" prop=\"type\">\r\n          <el-select v-model=\"newDevice.type\" placeholder=\"请选择设备类型\">\r\n            <el-option label=\"温湿度传感器\" value=\"温湿度\" />\r\n            <el-option label=\"PH值传感器\" value=\"PH值\" />\r\n            <el-option label=\"视频监控\" value=\"视频监控\" />\r\n            <el-option label=\"数据网关\" value=\"数据网关\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"安装位置\" prop=\"location\">\r\n          <el-input v-model=\"newDevice.location\" placeholder=\"请输入安装位置\" />\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <el-button @click=\"showAddDeviceDialog = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"submitNewDevice\">确定</el-button>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted, onUnmounted, onActivated, onDeactivated, nextTick } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport { debounce } from 'lodash-es'\r\nimport cache from '@/utils/cache'\r\nimport BaseEChart from '@/components/BaseEChart.vue'\r\nimport PhotoTimeline from '@/components/PhotoTimeline.vue'\r\nimport { \r\n  Monitor, Connection, Warning, InfoFilled, Cpu, \r\n  ArrowUp, ArrowDown, Plus, View, Setting, Delete, Search,\r\n  Grid, List, Refresh, Download\r\n} from '@element-plus/icons-vue'\r\nimport { ElMessage, ElMessageBox } from 'element-plus'\r\nimport AnimatedNumber from '@/components/AnimatedNumber.vue'\r\nimport { exportToExcel } from '@/utils/excel'\r\n\r\n// WebSocket连接\r\nconst ws = ref(null)\r\nconst wsReconnectTimer = ref(null)\r\nconst wsReconnectAttempts = ref(0)\r\nconst MAX_RECONNECT_ATTEMPTS = 5\r\n\r\n// 状态管理\r\nconst store = useStore()\r\n\r\n// 加载状态\r\nconst loading = ref(false)\r\n\r\n// 缓存设备数据\r\nconst DEVICE_CACHE_KEY = 'monitoring_devices'\r\nconst DEVICE_CACHE_EXPIRY = 5 * 60 * 1000 // 5分钟\r\n\r\n// 防抖的搜索和筛选\r\nconst debouncedSearch = debounce((query) => {\r\n  searchQuery.value = query\r\n}, 300)\r\n\r\nconst debouncedFilter = debounce((status, type) => {\r\n  filterStatus.value = status\r\n  filterType.value = type\r\n}, 300)\r\n\r\n// 初始化WebSocket连接\r\nconst initWebSocket = () => {\r\n  if (ws.value) return\r\n\r\n  ws.value = new WebSocket(process.env.VUE_APP_WS_URL || 'ws://localhost:8080/api/ws/monitoring')\r\n  \r\n  ws.value.onopen = () => {\r\n    console.log('WebSocket connected')\r\n    wsReconnectAttempts.value = 0\r\n  }\r\n\r\n  ws.value.onmessage = (event) => {\r\n    const data = JSON.parse(event.data)\r\n    handleWebSocketMessage(data)\r\n  }\r\n\r\n  ws.value.onclose = () => {\r\n    console.log('WebSocket disconnected')\r\n    ws.value = null\r\n    handleWebSocketReconnect()\r\n  }\r\n\r\n  ws.value.onerror = (error) => {\r\n    console.error('WebSocket error:', error)\r\n    ws.value?.close()\r\n  }\r\n}\r\n\r\n// 处理WebSocket重连\r\nconst handleWebSocketReconnect = () => {\r\n  if (wsReconnectAttempts.value >= MAX_RECONNECT_ATTEMPTS) {\r\n    ElMessage.error('连接服务器失败，请刷新页面重试')\r\n    return\r\n  }\r\n\r\n  if (wsReconnectTimer.value) {\r\n    clearTimeout(wsReconnectTimer.value)\r\n  }\r\n\r\n  wsReconnectTimer.value = setTimeout(() => {\r\n    wsReconnectAttempts.value++\r\n    initWebSocket()\r\n  }, 3000 * Math.min(wsReconnectAttempts.value + 1, 5))\r\n}\r\n\r\n// 处理WebSocket消息\r\nconst handleWebSocketMessage = (data) => {\r\n  switch (data.type) {\r\n    case 'deviceUpdate':\r\n      updateDeviceData(data.payload)\r\n      break\r\n    case 'alert':\r\n      handleNewAlert(data.payload)\r\n      break\r\n    case 'stats':\r\n      updateDeviceStats(data.payload)\r\n      break\r\n  }\r\n}\r\n\r\n// 更新设备数据\r\nconst updateDeviceData = async (deviceData) => {\r\n  const index = deviceList.value.findIndex(d => d.name === deviceData.name)\r\n  if (index !== -1) {\r\n    deviceList.value[index] = { ...deviceList.value[index], ...deviceData }\r\n    // 更新缓存\r\n    await cache.set(DEVICE_CACHE_KEY, deviceList.value, DEVICE_CACHE_EXPIRY)\r\n  }\r\n}\r\n\r\n// 处理新告警\r\nconst handleNewAlert = (alert) => {\r\n  alerts.value.unshift({\r\n    ...alert,\r\n    unread: true\r\n  })\r\n  \r\n  // 限制告警列表长度\r\n  if (alerts.value.length > 50) {\r\n    alerts.value = alerts.value.slice(0, 50)\r\n  }\r\n\r\n  // 显示告警通知\r\n  ElMessage({\r\n    type: alert.level === 'error' ? 'error' : alert.level === 'warning' ? 'warning' : 'info',\r\n    message: `${alert.device}: ${alert.title}`,\r\n    duration: 5000\r\n  })\r\n}\r\n\r\n// 更新设备统计数据\r\nconst updateDeviceStats = (stats) => {\r\n  deviceStats.value = stats\r\n}\r\n\r\n// 初始化数据\r\nconst initData = async () => {\r\n  loading.value = true\r\n  try {\r\n    // 尝试从缓存获取数据\r\n    const cachedData = await cache.get(DEVICE_CACHE_KEY)\r\n    if (cachedData) {\r\n      deviceList.value = cachedData\r\n      loading.value = false\r\n      return\r\n    }\r\n\r\n    // 如果没有缓存，从服务器获取\r\n    const response = await store.dispatch('device/fetchDevices')\r\n    deviceList.value = response\r\n    \r\n    // 更新缓存\r\n    await cache.set(DEVICE_CACHE_KEY, response, DEVICE_CACHE_EXPIRY)\r\n  } catch (error) {\r\n    ElMessage.error('获取设备数据失败')\r\n    console.error('Failed to fetch devices:', error)\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\n// 生命周期钩子\r\nonMounted(() => {\r\n  initWebSocket()\r\n  initData()\r\n})\r\n\r\nonUnmounted(() => {\r\n  if (ws.value) {\r\n    ws.value.close()\r\n    ws.value = null\r\n  }\r\n  if (wsReconnectTimer.value) {\r\n    clearTimeout(wsReconnectTimer.value)\r\n  }\r\n})\r\n\r\n// keep-alive 支持\r\nonActivated(() => {\r\n  initWebSocket()\r\n  initData()\r\n})\r\n\r\nonDeactivated(() => {\r\n  if (ws.value) {\r\n    ws.value.close()\r\n    ws.value = null\r\n  }\r\n})\r\n\r\n// 视图模式\r\nconst viewMode = ref('grid')\r\n\r\n// 设备统计数据\r\nconst deviceStats = ref({\r\n  online: 12,\r\n  offline: 3,\r\n  error: 1,\r\n  total: 16\r\n})\r\n\r\n// 设备列表数据\r\nconst deviceList = ref([\r\n  { \r\n    name: '传感器A', \r\n    type: '温湿度', \r\n    status: 'online', \r\n    location: '田块1',\r\n    latestData: '温度: 25°C, 湿度: 65%',\r\n    lastUpdate: '2024-03-15 14:30:00'\r\n  },\r\n  { \r\n    name: '摄像头B', \r\n    type: '视频监控', \r\n    status: 'offline', \r\n    location: '田块2',\r\n    latestData: '离线中',\r\n    lastUpdate: '2024-03-15 10:15:00'\r\n  },\r\n  { \r\n    name: '网关C', \r\n    type: '数据网关', \r\n    status: 'online', \r\n    location: '田块3',\r\n    latestData: '数据流量: 2.5MB/s',\r\n    lastUpdate: '2024-03-15 14:35:00'\r\n  },\r\n  { \r\n    name: '传感器D', \r\n    type: 'PH值', \r\n    status: 'error', \r\n    location: '田块4',\r\n    latestData: 'PH值: 异常',\r\n    lastUpdate: '2024-03-15 14:20:00'\r\n  }\r\n])\r\n\r\n// 告警数据\r\nconst alerts = ref([\r\n  {\r\n    id: 1,\r\n    title: 'PH值超出正常范围',\r\n    device: '传感器D',\r\n    time: '10分钟前',\r\n    level: 'error',\r\n    unread: true\r\n  },\r\n  {\r\n    id: 2,\r\n    title: '设备离线超过4小时',\r\n    device: '摄像头B',\r\n    time: '4小时前',\r\n    level: 'warning',\r\n    unread: true\r\n  },\r\n  {\r\n    id: 3,\r\n    title: '数据传输异常',\r\n    device: '网关C',\r\n    time: '2小时前',\r\n    level: 'info',\r\n    unread: false\r\n  }\r\n])\r\n\r\n// 搜索和筛选\r\nconst searchQuery = ref('')\r\nconst filterStatus = ref('')\r\nconst filterType = ref('')\r\n\r\n// 优化的计算属性\r\nconst filteredDeviceList = computed(() => {\r\n  const query = searchQuery.value.toLowerCase()\r\n  const status = filterStatus.value\r\n  const type = filterType.value\r\n  \r\n  return deviceList.value.filter(device => {\r\n    if (status && device.status !== status) return false\r\n    if (type && device.type !== type) return false\r\n    if (!query) return true\r\n    \r\n    return device.name.toLowerCase().includes(query) ||\r\n           device.type.toLowerCase().includes(query) ||\r\n           device.location.toLowerCase().includes(query)\r\n  })\r\n})\r\n\r\n// 设备详情相关\r\nconst showDetail = ref(false)\r\nconst currentDevice = ref(null)\r\nconst deviceAlerts = ref([\r\n  { time: '2024-03-15 14:20:00', title: 'PH值超出正常范围', level: 'error', status: '未处理' },\r\n  { time: '2024-03-15 10:15:00', title: '设备离线', level: 'warning', status: '已处理' },\r\n  { time: '2024-03-14 16:30:00', title: '数据异常', level: 'info', status: '已处理' }\r\n])\r\n\r\n// 新增设备相关\r\nconst showAddDeviceDialog = ref(false)\r\nconst deviceForm = ref(null)\r\nconst newDevice = ref({\r\n  name: '',\r\n  type: '',\r\n  location: ''\r\n})\r\n\r\nconst deviceRules = {\r\n  name: [\r\n    { required: true, message: '请输入设备名称', trigger: 'blur' },\r\n    { min: 2, max: 20, message: '长度在 2 到 20 个字符', trigger: 'blur' }\r\n  ],\r\n  type: [\r\n    { required: true, message: '请选择设备类型', trigger: 'change' }\r\n  ],\r\n  location: [\r\n    { required: true, message: '请输入安装位置', trigger: 'blur' }\r\n  ]\r\n}\r\n\r\n// 图表相关\r\nconst selectedDevice = ref('')\r\n/* 实时数据图表配置 */\r\nconst chartOptions = computed(() => {\r\n  // 使用 requestAnimationFrame 优化图表更新\r\n  if (chartUpdateTimer) {\r\n    cancelAnimationFrame(chartUpdateTimer)\r\n  }\r\n  \r\n  chartUpdateTimer = requestAnimationFrame(() => {\r\n    // ... existing chart options ...\r\n  })\r\n})\r\n\r\nconst historyChartOptions = computed(() => ({\r\n  backgroundColor: 'transparent',\r\n  title: {\r\n    text: '历史数据趋势',\r\n    textStyle: { color: '#fff' }\r\n  },\r\n  tooltip: {\r\n    trigger: 'axis',\r\n    axisPointer: {\r\n      type: 'shadow'\r\n    }\r\n  },\r\n  legend: {\r\n    data: ['温度', '湿度', 'PH值'],\r\n    textStyle: { color: '#fff' },\r\n    top: 30\r\n  },\r\n  grid: {\r\n    top: 80,\r\n    right: 20,\r\n    bottom: 30,\r\n    left: 50,\r\n    containLabel: true\r\n  },\r\n  xAxis: {\r\n    type: 'category',\r\n    data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日'],\r\n    axisLabel: { color: '#fff' },\r\n    axisLine: {\r\n      lineStyle: {\r\n        color: '#8c8c8c'\r\n      }\r\n    }\r\n  },\r\n  yAxis: {\r\n    type: 'value',\r\n    axisLabel: { color: '#fff' },\r\n    splitLine: {\r\n      lineStyle: {\r\n        color: 'rgba(255, 255, 255, 0.1)'\r\n      }\r\n    },\r\n    axisLine: {\r\n      lineStyle: {\r\n        color: '#8c8c8c'\r\n      }\r\n    }\r\n  },\r\n  series: [\r\n    {\r\n      name: '温度',\r\n      type: 'bar',\r\n      data: [23, 24, 25, 23, 24, 26, 25],\r\n      itemStyle: {\r\n        color: {\r\n          type: 'linear',\r\n          x: 0,\r\n          y: 0,\r\n          x2: 0,\r\n          y2: 1,\r\n          colorStops: [{\r\n            offset: 0,\r\n            color: '#1890ff'\r\n          }, {\r\n            offset: 1,\r\n            color: 'rgba(24, 144, 255, 0.3)'\r\n          }]\r\n        }\r\n      }\r\n    },\r\n    {\r\n      name: '湿度',\r\n      type: 'bar',\r\n      data: [65, 63, 68, 64, 62, 65, 66],\r\n      itemStyle: {\r\n        color: {\r\n          type: 'linear',\r\n          x: 0,\r\n          y: 0,\r\n          x2: 0,\r\n          y2: 1,\r\n          colorStops: [{\r\n            offset: 0,\r\n            color: '#52c41a'\r\n          }, {\r\n            offset: 1,\r\n            color: 'rgba(82, 196, 26, 0.3)'\r\n          }]\r\n        }\r\n      }\r\n    },\r\n    {\r\n      name: 'PH值',\r\n      type: 'bar',\r\n      data: [7.1, 7.0, 7.2, 7.1, 7.0, 7.1, 7.2],\r\n      itemStyle: {\r\n        color: {\r\n          type: 'linear',\r\n          x: 0,\r\n          y: 0,\r\n          x2: 0,\r\n          y2: 1,\r\n          colorStops: [{\r\n            offset: 0,\r\n            color: '#faad14'\r\n          }, {\r\n            offset: 1,\r\n            color: 'rgba(250, 173, 20, 0.3)'\r\n          }]\r\n        }\r\n      }\r\n    }\r\n  ]\r\n}))\r\n\r\n// 生成时间序列数据\r\nfunction generateTimeData(baseValue, variance) {\r\n  const now = new Date()\r\n  const data = []\r\n  for (let i = 0; i < 60; i++) {\r\n    const time = new Date(now - (59 - i) * 60000)\r\n    data.push([\r\n      time.toISOString(),\r\n      +(baseValue + (Math.random() * 2 - 1) * variance).toFixed(1)\r\n    ])\r\n  }\r\n  return data\r\n}\r\n\r\n// 优化的设备操作\r\nconst viewDetail = async (device) => {\r\n  currentDevice.value = device;\r\n  showDetail.value = true;\r\n\r\n  try {\r\n    // 预加载设备历史数据\r\n    const history = await store.dispatch('device/fetchDeviceHistory', device.name);\r\n    await nextTick();\r\n    // 可以在这里更新依赖于历史数据的图表或组件\r\n  } catch (error) {\r\n    ElMessage.error('获取设备历史数据失败');\r\n  }\r\n};\r\n\r\nconst configDevice = async (device) => {\r\n  try {\r\n    loading.value = true;\r\n    await store.dispatch('device/configureDevice', device);\r\n    ElMessage.success('设备配置已更新');\r\n  } catch (error) {\r\n    ElMessage.error('设备配置失败');\r\n  } finally {\r\n    loading.value = false;\r\n  }\r\n};\r\n\r\nconst deleteDevice = async (device) => {\r\n  try {\r\n    await ElMessageBox.confirm(\r\n      `您正在尝试删除设备：<strong>${device.name}</strong><br/>此操作将永久删除该设备及其所有关联数据，且无法恢复。`,\r\n      '删除确认',\r\n      {\r\n        type: 'warning',\r\n        confirmButtonText: '确定删除',\r\n        cancelButtonText: '取消',\r\n        dangerouslyUseHTMLString: true,\r\n      }\r\n    );\r\n    \r\n    loading.value = true;\r\n    await store.dispatch('device/deleteDevice', device.name);\r\n    \r\n    // 更新本地数据和缓存\r\n    deviceList.value = deviceList.value.filter(d => d.name !== device.name);\r\n    await cache.set(DEVICE_CACHE_KEY, deviceList.value, DEVICE_CACHE_EXPIRY);\r\n    \r\n    ElMessage.success('设备已删除');\r\n  } catch (error) {\r\n    if (error !== 'cancel') {\r\n      ElMessage.error('删除设备失败');\r\n      console.error('Delete device error:', error);\r\n    }\r\n  } finally {\r\n    loading.value = false;\r\n  }\r\n};\r\n\r\n// 优化的告警处理\r\nconst handleAlert = async (alert) => {\r\n  const device = deviceList.value.find(d => d.name === alert.device);\r\n  if (device) {\r\n    viewDetail(device);\r\n  }\r\n\r\n  if (alert.unread) {\r\n    // 使用 nextTick 确保在 DOM 更新后再标记为已读\r\n    await nextTick();\r\n    \r\n    const index = alerts.value.findIndex(a => a.id === alert.id);\r\n    if (index !== -1 && alerts.value[index].unread) {\r\n      alerts.value[index].unread = false;\r\n      try {\r\n        await store.dispatch('alert/markAsRead', alert.id);\r\n      } catch (error) {\r\n        // 如果标记已读失败，将状态改回未读\r\n        alerts.value[index].unread = true;\r\n        console.error('Failed to mark alert as read:', error);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nfunction showAddDevice() {\r\n  showAddDeviceDialog.value = true\r\n}\r\n\r\nfunction submitNewDevice() {\r\n  deviceForm.value?.validate((valid) => {\r\n    if (valid) {\r\n      const device = {\r\n        ...newDevice.value,\r\n        status: 'online',\r\n        latestData: '暂无数据',\r\n        lastUpdate: new Date().toLocaleString()\r\n      }\r\n      deviceList.value.push(device)\r\n      showAddDeviceDialog.value = false\r\n      ElMessage.success('添加成功')\r\n      newDevice.value = {\r\n        name: '',\r\n        type: '',\r\n        location: ''\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\n// Helper functions\r\nfunction getDeviceIcon(type) {\r\n  const icons = {\r\n    '温湿度': 'Temperature',\r\n    'PH值': 'Experiment',\r\n    '视频监控': 'VideoCamera',\r\n    '数据网关': 'Connection'\r\n  };\r\n  return icons[type] || 'Monitor';\r\n}\r\n\r\nfunction getDeviceTagType(type) {\r\n  const types = {\r\n    '温湿度': '',\r\n    'PH值': 'warning',\r\n    '视频监控': 'success',\r\n    '数据网关': 'info'\r\n  };\r\n  return types[type] || 'info';\r\n}\r\n\r\nfunction getStatusText(status) {\r\n  const statuses = {\r\n    online: '在线',\r\n    offline: '离线',\r\n    error: '异常'\r\n  };\r\n  return statuses[status] || status;\r\n}\r\n\r\nfunction getAlertTagType(level) {\r\n  const types = {\r\n    error: 'danger',\r\n    warning: 'warning',\r\n    info: 'info'\r\n  };\r\n  return types[level] || 'info';\r\n}\r\n\r\n\r\n// 状态选项\r\nconst statusOptions = [\r\n  { label: '全部', value: '' },\r\n  { label: '在线', value: 'online' },\r\n  { label: '离线', value: 'offline' },\r\n  { label: '异常', value: 'error' }\r\n]\r\n\r\n// 类型选项\r\nconst typeOptions = [\r\n  { label: '全部', value: '' },\r\n  { label: '温湿度传感器', value: '温湿度' },\r\n  { label: 'PH值传感器', value: 'PH值' },\r\n  { label: '视频监控', value: '视频监控' },\r\n  { label: '数据网关', value: '数据网关' }\r\n]\r\n\r\n// 高级搜索\r\nconst showAdvancedSearchDialog = ref(false)\r\nconst advancedSearch = ref({\r\n  name: '',\r\n  type: '',\r\n  status: '',\r\n  location: '',\r\n  updateTime: []\r\n})\r\n\r\n// Excel导出\r\nconst exporting = ref(false)\r\n\r\n// 刷新数据\r\nconst refreshData = async () => {\r\n  await initData()\r\n}\r\n\r\n// 导出数据\r\nconst exportData = async () => {\r\n  try {\r\n    exporting.value = true\r\n    await exportToExcel(deviceList.value, {\r\n      filename: `设备列表_${new Date().toLocaleDateString()}`,\r\n      sheets: [{\r\n        name: '设备列表',\r\n        columns: [\r\n          { header: '设备名称', key: 'name' },\r\n          { header: '设备类型', key: 'type' },\r\n          { header: '状态', key: 'status' },\r\n          { header: '位置', key: 'location' },\r\n          { header: '最近数据', key: 'latestData' },\r\n          { header: '最后更新', key: 'lastUpdate' }\r\n        ]\r\n      }]\r\n    })\r\n    ElMessage.success('导出成功')\r\n  } catch (error) {\r\n    ElMessage.error('导出失败')\r\n    console.error('Export failed:', error)\r\n  } finally {\r\n    exporting.value = false\r\n  }\r\n}\r\n\r\n// 显示高级搜索\r\nconst showAdvancedSearch = () => {\r\n  showAdvancedSearchDialog.value = true\r\n}\r\n\r\n// 重置高级搜索\r\nconst resetAdvancedSearch = () => {\r\n  advancedSearch.value = {\r\n    name: '',\r\n    type: '',\r\n    status: '',\r\n    location: '',\r\n    updateTime: []\r\n  }\r\n}\r\n\r\n// 应用高级搜索\r\nconst applyAdvancedSearch = () => {\r\n  searchQuery.value = advancedSearch.value.name\r\n  filterType.value = advancedSearch.value.type\r\n  filterStatus.value = advancedSearch.value.status\r\n  showAdvancedSearchDialog.value = false\r\n}\r\n\r\n// 统计卡片相关方法\r\nconst getStatTooltip = (key) => {\r\n  const tooltips = {\r\n    online: '当前在线的设备数量',\r\n    offline: '当前离线的设备数量',\r\n    error: '存在异常的设备数量',\r\n    total: '系统中的设备总数'\r\n  }\r\n  return tooltips[key]\r\n}\r\n\r\nconst getStatLabel = (key) => {\r\n  const labels = {\r\n    online: '在线设备',\r\n    offline: '离线设备',\r\n    error: '异常设备',\r\n    total: '设备总数'\r\n  }\r\n  return labels[key]\r\n}\r\n\r\nconst getStatIcon = (key) => {\r\n  const icons = {\r\n    online: Monitor,\r\n    offline: Connection,\r\n    error: Warning,\r\n    total: Cpu\r\n  }\r\n  return icons[key]\r\n}\r\n\r\nconst getTrendClass = (key) => {\r\n  const trends = {\r\n    online: 'up',\r\n    offline: 'down',\r\n    error: '',\r\n    total: 'up'\r\n  }\r\n  return trends[key]\r\n}\r\n\r\nconst getTrendIcon = (key) => {\r\n  const trends = {\r\n    online: ArrowUp,\r\n    offline: ArrowDown,\r\n    error: InfoFilled,\r\n    total: ArrowUp\r\n  }\r\n  return trends[key]\r\n}\r\n\r\nconst getTrendText = (key) => {\r\n  const texts = {\r\n    online: '2台',\r\n    offline: '1台',\r\n    error: '无变化',\r\n    total: '1台'\r\n  }\r\n  return texts[key]\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.monitoring-view {\r\n  height: 100vh;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n  background: #141414;\r\n  color: #fff;\r\n}\r\n\r\n.stats-section {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n  gap: 20px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.stat-card {\r\n  background: rgba(255, 255, 255, 0.04);\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 16px;\r\n  transition: all 0.3s ease;\r\n\r\n  &:hover {\r\n    transform: translateY(-2px);\r\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n  }\r\n\r\n  .stat-icon {\r\n    width: 48px;\r\n    height: 48px;\r\n    border-radius: 8px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 24px;\r\n  }\r\n\r\n  .stat-content {\r\n    flex: 1;\r\n\r\n    .stat-value {\r\n      font-size: 24px;\r\n      font-weight: 600;\r\n      margin-bottom: 4px;\r\n    }\r\n\r\n    .stat-label {\r\n      color: rgba(255, 255, 255, 0.65);\r\n      font-size: 14px;\r\n    }\r\n  }\r\n\r\n  .stat-trend {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 4px;\r\n    font-size: 14px;\r\n\r\n    &.up {\r\n      color: #52c41a;\r\n    }\r\n\r\n    &.down {\r\n      color: #ff4d4f;\r\n    }\r\n  }\r\n\r\n  &.online .stat-icon {\r\n    background: rgba(82, 196, 26, 0.15);\r\n    color: #52c41a;\r\n  }\r\n\r\n  &.offline .stat-icon {\r\n    background: rgba(255, 77, 79, 0.15);\r\n    color: #ff4d4f;\r\n  }\r\n\r\n  &.error .stat-icon {\r\n    background: rgba(250, 173, 20, 0.15);\r\n    color: #faad14;\r\n  }\r\n\r\n  &.total .stat-icon {\r\n    background: rgba(24, 144, 255, 0.15);\r\n    color: #1890ff;\r\n  }\r\n}\r\n\r\n.main-content {\r\n  display: flex;\r\n  gap: 20px;\r\n  flex: 1;\r\n  min-height: 0;\r\n}\r\n\r\n.content-main {\r\n  flex: 1;\r\n  min-width: 0;\r\n}\r\n\r\n.content-side {\r\n  width: 360px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n}\r\n\r\n.panel {\r\n  background: rgba(255, 255, 255, 0.04);\r\n  border-radius: 8px;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.panel-header {\r\n  padding: 16px 20px;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.08);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  h3 {\r\n    margin: 0;\r\n    font-size: 16px;\r\n    font-weight: 500;\r\n  }\r\n}\r\n\r\n.device-grid {\r\n  padding: 20px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n  gap: 20px;\r\n}\r\n\r\n.device-card {\r\n  background: rgba(255, 255, 255, 0.04);\r\n  border-radius: 8px;\r\n  padding: 16px;\r\n  transition: all 0.3s ease;\r\n\r\n  &:hover {\r\n    transform: translateY(-2px);\r\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n  }\r\n\r\n  &.online {\r\n    border-left: 4px solid #52c41a;\r\n  }\r\n\r\n  &.offline {\r\n    border-left: 4px solid #ff4d4f;\r\n  }\r\n\r\n  &.error {\r\n    border-left: 4px solid #faad14;\r\n  }\r\n}\r\n\r\n.device-card-header {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-bottom: 12px;\r\n}\r\n\r\n.device-icon {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 8px;\r\n  background: rgba(255, 255, 255, 0.04);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 20px;\r\n}\r\n\r\n.device-status {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 6px;\r\n  font-size: 14px;\r\n  color: rgba(255, 255, 255, 0.65);\r\n\r\n  .status-dot {\r\n    width: 8px;\r\n    height: 8px;\r\n    border-radius: 50%;\r\n  }\r\n\r\n  &.online .status-dot {\r\n    background: #52c41a;\r\n  }\r\n\r\n  &.offline .status-dot {\r\n    background: #ff4d4f;\r\n  }\r\n\r\n  &.error .status-dot {\r\n    background: #faad14;\r\n  }\r\n}\r\n\r\n.device-card-content {\r\n  margin-bottom: 12px;\r\n\r\n  .device-name {\r\n    font-size: 16px;\r\n    font-weight: 500;\r\n    margin-bottom: 8px;\r\n  }\r\n\r\n  .device-type {\r\n    margin-bottom: 8px;\r\n  }\r\n\r\n  .device-location {\r\n    color: rgba(255, 255, 255, 0.65);\r\n    font-size: 14px;\r\n    margin-bottom: 8px;\r\n  }\r\n\r\n  .device-data {\r\n    font-size: 14px;\r\n    color: rgba(255, 255, 255, 0.85);\r\n  }\r\n}\r\n\r\n.device-card-footer {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.alert-list {\r\n  padding: 16px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 12px;\r\n}\r\n\r\n.alert-item {\r\n  background: rgba(255, 255, 255, 0.04);\r\n  border-radius: 6px;\r\n  padding: 12px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n\r\n  &:hover {\r\n    background: rgba(255, 255, 255, 0.08);\r\n  }\r\n\r\n  &.unread {\r\n    border-left: 3px solid #1890ff;\r\n  }\r\n\r\n  &.error {\r\n    border-left: 3px solid #ff4d4f;\r\n  }\r\n\r\n  &.warning {\r\n    border-left: 3px solid #faad14;\r\n  }\r\n\r\n  &.info {\r\n    border-left: 3px solid #1890ff;\r\n  }\r\n}\r\n\r\n.alert-icon {\r\n  width: 32px;\r\n  height: 32px;\r\n  border-radius: 6px;\r\n  background: rgba(255, 255, 255, 0.04);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 18px;\r\n}\r\n\r\n.alert-content {\r\n  flex: 1;\r\n  min-width: 0;\r\n\r\n  .alert-title {\r\n    font-size: 14px;\r\n    margin-bottom: 4px;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n  }\r\n\r\n  .alert-info {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 8px;\r\n    font-size: 12px;\r\n    color: rgba(255, 255, 255, 0.45);\r\n\r\n    .alert-device {\r\n      color: rgba(255, 255, 255, 0.65);\r\n    }\r\n  }\r\n}\r\n\r\n.chart-container {\r\n  flex: 1;\r\n  min-height: 300px;\r\n  padding: 0 20px 20px;\r\n}\r\n\r\n:deep(.el-table) {\r\n  background: transparent;\r\n  \r\n  th {\r\n    background: #1a1a1a !important;\r\n    border-bottom: 1px solid rgba(255, 255, 255, 0.08);\r\n  }\r\n\r\n  td {\r\n    background: transparent;\r\n    border-bottom: 1px solid rgba(255, 255, 255, 0.04);\r\n  }\r\n\r\n  tr {\r\n    background: transparent;\r\n\r\n    &:hover > td {\r\n      background: rgba(255, 255, 255, 0.04);\r\n    }\r\n  }\r\n}\r\n\r\n.header-left {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 16px;\r\n}\r\n\r\n.header-right {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n\r\n  .el-input {\r\n    width: 200px;\r\n  }\r\n\r\n  .el-select {\r\n    width: 120px;\r\n  }\r\n}\r\n\r\n:deep(.el-button) {\r\n  &.active {\r\n    background: #1890ff;\r\n    border-color: #1890ff;\r\n    color: #fff;\r\n  }\r\n}\r\n\r\n.toolbar {\r\n  padding: 16px 20px;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.08);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  gap: 20px;\r\n  background: rgba(255, 255, 255, 0.02);\r\n}\r\n\r\n.toolbar-left {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 16px;\r\n}\r\n\r\n.toolbar-right {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.view-options {\r\n  margin-left: 12px;\r\n}\r\n\r\n.select-option {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n\r\n  .status-dot {\r\n    width: 8px;\r\n    height: 8px;\r\n    border-radius: 50%;\r\n\r\n    &.online {\r\n      background: #52c41a;\r\n    }\r\n\r\n    &.offline {\r\n      background: #ff4d4f;\r\n    }\r\n\r\n    &.error {\r\n      background: #faad14;\r\n    }\r\n  }\r\n\r\n  .el-icon {\r\n    font-size: 16px;\r\n  }\r\n}\r\n\r\n:deep(.el-dialog) {\r\n  background: #1a1a1a;\r\n  border: 1px solid rgba(255, 255, 255, 0.1);\r\n  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2);\r\n\r\n  .el-dialog__header {\r\n    border-bottom: 1px solid rgba(255, 255, 255, 0.08);\r\n    margin: 0;\r\n    padding: 20px;\r\n\r\n    .el-dialog__title {\r\n      color: #fff;\r\n      font-size: 16px;\r\n      font-weight: 500;\r\n    }\r\n  }\r\n\r\n  .el-dialog__body {\r\n    padding: 20px;\r\n  }\r\n\r\n  .el-dialog__footer {\r\n    border-top: 1px solid rgba(255, 255, 255, 0.08);\r\n    padding: 20px;\r\n  }\r\n}\r\n\r\n:deep(.el-form) {\r\n  .el-form-item__label {\r\n    color: rgba(255, 255, 255, 0.85);\r\n  }\r\n}\r\n\r\n:deep(.el-input),\r\n:deep(.el-select) {\r\n  .el-input__wrapper {\r\n    background: rgba(0, 0, 0, 0.2);\r\n    border: 1px solid rgba(255, 255, 255, 0.1);\r\n    box-shadow: none;\r\n\r\n    &:hover {\r\n      border-color: #1890ff;\r\n    }\r\n\r\n    &.is-focus {\r\n      border-color: #1890ff;\r\n      box-shadow: 0 0 0 1px #1890ff;\r\n    }\r\n  }\r\n\r\n  .el-input__inner {\r\n    color: #fff;\r\n\r\n    &::placeholder {\r\n      color: rgba(255, 255, 255, 0.45);\r\n    }\r\n  }\r\n}\r\n\r\n:deep(.el-date-editor) {\r\n  background: rgba(0, 0, 0, 0.2);\r\n  border: 1px solid rgba(255, 255, 255, 0.1);\r\n  \r\n  .el-range-input {\r\n    color: #fff;\r\n    background: transparent;\r\n  }\r\n  \r\n  .el-range-separator {\r\n    color: rgba(255, 255, 255, 0.45);\r\n  }\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}