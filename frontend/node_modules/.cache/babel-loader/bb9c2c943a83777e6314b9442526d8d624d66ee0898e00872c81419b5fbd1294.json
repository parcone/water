{"ast":null,"code":"// 使用require.context一次性加载所有图片\nfunction loadAllImages() {\n  const allImages = {};\n  try {\n    // 精确匹配您的路径\n    const requireImages = require.context('../assets/water/photos', false, /\\.(png|jpg|jpeg|gif)$/i);\n    console.log('发现的图片文件:', requireImages.keys());\n    requireImages.keys().forEach(key => {\n      // key格式: \"./2025_01_SSM_20250101.png\"\n      const filename = key.replace('./', '');\n      allImages[filename] = requireImages(key);\n    });\n    console.log('成功加载的图片:', Object.keys(allImages));\n    return allImages;\n  } catch (error) {\n    console.error('加载图片失败:', error);\n    return {};\n  }\n}\n\n// 解析文件名中的日期信息\nfunction parseImageFilename(filename) {\n  // 匹配格式: 2025_01_SSM_20250101.png\n  const match = filename.match(/(\\d{4})_(\\d{2})_\\w+_(\\d{8})/);\n  if (match) {\n    const [, year, month, dateStr] = match;\n    const fullYear = dateStr.substring(0, 4);\n    const fullMonth = dateStr.substring(4, 6);\n    const day = dateStr.substring(6, 8);\n    return {\n      filename,\n      year: parseInt(fullYear),\n      month: parseInt(fullMonth),\n      day: parseInt(day),\n      displayName: `${fullYear}年${fullMonth}月${day}日`,\n      sortKey: parseInt(dateStr)\n    };\n  }\n\n  // 备用解析方案\n  const basicMatch = filename.match(/(\\d{4})_(\\d{2})/);\n  if (basicMatch) {\n    const [, year, month] = basicMatch;\n    return {\n      filename,\n      year: parseInt(year),\n      month: parseInt(month),\n      day: 1,\n      displayName: `${year}年${month}月`,\n      sortKey: parseInt(year) * 10000 + parseInt(month) * 100\n    };\n  }\n\n  // 如果无法解析，使用文件名\n  return {\n    filename,\n    year: 2025,\n    month: 1,\n    day: 1,\n    displayName: filename.replace(/\\.(png|jpg|jpeg|gif)$/i, ''),\n    sortKey: 0\n  };\n}\nexport default {\n  name: 'PhotoTimeline',\n  data() {\n    return {\n      photos: [],\n      currentIndex: 0,\n      isPlaying: false,\n      playSpeed: 2000,\n      playInterval: null,\n      isLoading: false,\n      allImages: {}\n    };\n  },\n  computed: {\n    currentPhoto() {\n      return this.photos[this.currentIndex] || null;\n    }\n  },\n  async mounted() {\n    await this.initializeComponent();\n  },\n  beforeUnmount() {\n    this.stopPlay();\n  },\n  methods: {\n    async initializeComponent() {\n      this.isLoading = true;\n      try {\n        // 加载所有图片\n        this.allImages = loadAllImages();\n\n        // 生成照片数据\n        await this.generatePhotoData();\n        console.log(`初始化完成，共加载 ${this.photos.length} 张图片`);\n      } catch (error) {\n        console.error('初始化失败:', error);\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    async generatePhotoData() {\n      const imageFilenames = Object.keys(this.allImages);\n      if (imageFilenames.length === 0) {\n        console.warn('没有找到图片文件');\n        return;\n      }\n\n      // 解析并排序图片\n      this.photos = imageFilenames.map(filename => parseImageFilename(filename)).sort((a, b) => a.sortKey - b.sortKey);\n      console.log('图片排序完成:', this.photos.map(p => p.displayName));\n    },\n    getImageUrl(filename) {\n      if (!filename || !this.allImages[filename]) {\n        console.warn('图片不存在:', filename);\n        return '';\n      }\n      return this.allImages[filename];\n    },\n    onSliderChange(event) {\n      const newIndex = parseInt(event.target.value);\n      if (newIndex >= 0 && newIndex < this.photos.length) {\n        this.currentIndex = newIndex;\n        this.stopPlay();\n      }\n    },\n    playPause() {\n      if (this.isPlaying) {\n        this.stopPlay();\n      } else {\n        this.startPlay();\n      }\n    },\n    startPlay() {\n      if (this.photos.length === 0) return;\n      this.isPlaying = true;\n      this.playInterval = setInterval(() => {\n        this.currentIndex = (this.currentIndex + 1) % this.photos.length;\n      }, this.playSpeed);\n    },\n    stopPlay() {\n      this.isPlaying = false;\n      if (this.playInterval) {\n        clearInterval(this.playInterval);\n        this.playInterval = null;\n      }\n    },\n    updatePlaySpeed() {\n      if (this.isPlaying) {\n        this.stopPlay();\n        this.startPlay();\n      }\n    },\n    reset() {\n      this.stopPlay();\n      this.currentIndex = 0;\n    },\n    onImageLoad() {\n      // 图片加载成功\n    },\n    onImageError(event) {\n      console.error('图片加载失败:', this.currentPhoto?.filename);\n      console.error('错误详情:', event);\n    }\n  }\n};","map":{"version":3,"names":["loadAllImages","allImages","requireImages","require","context","console","log","keys","forEach","key","filename","replace","Object","error","parseImageFilename","match","year","month","dateStr","fullYear","substring","fullMonth","day","parseInt","displayName","sortKey","basicMatch","name","data","photos","currentIndex","isPlaying","playSpeed","playInterval","isLoading","computed","currentPhoto","mounted","initializeComponent","beforeUnmount","stopPlay","methods","generatePhotoData","length","imageFilenames","warn","map","sort","a","b","p","getImageUrl","onSliderChange","event","newIndex","target","value","playPause","startPlay","setInterval","clearInterval","updatePlaySpeed","reset","onImageLoad","onImageError"],"sources":["D:\\restore\\water-melt\\frontend\\src\\assets\\water\\1.vue"],"sourcesContent":["<template>\n  <div class=\"photo-timeline\">\n    <div class=\"timeline-header\">\n      <h2>图片时间轴</h2>\n      <div class=\"controls\">\n        <button @click=\"playPause\" class=\"control-btn\">\n          <i class=\"el-icon\" :class=\"isPlaying ? 'el-icon-video-pause' : 'el-icon-video-play'\"></i>\n          {{ isPlaying ? '暂停' : '播放' }}\n        </button>\n        <button @click=\"reset\" class=\"control-btn\">\n          <i class=\"el-icon-refresh\"></i>\n          重置\n        </button>\n        <div class=\"speed-control\">\n          <label>速度:</label>\n          <select v-model=\"playSpeed\" @change=\"updatePlaySpeed\">\n            <option value=\"500\">0.5秒</option>\n            <option value=\"1000\">1秒</option>\n            <option value=\"2000\">2秒</option>\n            <option value=\"3000\">3秒</option>\n          </select>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"image-container\">\n      <div v-if=\"currentPhoto\" class=\"image-wrapper\">\n        <img\n          :src=\"getImageUrl(currentPhoto.filename)\"\n          :alt=\"currentPhoto.displayName\"\n          class=\"timeline-image\"\n          @load=\"onImageLoad\"\n          @error=\"onImageError\"\n        />\n        <div class=\"image-info\">\n          <div class=\"date-info\">{{ currentPhoto.displayName }}</div>\n          <div class=\"progress-info\">{{ currentIndex + 1 }} / {{ photos.length }}</div>\n        </div>\n      </div>\n      <div v-else class=\"no-image\">\n        {{ isLoading ? '加载中...' : '暂无图片数据' }}\n      </div>\n    </div>\n\n    <div class=\"timeline-slider\">\n      <div class=\"slider-container\">\n        <input\n          type=\"range\"\n          :min=\"0\"\n          :max=\"Math.max(0, photos.length - 1)\"\n          :value=\"currentIndex\"\n          @input=\"onSliderChange\"\n          class=\"timeline-range\"\n          :disabled=\"photos.length === 0\"\n        />\n        <div class=\"slider-labels\">\n          <span v-if=\"photos.length > 0\">{{ photos[0]?.displayName }}</span>\n          <span v-if=\"photos.length > 1\">{{ photos[photos.length - 1]?.displayName }}</span>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"timeline-info\">\n      <div class=\"info-item\">\n        <span class=\"label\">当前时间:</span>\n        <span class=\"value\">{{ currentPhoto?.displayName || '无' }}</span>\n      </div>\n      <div class=\"info-item\">\n        <span class=\"label\">总图片数:</span>\n        <span class=\"value\">{{ photos.length }}</span>\n      </div>\n      <div class=\"info-item\">\n        <span class=\"label\">播放状态:</span>\n        <span class=\"value\">{{ isPlaying ? '播放中' : '已暂停' }}</span>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n// 使用require.context一次性加载所有图片\nfunction loadAllImages() {\n  const allImages = {}\n\n  try {\n    // 精确匹配您的路径\n    const requireImages = require.context('../assets/water/photos', false, /\\.(png|jpg|jpeg|gif)$/i)\n\n    console.log('发现的图片文件:', requireImages.keys())\n\n    requireImages.keys().forEach(key => {\n      // key格式: \"./2025_01_SSM_20250101.png\"\n      const filename = key.replace('./', '')\n      allImages[filename] = requireImages(key)\n    })\n\n    console.log('成功加载的图片:', Object.keys(allImages))\n    return allImages\n  } catch (error) {\n    console.error('加载图片失败:', error)\n    return {}\n  }\n}\n\n// 解析文件名中的日期信息\nfunction parseImageFilename(filename) {\n  // 匹配格式: 2025_01_SSM_20250101.png\n  const match = filename.match(/(\\d{4})_(\\d{2})_\\w+_(\\d{8})/)\n\n  if (match) {\n    const [, year, month, dateStr] = match\n    const fullYear = dateStr.substring(0, 4)\n    const fullMonth = dateStr.substring(4, 6)\n    const day = dateStr.substring(6, 8)\n\n    return {\n      filename,\n      year: parseInt(fullYear),\n      month: parseInt(fullMonth),\n      day: parseInt(day),\n      displayName: `${fullYear}年${fullMonth}月${day}日`,\n      sortKey: parseInt(dateStr)\n    }\n  }\n\n  // 备用解析方案\n  const basicMatch = filename.match(/(\\d{4})_(\\d{2})/)\n  if (basicMatch) {\n    const [, year, month] = basicMatch\n    return {\n      filename,\n      year: parseInt(year),\n      month: parseInt(month),\n      day: 1,\n      displayName: `${year}年${month}月`,\n      sortKey: parseInt(year) * 10000 + parseInt(month) * 100\n    }\n  }\n\n  // 如果无法解析，使用文件名\n  return {\n    filename,\n    year: 2025,\n    month: 1,\n    day: 1,\n    displayName: filename.replace(/\\.(png|jpg|jpeg|gif)$/i, ''),\n    sortKey: 0\n  }\n}\n\nexport default {\n  name: 'PhotoTimeline',\n  data() {\n    return {\n      photos: [],\n      currentIndex: 0,\n      isPlaying: false,\n      playSpeed: 2000,\n      playInterval: null,\n      isLoading: false,\n      allImages: {}\n    }\n  },\n  computed: {\n    currentPhoto() {\n      return this.photos[this.currentIndex] || null\n    }\n  },\n  async mounted() {\n    await this.initializeComponent()\n  },\n  beforeUnmount() {\n    this.stopPlay()\n  },\n  methods: {\n    async initializeComponent() {\n      this.isLoading = true\n\n      try {\n        // 加载所有图片\n        this.allImages = loadAllImages()\n\n        // 生成照片数据\n        await this.generatePhotoData()\n\n        console.log(`初始化完成，共加载 ${this.photos.length} 张图片`)\n      } catch (error) {\n        console.error('初始化失败:', error)\n      } finally {\n        this.isLoading = false\n      }\n    },\n\n    async generatePhotoData() {\n      const imageFilenames = Object.keys(this.allImages)\n\n      if (imageFilenames.length === 0) {\n        console.warn('没有找到图片文件')\n        return\n      }\n\n      // 解析并排序图片\n      this.photos = imageFilenames\n          .map(filename => parseImageFilename(filename))\n          .sort((a, b) => a.sortKey - b.sortKey)\n\n      console.log('图片排序完成:', this.photos.map(p => p.displayName))\n    },\n\n    getImageUrl(filename) {\n      if (!filename || !this.allImages[filename]) {\n        console.warn('图片不存在:', filename)\n        return ''\n      }\n\n      return this.allImages[filename]\n    },\n\n    onSliderChange(event) {\n      const newIndex = parseInt(event.target.value)\n      if (newIndex >= 0 && newIndex < this.photos.length) {\n        this.currentIndex = newIndex\n        this.stopPlay()\n      }\n    },\n\n    playPause() {\n      if (this.isPlaying) {\n        this.stopPlay()\n      } else {\n        this.startPlay()\n      }\n    },\n\n    startPlay() {\n      if (this.photos.length === 0) return\n\n      this.isPlaying = true\n      this.playInterval = setInterval(() => {\n        this.currentIndex = (this.currentIndex + 1) % this.photos.length\n      }, this.playSpeed)\n    },\n\n    stopPlay() {\n      this.isPlaying = false\n      if (this.playInterval) {\n        clearInterval(this.playInterval)\n        this.playInterval = null\n      }\n    },\n\n    updatePlaySpeed() {\n      if (this.isPlaying) {\n        this.stopPlay()\n        this.startPlay()\n      }\n    },\n\n    reset() {\n      this.stopPlay()\n      this.currentIndex = 0\n    },\n\n    onImageLoad() {\n      // 图片加载成功\n    },\n\n    onImageError(event) {\n      console.error('图片加载失败:', this.currentPhoto?.filename)\n      console.error('错误详情:', event)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.photo-timeline {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n}\n\n.timeline-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n  padding-bottom: 15px;\n  border-bottom: 2px solid #e9ecef;\n}\n\n.timeline-header h2 {\n  margin: 0;\n  color: #2c3e50;\n  font-size: 24px;\n}\n\n.controls {\n  display: flex;\n  gap: 15px;\n  align-items: center;\n}\n\n.control-btn {\n  padding: 10px 20px;\n  border: none;\n  border-radius: 6px;\n  background: #007bff;\n  color: white;\n  cursor: pointer;\n  font-size: 14px;\n  transition: background-color 0.2s;\n}\n\n.control-btn:hover {\n  background: #0056b3;\n}\n\n.control-btn:active {\n  transform: translateY(1px);\n}\n\n.speed-control {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.speed-control label {\n  font-weight: 500;\n  color: #495057;\n}\n\n.speed-control select {\n  padding: 5px 10px;\n  border: 1px solid #ced4da;\n  border-radius: 4px;\n  background: white;\n  cursor: pointer;\n}\n\n.image-container {\n  position: relative;\n  width: 100%;\n  height: 500px;\n  border: 2px solid #dee2e6;\n  border-radius: 8px;\n  overflow: hidden;\n  margin-bottom: 20px;\n  background: #f8f9fa;\n}\n\n.image-wrapper {\n  position: relative;\n  width: 100%;\n  height: 100%;\n}\n\n.timeline-image {\n  width: 100%;\n  height: 100%;\n  object-fit: contain;\n  background: white;\n}\n\n.image-info {\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background: linear-gradient(transparent, rgba(0, 0, 0, 0.8));\n  color: white;\n  padding: 15px 20px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.date-info {\n  font-size: 18px;\n  font-weight: 500;\n}\n\n.progress-info {\n  font-size: 14px;\n  opacity: 0.9;\n}\n\n.no-image {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  color: #6c757d;\n  font-size: 16px;\n}\n\n.timeline-slider {\n  margin-bottom: 25px;\n}\n\n.slider-container {\n  position: relative;\n}\n\n.timeline-range {\n  width: 100%;\n  height: 6px;\n  border-radius: 3px;\n  background: #dee2e6;\n  outline: none;\n  -webkit-appearance: none;\n  cursor: pointer;\n}\n\n.timeline-range::-webkit-slider-thumb {\n  appearance: none;\n  width: 18px;\n  height: 18px;\n  border-radius: 50%;\n  background: #007bff;\n  cursor: pointer;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n}\n\n.timeline-range::-moz-range-thumb {\n  width: 18px;\n  height: 18px;\n  border-radius: 50%;\n  background: #007bff;\n  cursor: pointer;\n  border: none;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n}\n\n.slider-labels {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 8px;\n  font-size: 12px;\n  color: #6c757d;\n}\n\n.timeline-info {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 20px;\n  padding: 20px;\n  background: #f8f9fa;\n  border-radius: 6px;\n  border: 1px solid #dee2e6;\n}\n\n.info-item {\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n}\n\n.label {\n  font-weight: 600;\n  color: #495057;\n  font-size: 14px;\n}\n\n.value {\n  color: #212529;\n  font-size: 16px;\n}\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n  .timeline-header {\n    flex-direction: column;\n    gap: 15px;\n    align-items: stretch;\n  }\n\n  .controls {\n    justify-content: center;\n  }\n\n  .image-container {\n    height: 400px;\n  }\n\n  .timeline-info {\n    grid-template-columns: 1fr;\n  }\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}