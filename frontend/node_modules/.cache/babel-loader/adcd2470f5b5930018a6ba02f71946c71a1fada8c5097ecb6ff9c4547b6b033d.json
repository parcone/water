{"ast":null,"code":"import { ref, reactive } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRouter } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nexport default {\n  name: 'Register',\n  setup() {\n    const store = useStore();\n    const router = useRouter();\n    const registerForm = ref(null);\n    const loading = ref(false);\n    const form = reactive({\n      username: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    });\n    const validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('Please enter your password'));\n      } else {\n        if (form.confirmPassword !== '') {\n          registerForm.value?.validateField('confirmPassword');\n        }\n        callback();\n      }\n    };\n    const validatePass2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('Please confirm your password'));\n      } else if (value !== form.password) {\n        callback(new Error('Passwords do not match'));\n      } else {\n        callback();\n      }\n    };\n    const rules = {\n      username: [{\n        required: true,\n        message: 'Please enter your username',\n        trigger: 'blur'\n      }, {\n        min: 3,\n        message: 'Username must be at least 3 characters',\n        trigger: 'blur'\n      }],\n      email: [{\n        required: true,\n        message: 'Please enter your email',\n        trigger: 'blur'\n      }, {\n        type: 'email',\n        message: 'Please enter a valid email address',\n        trigger: 'blur'\n      }],\n      password: [{\n        required: true,\n        validator: validatePass,\n        trigger: 'blur'\n      }, {\n        min: 6,\n        message: 'Password must be at least 6 characters',\n        trigger: 'blur'\n      }],\n      confirmPassword: [{\n        required: true,\n        validator: validatePass2,\n        trigger: 'blur'\n      }]\n    };\n    const handleSubmit = async () => {\n      if (!registerForm.value) return;\n      try {\n        await registerForm.value.validate();\n        loading.value = true;\n        const {\n          confirmPassword,\n          ...userData\n        } = form;\n        await store.dispatch('auth/register', userData);\n        ElMessage.success('Registration successful');\n        router.push('/');\n      } catch (error) {\n        ElMessage.error(error.response?.data?.message || 'Registration failed');\n      } finally {\n        loading.value = false;\n      }\n    };\n    return {\n      form,\n      rules,\n      loading,\n      registerForm,\n      handleSubmit\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","useStore","useRouter","ElMessage","name","setup","store","router","registerForm","loading","form","username","email","password","confirmPassword","validatePass","rule","value","callback","Error","validateField","validatePass2","rules","required","message","trigger","min","type","validator","handleSubmit","validate","userData","dispatch","success","push","error","response","data"],"sources":["D:\\restore\\water-melt\\frontend\\src\\views\\Register.vue"],"sourcesContent":["<template>\r\n  <div class=\"register-container\">\r\n    <el-card class=\"register-card\">\r\n      <template #header>\r\n        <h2 class=\"card-title\">Register</h2>\r\n      </template>\r\n\r\n      <el-form\r\n        ref=\"registerForm\"\r\n        :model=\"form\"\r\n        :rules=\"rules\"\r\n        label-position=\"top\"\r\n        @submit.prevent=\"handleSubmit\"\r\n      >\r\n        <el-form-item label=\"Username\" prop=\"username\">\r\n          <el-input\r\n            v-model=\"form.username\"\r\n            prefix-icon=\"User\"\r\n            placeholder=\"Choose a username\"\r\n          />\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"Email\" prop=\"email\">\r\n          <el-input\r\n            v-model=\"form.email\"\r\n            prefix-icon=\"Message\"\r\n            placeholder=\"Enter your email\"\r\n          />\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"Password\" prop=\"password\">\r\n          <el-input\r\n            v-model=\"form.password\"\r\n            type=\"password\"\r\n            prefix-icon=\"Lock\"\r\n            placeholder=\"Choose a password\"\r\n            show-password\r\n          />\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"Confirm Password\" prop=\"confirmPassword\">\r\n          <el-input\r\n            v-model=\"form.confirmPassword\"\r\n            type=\"password\"\r\n            prefix-icon=\"Lock\"\r\n            placeholder=\"Confirm your password\"\r\n            show-password\r\n          />\r\n        </el-form-item>\r\n\r\n        <div class=\"form-actions\">\r\n          <el-button type=\"primary\" native-type=\"submit\" :loading=\"loading\">\r\n            Register\r\n          </el-button>\r\n          <el-link type=\"primary\" @click=\"$router.push('/login')\">\r\n            Already have an account? Login\r\n          </el-link>\r\n        </div>\r\n      </el-form>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport { useRouter } from 'vue-router'\r\nimport { ElMessage } from 'element-plus'\r\n\r\nexport default {\r\n  name: 'Register',\r\n  setup() {\r\n    const store = useStore()\r\n    const router = useRouter()\r\n    const registerForm = ref(null)\r\n    const loading = ref(false)\r\n\r\n    const form = reactive({\r\n      username: '',\r\n      email: '',\r\n      password: '',\r\n      confirmPassword: ''\r\n    })\r\n\r\n    const validatePass = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('Please enter your password'))\r\n      } else {\r\n        if (form.confirmPassword !== '') {\r\n          registerForm.value?.validateField('confirmPassword')\r\n        }\r\n        callback()\r\n      }\r\n    }\r\n\r\n    const validatePass2 = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('Please confirm your password'))\r\n      } else if (value !== form.password) {\r\n        callback(new Error('Passwords do not match'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n\r\n    const rules = {\r\n      username: [\r\n        { required: true, message: 'Please enter your username', trigger: 'blur' },\r\n        { min: 3, message: 'Username must be at least 3 characters', trigger: 'blur' }\r\n      ],\r\n      email: [\r\n        { required: true, message: 'Please enter your email', trigger: 'blur' },\r\n        { type: 'email', message: 'Please enter a valid email address', trigger: 'blur' }\r\n      ],\r\n      password: [\r\n        { required: true, validator: validatePass, trigger: 'blur' },\r\n        { min: 6, message: 'Password must be at least 6 characters', trigger: 'blur' }\r\n      ],\r\n      confirmPassword: [\r\n        { required: true, validator: validatePass2, trigger: 'blur' }\r\n      ]\r\n    }\r\n\r\n    const handleSubmit = async () => {\r\n      if (!registerForm.value) return\r\n\r\n      try {\r\n        await registerForm.value.validate()\r\n        loading.value = true\r\n\r\n        const { confirmPassword, ...userData } = form\r\n        await store.dispatch('auth/register', userData)\r\n        ElMessage.success('Registration successful')\r\n        router.push('/')\r\n      } catch (error) {\r\n        ElMessage.error(error.response?.data?.message || 'Registration failed')\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n\r\n    return {\r\n      form,\r\n      rules,\r\n      loading,\r\n      registerForm,\r\n      handleSubmit\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.register-container {\r\n  min-height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: #f5f7fa;\r\n}\r\n\r\n.register-card {\r\n  width: 100%;\r\n  max-width: 400px;\r\n  margin: 20px;\r\n}\r\n\r\n.card-title {\r\n  margin: 0;\r\n  text-align: center;\r\n  color: #303133;\r\n}\r\n\r\n.form-actions {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 16px;\r\n  margin-top: 24px;\r\n\r\n  .el-button {\r\n    width: 100%;\r\n  }\r\n}\r\n</style> "],"mappings":"AAgEA,SAASA,GAAG,EAAEC,QAAO,QAAS,KAAI;AAClC,SAASC,QAAO,QAAS,MAAK;AAC9B,SAASC,SAAQ,QAAS,YAAW;AACrC,SAASC,SAAQ,QAAS,cAAa;AAEvC,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIL,QAAQ,CAAC;IACvB,MAAMM,MAAK,GAAIL,SAAS,CAAC;IACzB,MAAMM,YAAW,GAAIT,GAAG,CAAC,IAAI;IAC7B,MAAMU,OAAM,GAAIV,GAAG,CAAC,KAAK;IAEzB,MAAMW,IAAG,GAAIV,QAAQ,CAAC;MACpBW,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,eAAe,EAAE;IACnB,CAAC;IAED,MAAMC,YAAW,GAAIA,CAACC,IAAI,EAAEC,KAAK,EAAEC,QAAQ,KAAK;MAC9C,IAAID,KAAI,KAAM,EAAE,EAAE;QAChBC,QAAQ,CAAC,IAAIC,KAAK,CAAC,4BAA4B,CAAC;MAClD,OAAO;QACL,IAAIT,IAAI,CAACI,eAAc,KAAM,EAAE,EAAE;UAC/BN,YAAY,CAACS,KAAK,EAAEG,aAAa,CAAC,iBAAiB;QACrD;QACAF,QAAQ,CAAC;MACX;IACF;IAEA,MAAMG,aAAY,GAAIA,CAACL,IAAI,EAAEC,KAAK,EAAEC,QAAQ,KAAK;MAC/C,IAAID,KAAI,KAAM,EAAE,EAAE;QAChBC,QAAQ,CAAC,IAAIC,KAAK,CAAC,8BAA8B,CAAC;MACpD,OAAO,IAAIF,KAAI,KAAMP,IAAI,CAACG,QAAQ,EAAE;QAClCK,QAAQ,CAAC,IAAIC,KAAK,CAAC,wBAAwB,CAAC;MAC9C,OAAO;QACLD,QAAQ,CAAC;MACX;IACF;IAEA,MAAMI,KAAI,GAAI;MACZX,QAAQ,EAAE,CACR;QAAEY,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,4BAA4B;QAAEC,OAAO,EAAE;MAAO,CAAC,EAC1E;QAAEC,GAAG,EAAE,CAAC;QAAEF,OAAO,EAAE,wCAAwC;QAAEC,OAAO,EAAE;MAAO,EAC9E;MACDb,KAAK,EAAE,CACL;QAAEW,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,yBAAyB;QAAEC,OAAO,EAAE;MAAO,CAAC,EACvE;QAAEE,IAAI,EAAE,OAAO;QAAEH,OAAO,EAAE,oCAAoC;QAAEC,OAAO,EAAE;MAAO,EACjF;MACDZ,QAAQ,EAAE,CACR;QAAEU,QAAQ,EAAE,IAAI;QAAEK,SAAS,EAAEb,YAAY;QAAEU,OAAO,EAAE;MAAO,CAAC,EAC5D;QAAEC,GAAG,EAAE,CAAC;QAAEF,OAAO,EAAE,wCAAwC;QAAEC,OAAO,EAAE;MAAO,EAC9E;MACDX,eAAe,EAAE,CACf;QAAES,QAAQ,EAAE,IAAI;QAAEK,SAAS,EAAEP,aAAa;QAAEI,OAAO,EAAE;MAAO;IAEhE;IAEA,MAAMI,YAAW,GAAI,MAAAA,CAAA,KAAY;MAC/B,IAAI,CAACrB,YAAY,CAACS,KAAK,EAAE;MAEzB,IAAI;QACF,MAAMT,YAAY,CAACS,KAAK,CAACa,QAAQ,CAAC;QAClCrB,OAAO,CAACQ,KAAI,GAAI,IAAG;QAEnB,MAAM;UAAEH,eAAe;UAAE,GAAGiB;QAAS,IAAIrB,IAAG;QAC5C,MAAMJ,KAAK,CAAC0B,QAAQ,CAAC,eAAe,EAAED,QAAQ;QAC9C5B,SAAS,CAAC8B,OAAO,CAAC,yBAAyB;QAC3C1B,MAAM,CAAC2B,IAAI,CAAC,GAAG;MACjB,EAAE,OAAOC,KAAK,EAAE;QACdhC,SAAS,CAACgC,KAAK,CAACA,KAAK,CAACC,QAAQ,EAAEC,IAAI,EAAEb,OAAM,IAAK,qBAAqB;MACxE,UAAU;QACRf,OAAO,CAACQ,KAAI,GAAI,KAAI;MACtB;IACF;IAEA,OAAO;MACLP,IAAI;MACJY,KAAK;MACLb,OAAO;MACPD,YAAY;MACZqB;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}