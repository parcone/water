{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveDynamicComponent as _resolveDynamicComponent, createBlock as _createBlock, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createTextVNode as _createTextVNode, mergeProps as _mergeProps, resolveDirective as _resolveDirective, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"monitoring-view\"\n};\nconst _hoisted_2 = {\n  class: \"stats-section\"\n};\nconst _hoisted_3 = {\n  class: \"stat-icon\"\n};\nconst _hoisted_4 = {\n  class: \"stat-content\"\n};\nconst _hoisted_5 = {\n  class: \"stat-label\"\n};\nconst _hoisted_6 = {\n  class: \"toolbar\"\n};\nconst _hoisted_7 = {\n  class: \"toolbar-left\"\n};\nconst _hoisted_8 = {\n  class: \"toolbar-right\"\n};\nconst _hoisted_9 = {\n  class: \"select-option\"\n};\nconst _hoisted_10 = {\n  class: \"select-option\"\n};\nconst _hoisted_11 = {\n  class: \"main-content\"\n};\nconst _hoisted_12 = {\n  class: \"content-main\"\n};\nconst _hoisted_13 = {\n  class: \"panel device-list-panel\"\n};\nconst _hoisted_14 = {\n  key: 0,\n  class: \"device-grid\"\n};\nconst _hoisted_15 = {\n  class: \"virtual-list-container\"\n};\nconst _hoisted_16 = {\n  class: \"device-card-header\"\n};\nconst _hoisted_17 = {\n  class: \"device-icon\"\n};\nconst _hoisted_18 = {\n  class: \"device-status\"\n};\nconst _hoisted_19 = {\n  class: \"device-card-content\"\n};\nconst _hoisted_20 = {\n  class: \"device-name\"\n};\nconst _hoisted_21 = {\n  class: \"device-type\"\n};\nconst _hoisted_22 = {\n  class: \"device-location\"\n};\nconst _hoisted_23 = {\n  class: \"device-data\"\n};\nconst _hoisted_24 = {\n  class: \"device-card-footer\"\n};\nconst _hoisted_25 = {\n  class: \"device-name\"\n};\nconst _hoisted_26 = {\n  class: \"latest-data\"\n};\nconst _hoisted_27 = {\n  class: \"panel timeline-panel\"\n};\nconst _hoisted_28 = {\n  class: \"timeline-content\"\n};\nconst _hoisted_29 = {\n  class: \"content-side\"\n};\nconst _hoisted_30 = {\n  class: \"side-panel prediction-panel\"\n};\nconst _hoisted_31 = {\n  class: \"panel-header\"\n};\nconst _hoisted_32 = {\n  class: \"panel-actions\"\n};\nconst _hoisted_33 = {\n  class: \"prediction-content\"\n};\nconst _hoisted_34 = {\n  class: \"prediction-chart\"\n};\nconst _hoisted_35 = {\n  class: \"prediction-settings\"\n};\nconst _hoisted_36 = {\n  class: \"prediction-metrics\"\n};\nconst _hoisted_37 = {\n  class: \"metric-card\"\n};\nconst _hoisted_38 = {\n  class: \"metric-trend positive\"\n};\nconst _hoisted_39 = {\n  class: \"metric-card\"\n};\nconst _hoisted_40 = {\n  class: \"metric-trend positive\"\n};\nconst _hoisted_41 = {\n  class: \"metric-card\"\n};\nconst _hoisted_42 = {\n  class: \"metric-trend negative\"\n};\nconst _hoisted_43 = {\n  class: \"side-panel\"\n};\nconst _hoisted_44 = {\n  class: \"panel-header\"\n};\nconst _hoisted_45 = {\n  class: \"chart-container\"\n};\nconst _hoisted_46 = {\n  class: \"side-panel\"\n};\nconst _hoisted_47 = {\n  class: \"panel-header\"\n};\nconst _hoisted_48 = {\n  class: \"alert-list\"\n};\nconst _hoisted_49 = [\"onClick\"];\nconst _hoisted_50 = {\n  class: \"alert-icon\"\n};\nconst _hoisted_51 = {\n  class: \"alert-content\"\n};\nconst _hoisted_52 = {\n  class: \"alert-title\"\n};\nconst _hoisted_53 = {\n  class: \"alert-info\"\n};\nconst _hoisted_54 = {\n  class: \"alert-device\"\n};\nconst _hoisted_55 = {\n  class: \"alert-time\"\n};\nconst _hoisted_56 = {\n  class: \"alert-action\"\n};\nconst _hoisted_57 = {\n  class: \"side-panel\"\n};\nconst _hoisted_58 = {\n  class: \"device-info\"\n};\nconst _hoisted_59 = {\n  class: \"info-item\"\n};\nconst _hoisted_60 = {\n  class: \"value\"\n};\nconst _hoisted_61 = {\n  class: \"info-item\"\n};\nconst _hoisted_62 = {\n  class: \"value\"\n};\nconst _hoisted_63 = {\n  class: \"info-item\"\n};\nconst _hoisted_64 = {\n  class: \"value\"\n};\nconst _hoisted_65 = {\n  class: \"info-item\"\n};\nconst _hoisted_66 = {\n  class: \"value\"\n};\nconst _hoisted_67 = {\n  class: \"info-item\"\n};\nconst _hoisted_68 = {\n  class: \"value\"\n};\nconst _hoisted_69 = {\n  class: \"info-item\"\n};\nconst _hoisted_70 = {\n  class: \"value\"\n};\nconst _hoisted_71 = {\n  class: \"history-data\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_icon = _resolveComponent(\"el-icon\");\n  const _component_el_tooltip = _resolveComponent(\"el-tooltip\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_button_group = _resolveComponent(\"el-button-group\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_option = _resolveComponent(\"el-option\");\n  const _component_el_select = _resolveComponent(\"el-select\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_date_picker = _resolveComponent(\"el-date-picker\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  const _component_el_tag = _resolveComponent(\"el-tag\");\n  const _component_el_scrollbar = _resolveComponent(\"el-scrollbar\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _component_el_switch = _resolveComponent(\"el-switch\");\n  const _component_el_input_number = _resolveComponent(\"el-input-number\");\n  const _component_el_col = _resolveComponent(\"el-col\");\n  const _component_el_row = _resolveComponent(\"el-row\");\n  const _component_el_tab_pane = _resolveComponent(\"el-tab-pane\");\n  const _component_el_tabs = _resolveComponent(\"el-tabs\");\n  const _directive_loading = _resolveDirective(\"loading\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 顶部统计卡片 \"), _createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.deviceStats, (stat, key) => {\n    return _openBlock(), _createBlock(_component_el_tooltip, {\n      key: key,\n      content: $setup.getStatTooltip(key),\n      placement: \"top\"\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", {\n        class: _normalizeClass(['stat-card', key])\n      }, [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_icon, null, {\n        default: _withCtx(() => [(_openBlock(), _createBlock(_resolveDynamicComponent($setup.getStatIcon(key))))]),\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */)]), _createElementVNode(\"div\", _hoisted_4, [_createVNode($setup[\"AnimatedNumber\"], {\n        value: stat,\n        duration: 1000,\n        class: \"stat-value\"\n      }, null, 8 /* PROPS */, [\"value\"]), _createElementVNode(\"div\", _hoisted_5, _toDisplayString($setup.getStatLabel(key)), 1 /* TEXT */)]), _createElementVNode(\"div\", {\n        class: _normalizeClass(['stat-trend', $setup.getTrendClass(key)])\n      }, [_createVNode(_component_el_icon, null, {\n        default: _withCtx(() => [(_openBlock(), _createBlock(_resolveDynamicComponent($setup.getTrendIcon(key))))]),\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */), _createElementVNode(\"span\", null, _toDisplayString($setup.getTrendText(key)), 1 /* TEXT */)], 2 /* CLASS */)], 2 /* CLASS */)]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"content\"]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" 设备列表工具栏 \"), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_createVNode(_component_el_button_group, null, {\n    default: _withCtx(() => [_createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: $setup.showAddDevice,\n      loading: $setup.loading\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n        default: _withCtx(() => [_createVNode($setup[\"Plus\"])]),\n        _: 1 /* STABLE */\n      }), _cache[25] || (_cache[25] = _createTextVNode(\"新增设备 \"))]),\n      _: 1 /* STABLE */,\n      __: [25]\n    }, 8 /* PROPS */, [\"loading\"]), _createVNode(_component_el_button, {\n      class: _normalizeClass({\n        active: $setup.viewMode === 'grid'\n      }),\n      onClick: _cache[0] || (_cache[0] = $event => $setup.viewMode = 'grid')\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n        default: _withCtx(() => [_createVNode($setup[\"Grid\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"class\"]), _createVNode(_component_el_button, {\n      class: _normalizeClass({\n        active: $setup.viewMode === 'table'\n      }),\n      onClick: _cache[1] || (_cache[1] = $event => $setup.viewMode = 'table')\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n        default: _withCtx(() => [_createVNode($setup[\"List\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"class\"])]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_el_button_group, {\n    class: \"view-options\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_tooltip, {\n      content: \"刷新数据\",\n      placement: \"top\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        onClick: $setup.refreshData,\n        loading: $setup.loading\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n          default: _withCtx(() => [_createVNode($setup[\"Refresh\"])]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"loading\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_tooltip, {\n      content: \"导出数据\",\n      placement: \"top\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        onClick: $setup.exportData,\n        loading: $setup.exporting\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n          default: _withCtx(() => [_createVNode($setup[\"Download\"])]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"loading\"])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  })]), _createElementVNode(\"div\", _hoisted_8, [_createVNode(_component_el_input, {\n    modelValue: $setup.searchQuery,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.searchQuery = $event),\n    placeholder: \"搜索设备...\",\n    \"prefix-icon\": \"Search\",\n    clearable: \"\",\n    onInput: $setup.debouncedSearch\n  }, {\n    append: _withCtx(() => [_createVNode(_component_el_button, {\n      onClick: $setup.showAdvancedSearch\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n        default: _withCtx(() => [_createVNode($setup[\"Setting\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\", \"onInput\"]), _createVNode(_component_el_select, {\n    modelValue: $setup.filterStatus,\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.filterStatus = $event),\n    placeholder: \"状态筛选\",\n    clearable: \"\",\n    onChange: $setup.debouncedFilter\n  }, {\n    default: _withCtx(() => [(_openBlock(), _createElementBlock(_Fragment, null, _renderList($setup.statusOptions, option => {\n      return _createVNode(_component_el_option, _mergeProps({\n        key: option.value\n      }, {\n        ref_for: true\n      }, option), {\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"span\", {\n          class: _normalizeClass([\"status-dot\", option.value])\n        }, null, 2 /* CLASS */), _createTextVNode(\" \" + _toDisplayString(option.label), 1 /* TEXT */)])]),\n        _: 2 /* DYNAMIC */\n      }, 1040 /* FULL_PROPS, DYNAMIC_SLOTS */);\n    }), 64 /* STABLE_FRAGMENT */))]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\", \"onChange\"]), _createVNode(_component_el_select, {\n    modelValue: $setup.filterType,\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.filterType = $event),\n    placeholder: \"类型筛选\",\n    clearable: \"\",\n    onChange: $setup.debouncedFilter\n  }, {\n    default: _withCtx(() => [(_openBlock(), _createElementBlock(_Fragment, null, _renderList($setup.typeOptions, option => {\n      return _createVNode(_component_el_option, _mergeProps({\n        key: option.value\n      }, {\n        ref_for: true\n      }, option), {\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_10, [_createVNode(_component_el_icon, {\n          class: _normalizeClass($setup.getDeviceIcon(option.value))\n        }, null, 8 /* PROPS */, [\"class\"]), _createTextVNode(\" \" + _toDisplayString(option.label), 1 /* TEXT */)])]),\n        _: 2 /* DYNAMIC */\n      }, 1040 /* FULL_PROPS, DYNAMIC_SLOTS */);\n    }), 64 /* STABLE_FRAGMENT */))]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\", \"onChange\"])])]), _createCommentVNode(\" 高级搜索对话框 \"), _createVNode(_component_el_dialog, {\n    modelValue: $setup.showAdvancedSearchDialog,\n    \"onUpdate:modelValue\": _cache[11] || (_cache[11] = $event => $setup.showAdvancedSearchDialog = $event),\n    title: \"高级搜索\",\n    width: \"500px\",\n    \"destroy-on-close\": \"\"\n  }, {\n    footer: _withCtx(() => [_createVNode(_component_el_button, {\n      onClick: _cache[10] || (_cache[10] = $event => $setup.showAdvancedSearchDialog = false)\n    }, {\n      default: _withCtx(() => _cache[26] || (_cache[26] = [_createTextVNode(\"取消\")])),\n      _: 1 /* STABLE */,\n      __: [26]\n    }), _createVNode(_component_el_button, {\n      onClick: $setup.resetAdvancedSearch\n    }, {\n      default: _withCtx(() => _cache[27] || (_cache[27] = [_createTextVNode(\"重置\")])),\n      _: 1 /* STABLE */,\n      __: [27]\n    }), _createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: $setup.applyAdvancedSearch\n    }, {\n      default: _withCtx(() => _cache[28] || (_cache[28] = [_createTextVNode(\"确定\")])),\n      _: 1 /* STABLE */,\n      __: [28]\n    })]),\n    default: _withCtx(() => [_createVNode(_component_el_form, {\n      ref: \"searchForm\",\n      model: $setup.advancedSearch,\n      \"label-width\": \"100px\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        label: \"设备名称\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.advancedSearch.name,\n          \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $setup.advancedSearch.name = $event),\n          placeholder: \"支持模糊搜索\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"设备类型\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_select, {\n          modelValue: $setup.advancedSearch.type,\n          \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $setup.advancedSearch.type = $event),\n          placeholder: \"请选择\",\n          clearable: \"\"\n        }, {\n          default: _withCtx(() => [(_openBlock(), _createElementBlock(_Fragment, null, _renderList($setup.typeOptions, option => {\n            return _createVNode(_component_el_option, _mergeProps({\n              key: option.value\n            }, {\n              ref_for: true\n            }, option), null, 16 /* FULL_PROPS */);\n          }), 64 /* STABLE_FRAGMENT */))]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"设备状态\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_select, {\n          modelValue: $setup.advancedSearch.status,\n          \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $setup.advancedSearch.status = $event),\n          placeholder: \"请选择\",\n          clearable: \"\"\n        }, {\n          default: _withCtx(() => [(_openBlock(), _createElementBlock(_Fragment, null, _renderList($setup.statusOptions, option => {\n            return _createVNode(_component_el_option, _mergeProps({\n              key: option.value\n            }, {\n              ref_for: true\n            }, option), null, 16 /* FULL_PROPS */);\n          }), 64 /* STABLE_FRAGMENT */))]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"安装位置\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.advancedSearch.location,\n          \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $setup.advancedSearch.location = $event),\n          placeholder: \"支持模糊搜索\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"更新时间\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_date_picker, {\n          modelValue: $setup.advancedSearch.updateTime,\n          \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => $setup.advancedSearch.updateTime = $event),\n          type: \"daterange\",\n          \"range-separator\": \"至\",\n          \"start-placeholder\": \"开始日期\",\n          \"end-placeholder\": \"结束日期\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"]), _createCommentVNode(\" 主要内容区域 \"), _createElementVNode(\"div\", _hoisted_11, [_createCommentVNode(\" 左侧：设备列表和状态 \"), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"div\", _hoisted_13, [_cache[34] || (_cache[34] = _createElementVNode(\"div\", {\n    class: \"panel-header\"\n  }, [_createElementVNode(\"div\", {\n    class: \"header-left\"\n  }, [_createElementVNode(\"h3\", null, \"设备管理\")]), _createElementVNode(\"div\", {\n    class: \"header-right\"\n  })], -1 /* CACHED */)), _createCommentVNode(\" 网格视图 \"), $setup.viewMode === 'grid' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_14, [_createVNode(_component_el_scrollbar, {\n    height: \"100%\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_15, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.filteredDeviceList, device => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: device.name,\n        class: _normalizeClass([\"device-card\", device.status])\n      }, [_createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"div\", _hoisted_17, [_createVNode(_component_el_icon, {\n        class: _normalizeClass($setup.getDeviceIcon(device.type))\n      }, {\n        default: _withCtx(() => [_createVNode($setup[\"Monitor\"])]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"class\"])]), _createElementVNode(\"div\", _hoisted_18, [_cache[29] || (_cache[29] = _createElementVNode(\"span\", {\n        class: \"status-dot\"\n      }, null, -1 /* CACHED */)), _createTextVNode(\" \" + _toDisplayString($setup.getStatusText(device.status)), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_19, [_createElementVNode(\"div\", _hoisted_20, _toDisplayString(device.name), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_21, [_createVNode(_component_el_tag, {\n        type: $setup.getDeviceTagType(device.type),\n        size: \"small\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(device.type), 1 /* TEXT */)]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"type\"])]), _createElementVNode(\"div\", _hoisted_22, _toDisplayString(device.location), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_23, [_createVNode(_component_el_tooltip, {\n        content: device.lastUpdate,\n        placement: \"top\"\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"span\", null, _toDisplayString(device.latestData), 1 /* TEXT */)]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"content\"])])]), _createElementVNode(\"div\", _hoisted_24, [_createVNode(_component_el_button_group, null, {\n        default: _withCtx(() => [_createVNode(_component_el_button, {\n          size: \"small\",\n          onClick: $event => $setup.viewDetail(device)\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n            default: _withCtx(() => [_createVNode($setup[\"View\"])]),\n            _: 1 /* STABLE */\n          }), _cache[30] || (_cache[30] = _createTextVNode(\" 详情 \"))]),\n          _: 2 /* DYNAMIC */,\n          __: [30]\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_el_button, {\n          size: \"small\",\n          type: \"primary\",\n          onClick: $event => $setup.configDevice(device)\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n            default: _withCtx(() => [_createVNode($setup[\"Setting\"])]),\n            _: 1 /* STABLE */\n          }), _cache[31] || (_cache[31] = _createTextVNode(\" 配置 \"))]),\n          _: 2 /* DYNAMIC */,\n          __: [31]\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_el_button, {\n          size: \"small\",\n          type: \"danger\",\n          onClick: $event => $setup.deleteDevice(device)\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n            default: _withCtx(() => [_createVNode($setup[\"Delete\"])]),\n            _: 1 /* STABLE */\n          }), _cache[32] || (_cache[32] = _createTextVNode(\" 删除 \"))]),\n          _: 2 /* DYNAMIC */,\n          __: [32]\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */)])], 2 /* CLASS */);\n    }), 128 /* KEYED_FRAGMENT */))])]),\n    _: 1 /* STABLE */\n  })])) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" 表格视图 \"), _createVNode(_component_el_scrollbar, {\n    height: \"100%\"\n  }, {\n    default: _withCtx(() => [_withDirectives((_openBlock(), _createBlock(_component_el_table, {\n      data: $setup.filteredDeviceList,\n      style: {\n        \"width\": \"100%\"\n      },\n      \"header-cell-style\": {\n        background: '#1a1a1a',\n        color: '#fff'\n      },\n      height: \"100%\",\n      \"virtual-scrolling\": true,\n      \"row-height\": 54\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_table_column, {\n        prop: \"name\",\n        label: \"设备名称\",\n        \"min-width\": \"200\"\n      }, {\n        default: _withCtx(({\n          row\n        }) => [_createElementVNode(\"div\", _hoisted_25, [_createVNode(_component_el_icon, {\n          class: _normalizeClass($setup.getDeviceIcon(row.type))\n        }, {\n          default: _withCtx(() => [_createVNode($setup[\"Monitor\"])]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"class\"]), _createElementVNode(\"span\", null, _toDisplayString(row.name), 1 /* TEXT */)])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_table_column, {\n        prop: \"type\",\n        label: \"类型\",\n        width: \"120\"\n      }, {\n        default: _withCtx(({\n          row\n        }) => [_createVNode(_component_el_tag, {\n          type: $setup.getDeviceTagType(row.type)\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString(row.type), 1 /* TEXT */)]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"type\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_table_column, {\n        prop: \"status\",\n        label: \"状态\",\n        width: \"100\"\n      }, {\n        default: _withCtx(({\n          row\n        }) => [_createElementVNode(\"div\", {\n          class: _normalizeClass([\"status-indicator\", row.status])\n        }, [_cache[33] || (_cache[33] = _createElementVNode(\"span\", {\n          class: \"status-dot\"\n        }, null, -1 /* CACHED */)), _createTextVNode(\" \" + _toDisplayString($setup.getStatusText(row.status)), 1 /* TEXT */)], 2 /* CLASS */)]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_table_column, {\n        prop: \"location\",\n        label: \"位置\",\n        width: \"120\"\n      }), _createVNode(_component_el_table_column, {\n        label: \"最近数据\",\n        \"min-width\": \"180\"\n      }, {\n        default: _withCtx(({\n          row\n        }) => [_createElementVNode(\"div\", _hoisted_26, [_createVNode(_component_el_tooltip, {\n          content: row.lastUpdate,\n          placement: \"top\"\n        }, {\n          default: _withCtx(() => [_createElementVNode(\"span\", null, _toDisplayString(row.latestData), 1 /* TEXT */)]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"content\"])])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_table_column, {\n        label: \"操作\",\n        width: \"200\",\n        fixed: \"right\"\n      }, {\n        default: _withCtx(({\n          row\n        }) => [_createVNode(_component_el_button_group, null, {\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            size: \"small\",\n            onClick: $event => $setup.viewDetail(row)\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n              default: _withCtx(() => [_createVNode($setup[\"View\"])]),\n              _: 1 /* STABLE */\n            })]),\n            _: 2 /* DYNAMIC */\n          }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_el_button, {\n            size: \"small\",\n            type: \"primary\",\n            onClick: $event => $setup.configDevice(row)\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n              default: _withCtx(() => [_createVNode($setup[\"Setting\"])]),\n              _: 1 /* STABLE */\n            })]),\n            _: 2 /* DYNAMIC */\n          }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_el_button, {\n            size: \"small\",\n            type: \"danger\",\n            onClick: $event => $setup.deleteDevice(row)\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n              default: _withCtx(() => [_createVNode($setup[\"Delete\"])]),\n              _: 1 /* STABLE */\n            })]),\n            _: 2 /* DYNAMIC */\n          }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n          _: 2 /* DYNAMIC */\n        }, 1024 /* DYNAMIC_SLOTS */)]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"data\"])), [[_directive_loading, $setup.loading]])]),\n    _: 1 /* STABLE */\n  })], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */))]), _createCommentVNode(\" 图片时间轴面板 \"), _createElementVNode(\"div\", _hoisted_27, [_cache[35] || (_cache[35] = _createElementVNode(\"div\", {\n    class: \"panel-header\"\n  }, [_createElementVNode(\"div\", {\n    class: \"header-left\"\n  }, [_createElementVNode(\"h3\", null, \"图片时间轴\")])], -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_28, [_createVNode($setup[\"PhotoTimeline\"])])])]), _createCommentVNode(\" 右侧：实时数据和告警 \"), _createElementVNode(\"div\", _hoisted_29, [_createCommentVNode(\" 智能预测面板 \"), _createElementVNode(\"div\", _hoisted_30, [_createElementVNode(\"div\", _hoisted_31, [_cache[36] || (_cache[36] = _createElementVNode(\"h3\", null, \"智能预测\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_32, [_createVNode(_component_el_select, {\n    modelValue: $setup.selectedDevice,\n    \"onUpdate:modelValue\": _cache[12] || (_cache[12] = $event => $setup.selectedDevice = $event),\n    size: \"small\",\n    placeholder: \"选择设备\",\n    onChange: $setup.updatePredictionData\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.deviceList, device => {\n      return _openBlock(), _createBlock(_component_el_option, {\n        key: device.name,\n        label: device.name,\n        value: device.name\n      }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n    }), 128 /* KEYED_FRAGMENT */))]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_el_select, {\n    modelValue: $setup.predictionTimeRange,\n    \"onUpdate:modelValue\": _cache[13] || (_cache[13] = $event => $setup.predictionTimeRange = $event),\n    size: \"small\",\n    placeholder: \"预测时间范围\",\n    onChange: $setup.updatePredictionData\n  }, {\n    default: _withCtx(() => [(_openBlock(), _createElementBlock(_Fragment, null, _renderList($setup.timeRangeOptions, option => {\n      return _createVNode(_component_el_option, _mergeProps({\n        key: option.value\n      }, {\n        ref_for: true\n      }, option), null, 16 /* FULL_PROPS */);\n    }), 64 /* STABLE_FRAGMENT */))]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"])])]), _createElementVNode(\"div\", _hoisted_33, [_createElementVNode(\"div\", _hoisted_34, [_createVNode($setup[\"BaseEChart\"], {\n    options: $setup.predictionChartOptions\n  }, null, 8 /* PROPS */, [\"options\"])]), _createElementVNode(\"div\", _hoisted_35, [_createVNode(_component_el_form, {\n    model: $setup.predictionConfig,\n    \"label-width\": \"120px\",\n    size: \"small\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form_item, {\n      label: \"自动更新\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_switch, {\n        modelValue: $setup.predictionConfig.enableAutoUpdate,\n        \"onUpdate:modelValue\": _cache[14] || (_cache[14] = $event => $setup.predictionConfig.enableAutoUpdate = $event)\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"更新间隔(分钟)\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input_number, {\n        modelValue: $setup.predictionConfig.updateInterval,\n        \"onUpdate:modelValue\": _cache[15] || (_cache[15] = $event => $setup.predictionConfig.updateInterval = $event),\n        min: 1,\n        max: 60,\n        disabled: !$setup.predictionConfig.enableAutoUpdate\n      }, null, 8 /* PROPS */, [\"modelValue\", \"disabled\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"置信区间\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_select, {\n        modelValue: $setup.predictionConfig.confidenceInterval,\n        \"onUpdate:modelValue\": _cache[16] || (_cache[16] = $event => $setup.predictionConfig.confidenceInterval = $event)\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_option, {\n          label: \"90%\",\n          value: \"0.90\"\n        }), _createVNode(_component_el_option, {\n          label: \"95%\",\n          value: \"0.95\"\n        }), _createVNode(_component_el_option, {\n          label: \"99%\",\n          value: \"0.99\"\n        })]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"显示置信区间\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_switch, {\n        modelValue: $setup.predictionConfig.showConfidenceBounds,\n        \"onUpdate:modelValue\": _cache[17] || (_cache[17] = $event => $setup.predictionConfig.showConfidenceBounds = $event)\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model\"])]), _createElementVNode(\"div\", _hoisted_36, [_createVNode(_component_el_row, {\n    gutter: 20\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_col, {\n      span: 8\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_37, [_cache[38] || (_cache[38] = _createElementVNode(\"div\", {\n        class: \"metric-label\"\n      }, \"预测准确率\", -1 /* CACHED */)), _cache[39] || (_cache[39] = _createElementVNode(\"div\", {\n        class: \"metric-value\"\n      }, \"95.8%\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_38, [_createVNode(_component_el_icon, null, {\n        default: _withCtx(() => [_createVNode($setup[\"ArrowUp\"])]),\n        _: 1 /* STABLE */\n      }), _cache[37] || (_cache[37] = _createElementVNode(\"span\", null, \"2.3%\", -1 /* CACHED */))])])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_col, {\n      span: 8\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_39, [_cache[41] || (_cache[41] = _createElementVNode(\"div\", {\n        class: \"metric-label\"\n      }, \"预警提前量\", -1 /* CACHED */)), _cache[42] || (_cache[42] = _createElementVNode(\"div\", {\n        class: \"metric-value\"\n      }, \"30min\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_40, [_createVNode(_component_el_icon, null, {\n        default: _withCtx(() => [_createVNode($setup[\"ArrowUp\"])]),\n        _: 1 /* STABLE */\n      }), _cache[40] || (_cache[40] = _createElementVNode(\"span\", null, \"5min\", -1 /* CACHED */))])])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_col, {\n      span: 8\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_41, [_cache[44] || (_cache[44] = _createElementVNode(\"div\", {\n        class: \"metric-label\"\n      }, \"误报率\", -1 /* CACHED */)), _cache[45] || (_cache[45] = _createElementVNode(\"div\", {\n        class: \"metric-value\"\n      }, \"2.1%\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_42, [_createVNode(_component_el_icon, null, {\n        default: _withCtx(() => [_createVNode($setup[\"ArrowDown\"])]),\n        _: 1 /* STABLE */\n      }), _cache[43] || (_cache[43] = _createElementVNode(\"span\", null, \"0.5%\", -1 /* CACHED */))])])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  })])])]), _createCommentVNode(\" 实时数据图表 \"), _createElementVNode(\"div\", _hoisted_43, [_createElementVNode(\"div\", _hoisted_44, [_cache[46] || (_cache[46] = _createElementVNode(\"h3\", null, \"实时数据\", -1 /* CACHED */)), _createVNode(_component_el_select, {\n    modelValue: $setup.selectedDevice,\n    \"onUpdate:modelValue\": _cache[18] || (_cache[18] = $event => $setup.selectedDevice = $event),\n    size: \"small\",\n    placeholder: \"选择设备\"\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.deviceList, device => {\n      return _openBlock(), _createBlock(_component_el_option, {\n        key: device.name,\n        label: device.name,\n        value: device.name\n      }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n    }), 128 /* KEYED_FRAGMENT */))]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"])]), _createElementVNode(\"div\", _hoisted_45, [_createVNode($setup[\"BaseEChart\"], {\n    options: $setup.chartOptions\n  }, null, 8 /* PROPS */, [\"options\"])])]), _createCommentVNode(\" 最近告警 \"), _createElementVNode(\"div\", _hoisted_46, [_createElementVNode(\"div\", _hoisted_47, [_cache[47] || (_cache[47] = _createElementVNode(\"h3\", null, \"最近告警\", -1 /* CACHED */)), _createVNode(_component_el_tag, {\n    size: \"small\",\n    type: \"danger\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.alerts.length) + \" 个未处理\", 1 /* TEXT */)]),\n    _: 1 /* STABLE */\n  })]), _createElementVNode(\"div\", _hoisted_48, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.alerts, alert => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: alert.id,\n      class: _normalizeClass([\"alert-item\", [alert.level, {\n        unread: alert.unread\n      }]]),\n      onClick: $event => $setup.handleAlert(alert)\n    }, [_createElementVNode(\"div\", _hoisted_50, [_createVNode(_component_el_icon, null, {\n      default: _withCtx(() => [_createVNode($setup[\"Warning\"])]),\n      _: 1 /* STABLE */\n    })]), _createElementVNode(\"div\", _hoisted_51, [_createElementVNode(\"div\", _hoisted_52, _toDisplayString(alert.title), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_53, [_createElementVNode(\"span\", _hoisted_54, _toDisplayString(alert.device), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_55, _toDisplayString(alert.time), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_56, [_createVNode(_component_el_button, {\n      size: \"small\",\n      type: \"primary\",\n      link: \"\"\n    }, {\n      default: _withCtx(() => [...(_cache[48] || (_cache[48] = [_createTextVNode(\"处理\")]))]),\n      _: 1 /* STABLE */,\n      __: [48]\n    })])], 10 /* CLASS, PROPS */, _hoisted_49);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createCommentVNode(\" 动态照片播放 \"), _createElementVNode(\"div\", _hoisted_57, [_cache[49] || (_cache[49] = _createElementVNode(\"div\", {\n    class: \"panel-header\"\n  }, [_createElementVNode(\"h3\", null, \"智能检测照片\")], -1 /* CACHED */)), _createVNode($setup[\"PhotoTimeline\"])])])]), _createCommentVNode(\" 设备详情对话框 \"), _createVNode(_component_el_dialog, {\n    modelValue: $setup.showDetail,\n    \"onUpdate:modelValue\": _cache[19] || (_cache[19] = $event => $setup.showDetail = $event),\n    title: \"设备详情\",\n    width: \"60%\",\n    \"destroy-on-close\": \"\"\n  }, {\n    default: _withCtx(() => [$setup.currentDevice ? (_openBlock(), _createBlock(_component_el_tabs, {\n      key: 0\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_tab_pane, {\n        label: \"基本信息\"\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_58, [_createElementVNode(\"div\", _hoisted_59, [_cache[50] || (_cache[50] = _createElementVNode(\"span\", {\n          class: \"label\"\n        }, \"设备名称\", -1 /* CACHED */)), _createElementVNode(\"span\", _hoisted_60, _toDisplayString($setup.currentDevice.name), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_61, [_cache[51] || (_cache[51] = _createElementVNode(\"span\", {\n          class: \"label\"\n        }, \"设备类型\", -1 /* CACHED */)), _createElementVNode(\"span\", _hoisted_62, _toDisplayString($setup.currentDevice.type), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_63, [_cache[52] || (_cache[52] = _createElementVNode(\"span\", {\n          class: \"label\"\n        }, \"当前状态\", -1 /* CACHED */)), _createElementVNode(\"span\", _hoisted_64, _toDisplayString($setup.getStatusText($setup.currentDevice.status)), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_65, [_cache[53] || (_cache[53] = _createElementVNode(\"span\", {\n          class: \"label\"\n        }, \"安装位置\", -1 /* CACHED */)), _createElementVNode(\"span\", _hoisted_66, _toDisplayString($setup.currentDevice.location), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_67, [_cache[54] || (_cache[54] = _createElementVNode(\"span\", {\n          class: \"label\"\n        }, \"最近数据\", -1 /* CACHED */)), _createElementVNode(\"span\", _hoisted_68, _toDisplayString($setup.currentDevice.latestData), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_69, [_cache[55] || (_cache[55] = _createElementVNode(\"span\", {\n          class: \"label\"\n        }, \"最后更新\", -1 /* CACHED */)), _createElementVNode(\"span\", _hoisted_70, _toDisplayString($setup.currentDevice.lastUpdate), 1 /* TEXT */)])])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_tab_pane, {\n        label: \"历史数据\"\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_71, [_createVNode($setup[\"BaseEChart\"], {\n          options: $setup.historyChartOptions\n        }, null, 8 /* PROPS */, [\"options\"])])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_tab_pane, {\n        label: \"告警记录\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_table, {\n          data: $setup.deviceAlerts,\n          style: {\n            \"width\": \"100%\"\n          }\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_table_column, {\n            prop: \"time\",\n            label: \"时间\",\n            width: \"180\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"title\",\n            label: \"告警内容\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"level\",\n            label: \"级别\",\n            width: \"100\"\n          }, {\n            default: _withCtx(({\n              row\n            }) => [_createVNode(_component_el_tag, {\n              type: $setup.getAlertTagType(row.level)\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString(row.level), 1 /* TEXT */)]),\n              _: 2 /* DYNAMIC */\n            }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"type\"])]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_table_column, {\n            prop: \"status\",\n            label: \"状态\",\n            width: \"100\"\n          })]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"data\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"]), _createCommentVNode(\" 新增设备对话框 \"), _createVNode(_component_el_dialog, {\n    modelValue: $setup.showAddDeviceDialog,\n    \"onUpdate:modelValue\": _cache[24] || (_cache[24] = $event => $setup.showAddDeviceDialog = $event),\n    title: \"新增设备\",\n    width: \"50%\",\n    \"destroy-on-close\": \"\"\n  }, {\n    footer: _withCtx(() => [_createVNode(_component_el_button, {\n      onClick: _cache[23] || (_cache[23] = $event => $setup.showAddDeviceDialog = false)\n    }, {\n      default: _withCtx(() => _cache[56] || (_cache[56] = [_createTextVNode(\"取消\")])),\n      _: 1 /* STABLE */,\n      __: [56]\n    }), _createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: $setup.submitNewDevice\n    }, {\n      default: _withCtx(() => _cache[57] || (_cache[57] = [_createTextVNode(\"确定\")])),\n      _: 1 /* STABLE */,\n      __: [57]\n    })]),\n    default: _withCtx(() => [_createVNode(_component_el_form, {\n      ref: \"deviceForm\",\n      model: $setup.newDevice,\n      rules: $setup.deviceRules,\n      \"label-width\": \"100px\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        label: \"设备名称\",\n        prop: \"name\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.newDevice.name,\n          \"onUpdate:modelValue\": _cache[20] || (_cache[20] = $event => $setup.newDevice.name = $event),\n          placeholder: \"请输入设备名称\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"设备类型\",\n        prop: \"type\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_select, {\n          modelValue: $setup.newDevice.type,\n          \"onUpdate:modelValue\": _cache[21] || (_cache[21] = $event => $setup.newDevice.type = $event),\n          placeholder: \"请选择设备类型\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_option, {\n            label: \"温湿度传感器\",\n            value: \"温湿度\"\n          }), _createVNode(_component_el_option, {\n            label: \"PH值传感器\",\n            value: \"PH值\"\n          }), _createVNode(_component_el_option, {\n            label: \"视频监控\",\n            value: \"视频监控\"\n          }), _createVNode(_component_el_option, {\n            label: \"数据网关\",\n            value: \"数据网关\"\n          })]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"安装位置\",\n        prop: \"location\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.newDevice.location,\n          \"onUpdate:modelValue\": _cache[22] || (_cache[22] = $event => $setup.newDevice.location = $event),\n          placeholder: \"请输入安装位置\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","_Fragment","_renderList","$setup","deviceStats","stat","key","_createBlock","_component_el_tooltip","content","getStatTooltip","placement","_normalizeClass","_hoisted_3","_createVNode","_component_el_icon","_resolveDynamicComponent","getStatIcon","_hoisted_4","value","duration","_hoisted_5","_toDisplayString","getStatLabel","getTrendClass","getTrendIcon","getTrendText","_hoisted_6","_hoisted_7","_component_el_button_group","_component_el_button","type","onClick","showAddDevice","loading","active","viewMode","_cache","$event","refreshData","exportData","exporting","_hoisted_8","_component_el_input","searchQuery","placeholder","clearable","onInput","debouncedSearch","append","_withCtx","showAdvancedSearch","_component_el_select","filterStatus","onChange","debouncedFilter","statusOptions","option","_component_el_option","_mergeProps","_hoisted_9","label","filterType","typeOptions","_hoisted_10","getDeviceIcon","_component_el_dialog","showAdvancedSearchDialog","title","width","footer","resetAdvancedSearch","applyAdvancedSearch","_component_el_form","ref","model","advancedSearch","_component_el_form_item","name","status","location","_component_el_date_picker","updateTime","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_component_el_scrollbar","height","_hoisted_15","filteredDeviceList","device","_hoisted_16","_hoisted_17","_hoisted_18","getStatusText","_hoisted_19","_hoisted_20","_hoisted_21","_component_el_tag","getDeviceTagType","size","_hoisted_22","_hoisted_23","lastUpdate","latestData","_hoisted_24","viewDetail","configDevice","deleteDevice","_component_el_table","data","style","background","color","_component_el_table_column","prop","default","row","_hoisted_25","_hoisted_26","fixed","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","selectedDevice","updatePredictionData","deviceList","predictionTimeRange","timeRangeOptions","_hoisted_33","_hoisted_34","options","predictionChartOptions","_hoisted_35","predictionConfig","_component_el_switch","enableAutoUpdate","_component_el_input_number","updateInterval","min","max","disabled","confidenceInterval","showConfidenceBounds","_hoisted_36","_component_el_row","gutter","_component_el_col","span","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","_hoisted_45","chartOptions","_hoisted_46","_hoisted_47","alerts","length","_hoisted_48","alert","id","level","unread","handleAlert","_hoisted_50","_hoisted_51","_hoisted_52","_hoisted_53","_hoisted_54","_hoisted_55","time","_hoisted_56","link","_hoisted_57","showDetail","currentDevice","_component_el_tabs","_component_el_tab_pane","_hoisted_58","_hoisted_59","_hoisted_60","_hoisted_61","_hoisted_62","_hoisted_63","_hoisted_64","_hoisted_65","_hoisted_66","_hoisted_67","_hoisted_68","_hoisted_69","_hoisted_70","_hoisted_71","historyChartOptions","deviceAlerts","getAlertTagType","showAddDeviceDialog","submitNewDevice","newDevice","rules","deviceRules"],"sources":["D:\\restore\\water-melt\\frontend\\src\\views\\Monitoring.vue"],"sourcesContent":["<!-- Monitoring.vue -->\n<template>\n  <div class=\"monitoring-view\">\n    <!-- 顶部统计卡片 -->\n    <div class=\"stats-section\">\n      <el-tooltip\n        v-for=\"(stat, key) in deviceStats\"\n        :key=\"key\"\n        :content=\"getStatTooltip(key)\"\n        placement=\"top\"\n      >\n        <div :class=\"['stat-card', key]\">\n          <div class=\"stat-icon\">\n            <el-icon><component :is=\"getStatIcon(key)\" /></el-icon>\n          </div>\n          <div class=\"stat-content\">\n            <animated-number \n              :value=\"stat\" \n              :duration=\"1000\"\n              class=\"stat-value\"\n            />\n            <div class=\"stat-label\">{{ getStatLabel(key) }}</div>\n          </div>\n          <div :class=\"['stat-trend', getTrendClass(key)]\">\n            <el-icon><component :is=\"getTrendIcon(key)\" /></el-icon>\n            <span>{{ getTrendText(key) }}</span>\n          </div>\n        </div>\n      </el-tooltip>\n    </div>\n\n    <!-- 设备列表工具栏 -->\n    <div class=\"toolbar\">\n      <div class=\"toolbar-left\">\n        <el-button-group>\n          <el-button \n            type=\"primary\" \n            @click=\"showAddDevice\"\n            :loading=\"loading\"\n          >\n            <el-icon><Plus /></el-icon>新增设备\n          </el-button>\n          <el-button \n            :class=\"{ active: viewMode === 'grid' }\" \n            @click=\"viewMode = 'grid'\"\n          >\n            <el-icon><Grid /></el-icon>\n          </el-button>\n          <el-button \n            :class=\"{ active: viewMode === 'table' }\" \n            @click=\"viewMode = 'table'\"\n          >\n            <el-icon><List /></el-icon>\n          </el-button>\n        </el-button-group>\n        \n        <el-button-group class=\"view-options\">\n          <el-tooltip content=\"刷新数据\" placement=\"top\">\n            <el-button @click=\"refreshData\" :loading=\"loading\">\n              <el-icon><Refresh /></el-icon>\n            </el-button>\n          </el-tooltip>\n          <el-tooltip content=\"导出数据\" placement=\"top\">\n            <el-button @click=\"exportData\" :loading=\"exporting\">\n              <el-icon><Download /></el-icon>\n            </el-button>\n          </el-tooltip>\n        </el-button-group>\n      </div>\n      \n      <div class=\"toolbar-right\">\n        <el-input\n          v-model=\"searchQuery\"\n          placeholder=\"搜索设备...\"\n          prefix-icon=\"Search\"\n          clearable\n          @input=\"debouncedSearch\"\n        >\n          <template #append>\n            <el-button @click=\"showAdvancedSearch\">\n              <el-icon><Setting /></el-icon>\n            </el-button>\n          </template>\n        </el-input>\n        \n        <el-select\n          v-model=\"filterStatus\"\n          placeholder=\"状态筛选\"\n          clearable\n          @change=\"debouncedFilter\"\n        >\n          <el-option\n            v-for=\"option in statusOptions\"\n            :key=\"option.value\"\n            v-bind=\"option\"\n          >\n            <div class=\"select-option\">\n              <span class=\"status-dot\" :class=\"option.value\"></span>\n              {{ option.label }}\n            </div>\n          </el-option>\n        </el-select>\n        \n        <el-select\n          v-model=\"filterType\"\n          placeholder=\"类型筛选\"\n          clearable\n          @change=\"debouncedFilter\"\n        >\n          <el-option\n            v-for=\"option in typeOptions\"\n            :key=\"option.value\"\n            v-bind=\"option\"\n          >\n            <div class=\"select-option\">\n              <el-icon :class=\"getDeviceIcon(option.value)\"></el-icon>\n              {{ option.label }}\n            </div>\n          </el-option>\n        </el-select>\n      </div>\n    </div>\n\n    <!-- 高级搜索对话框 -->\n    <el-dialog\n      v-model=\"showAdvancedSearchDialog\"\n      title=\"高级搜索\"\n      width=\"500px\"\n      destroy-on-close\n    >\n      <el-form\n        ref=\"searchForm\"\n        :model=\"advancedSearch\"\n        label-width=\"100px\"\n      >\n        <el-form-item label=\"设备名称\">\n          <el-input v-model=\"advancedSearch.name\" placeholder=\"支持模糊搜索\" />\n        </el-form-item>\n        <el-form-item label=\"设备类型\">\n          <el-select v-model=\"advancedSearch.type\" placeholder=\"请选择\" clearable>\n            <el-option\n              v-for=\"option in typeOptions\"\n              :key=\"option.value\"\n              v-bind=\"option\"\n            />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"设备状态\">\n          <el-select v-model=\"advancedSearch.status\" placeholder=\"请选择\" clearable>\n            <el-option\n              v-for=\"option in statusOptions\"\n              :key=\"option.value\"\n              v-bind=\"option\"\n            />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"安装位置\">\n          <el-input v-model=\"advancedSearch.location\" placeholder=\"支持模糊搜索\" />\n        </el-form-item>\n        <el-form-item label=\"更新时间\">\n          <el-date-picker\n            v-model=\"advancedSearch.updateTime\"\n            type=\"daterange\"\n            range-separator=\"至\"\n            start-placeholder=\"开始日期\"\n            end-placeholder=\"结束日期\"\n          />\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <el-button @click=\"showAdvancedSearchDialog = false\">取消</el-button>\n        <el-button @click=\"resetAdvancedSearch\">重置</el-button>\n        <el-button type=\"primary\" @click=\"applyAdvancedSearch\">确定</el-button>\n      </template>\n    </el-dialog>\n\n    <!-- 主要内容区域 -->\n    <div class=\"main-content\">\n      <!-- 左侧：设备列表和状态 -->\n      <div class=\"content-main\">\n        <div class=\"panel device-list-panel\">\n          <div class=\"panel-header\">\n            <div class=\"header-left\">\n              <h3>设备管理</h3>\n            </div>\n            <div class=\"header-right\">\n            </div>\n          </div>\n\n          <!-- 网格视图 -->\n          <div v-if=\"viewMode === 'grid'\" class=\"device-grid\">\n            <el-scrollbar height=\"100%\">\n              <div class=\"virtual-list-container\">\n                <div v-for=\"device in filteredDeviceList\" \n                     :key=\"device.name\" \n                     class=\"device-card\"\n                     :class=\"device.status\">\n                  <div class=\"device-card-header\">\n                    <div class=\"device-icon\">\n                      <el-icon :class=\"getDeviceIcon(device.type)\"><Monitor /></el-icon>\n                    </div>\n                    <div class=\"device-status\">\n                      <span class=\"status-dot\"></span>\n                      {{ getStatusText(device.status) }}\n                    </div>\n                  </div>\n                  <div class=\"device-card-content\">\n                    <div class=\"device-name\">{{ device.name }}</div>\n                    <div class=\"device-type\">\n                      <el-tag :type=\"getDeviceTagType(device.type)\" size=\"small\">{{ device.type }}</el-tag>\n                    </div>\n                    <div class=\"device-location\">{{ device.location }}</div>\n                    <div class=\"device-data\">\n                      <el-tooltip \n                        :content=\"device.lastUpdate\" \n                        placement=\"top\"\n                      >\n                        <span>{{ device.latestData }}</span>\n                      </el-tooltip>\n                    </div>\n                  </div>\n                  <div class=\"device-card-footer\">\n                    <el-button-group>\n                      <el-button size=\"small\" @click=\"viewDetail(device)\">\n                        <el-icon><View /></el-icon>\n                        详情\n                      </el-button>\n                      <el-button size=\"small\" type=\"primary\" @click=\"configDevice(device)\">\n                        <el-icon><Setting /></el-icon>\n                        配置\n                      </el-button>\n                      <el-button size=\"small\" type=\"danger\" @click=\"deleteDevice(device)\">\n                        <el-icon><Delete /></el-icon>\n                        删除\n                      </el-button>\n                    </el-button-group>\n                  </div>\n                </div>\n              </div>\n            </el-scrollbar>\n          </div>\n\n          <!-- 表格视图 -->\n          <el-scrollbar v-else height=\"100%\">\n            <el-table \n              :data=\"filteredDeviceList\" \n              style=\"width: 100%\"\n              :header-cell-style=\"{ background: '#1a1a1a', color: '#fff' }\"\n              v-loading=\"loading\"\n              height=\"100%\"\n              :virtual-scrolling=\"true\"\n              :row-height=\"54\"\n            >\n              <el-table-column prop=\"name\" label=\"设备名称\" min-width=\"200\">\n                <template #default=\"{ row }\">\n                  <div class=\"device-name\">\n                    <el-icon :class=\"getDeviceIcon(row.type)\"><Monitor /></el-icon>\n                    <span>{{ row.name }}</span>\n                  </div>\n                </template>\n              </el-table-column>\n              <el-table-column prop=\"type\" label=\"类型\" width=\"120\">\n                <template #default=\"{ row }\">\n                  <el-tag :type=\"getDeviceTagType(row.type)\">{{ row.type }}</el-tag>\n                </template>\n              </el-table-column>\n              <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\n                <template #default=\"{ row }\">\n                  <div class=\"status-indicator\" :class=\"row.status\">\n                    <span class=\"status-dot\"></span>\n                    {{ getStatusText(row.status) }}\n                  </div>\n                </template>\n              </el-table-column>\n              <el-table-column prop=\"location\" label=\"位置\" width=\"120\" />\n              <el-table-column label=\"最近数据\" min-width=\"180\">\n                <template #default=\"{ row }\">\n                  <div class=\"latest-data\">\n                    <el-tooltip \n                      :content=\"row.lastUpdate\" \n                      placement=\"top\"\n                    >\n                      <span>{{ row.latestData }}</span>\n                    </el-tooltip>\n                  </div>\n                </template>\n              </el-table-column>\n              <el-table-column label=\"操作\" width=\"200\" fixed=\"right\">\n                <template #default=\"{ row }\">\n                  <el-button-group>\n                    <el-button size=\"small\" @click=\"viewDetail(row)\">\n                      <el-icon><View /></el-icon>\n                    </el-button>\n                    <el-button size=\"small\" type=\"primary\" @click=\"configDevice(row)\">\n                      <el-icon><Setting /></el-icon>\n                    </el-button>\n                    <el-button size=\"small\" type=\"danger\" @click=\"deleteDevice(row)\">\n                      <el-icon><Delete /></el-icon>\n                    </el-button>\n                  </el-button-group>\n                </template>\n              </el-table-column>\n            </el-table>\n          </el-scrollbar>\n        </div>\n        \n        <!-- 图片时间轴面板 -->\n        <div class=\"panel timeline-panel\">\n          <div class=\"panel-header\">\n            <div class=\"header-left\">\n              <h3>图片时间轴</h3>\n            </div>\n          </div>\n          <div class=\"timeline-content\">\n            <PhotoTimeline />\n          </div>\n        </div>\n      </div>\n\n      <!-- 右侧：实时数据和告警 -->\n      <div class=\"content-side\">\n        <!-- 智能预测面板 -->\n        <div class=\"side-panel prediction-panel\">\n          <div class=\"panel-header\">\n            <h3>智能预测</h3>\n            <div class=\"panel-actions\">\n              <el-select \n                v-model=\"selectedDevice\" \n                size=\"small\" \n                placeholder=\"选择设备\"\n                @change=\"updatePredictionData\"\n              >\n                <el-option \n                  v-for=\"device in deviceList\" \n                  :key=\"device.name\" \n                  :label=\"device.name\" \n                  :value=\"device.name\"\n                />\n              </el-select>\n              <el-select \n                v-model=\"predictionTimeRange\" \n                size=\"small\" \n                placeholder=\"预测时间范围\"\n                @change=\"updatePredictionData\"\n              >\n                <el-option \n                  v-for=\"option in timeRangeOptions\" \n                  :key=\"option.value\" \n                  v-bind=\"option\"\n                />\n              </el-select>\n            </div>\n          </div>\n          \n          <div class=\"prediction-content\">\n            <div class=\"prediction-chart\">\n              <base-e-chart :options=\"predictionChartOptions\" />\n            </div>\n            \n            <div class=\"prediction-settings\">\n              <el-form :model=\"predictionConfig\" label-width=\"120px\" size=\"small\">\n                <el-form-item label=\"自动更新\">\n                  <el-switch v-model=\"predictionConfig.enableAutoUpdate\" />\n                </el-form-item>\n                <el-form-item label=\"更新间隔(分钟)\">\n                  <el-input-number \n                    v-model=\"predictionConfig.updateInterval\"\n                    :min=\"1\"\n                    :max=\"60\"\n                    :disabled=\"!predictionConfig.enableAutoUpdate\"\n                  />\n                </el-form-item>\n                <el-form-item label=\"置信区间\">\n                  <el-select v-model=\"predictionConfig.confidenceInterval\">\n                    <el-option label=\"90%\" value=\"0.90\" />\n                    <el-option label=\"95%\" value=\"0.95\" />\n                    <el-option label=\"99%\" value=\"0.99\" />\n                  </el-select>\n                </el-form-item>\n                <el-form-item label=\"显示置信区间\">\n                  <el-switch v-model=\"predictionConfig.showConfidenceBounds\" />\n                </el-form-item>\n              </el-form>\n            </div>\n            \n            <div class=\"prediction-metrics\">\n              <el-row :gutter=\"20\">\n                <el-col :span=\"8\">\n                  <div class=\"metric-card\">\n                    <div class=\"metric-label\">预测准确率</div>\n                    <div class=\"metric-value\">95.8%</div>\n                    <div class=\"metric-trend positive\">\n                      <el-icon><ArrowUp /></el-icon>\n                      <span>2.3%</span>\n                    </div>\n                  </div>\n                </el-col>\n                <el-col :span=\"8\">\n                  <div class=\"metric-card\">\n                    <div class=\"metric-label\">预警提前量</div>\n                    <div class=\"metric-value\">30min</div>\n                    <div class=\"metric-trend positive\">\n                      <el-icon><ArrowUp /></el-icon>\n                      <span>5min</span>\n                    </div>\n                  </div>\n                </el-col>\n                <el-col :span=\"8\">\n                  <div class=\"metric-card\">\n                    <div class=\"metric-label\">误报率</div>\n                    <div class=\"metric-value\">2.1%</div>\n                    <div class=\"metric-trend negative\">\n                      <el-icon><ArrowDown /></el-icon>\n                      <span>0.5%</span>\n                    </div>\n                  </div>\n                </el-col>\n              </el-row>\n            </div>\n          </div>\n        </div>\n\n        <!-- 实时数据图表 -->\n        <div class=\"side-panel\">\n          <div class=\"panel-header\">\n            <h3>实时数据</h3>\n            <el-select v-model=\"selectedDevice\" size=\"small\" placeholder=\"选择设备\">\n              <el-option \n                v-for=\"device in deviceList\" \n                :key=\"device.name\" \n                :label=\"device.name\" \n                :value=\"device.name\"\n              />\n            </el-select>\n          </div>\n          <div class=\"chart-container\">\n            <base-e-chart :options=\"chartOptions\" />\n          </div>\n        </div>\n\n        <!-- 最近告警 -->\n        <div class=\"side-panel\">\n          <div class=\"panel-header\">\n            <h3>最近告警</h3>\n            <el-tag size=\"small\" type=\"danger\">{{ alerts.length }} 个未处理</el-tag>\n          </div>\n          <div class=\"alert-list\">\n            <div v-for=\"alert in alerts\" \n                 :key=\"alert.id\" \n                 class=\"alert-item\"\n                 :class=\"[alert.level, { unread: alert.unread }]\"\n                 @click=\"handleAlert(alert)\">\n              <div class=\"alert-icon\">\n                <el-icon><Warning /></el-icon>\n              </div>\n              <div class=\"alert-content\">\n                <div class=\"alert-title\">{{ alert.title }}</div>\n                <div class=\"alert-info\">\n                  <span class=\"alert-device\">{{ alert.device }}</span>\n                  <span class=\"alert-time\">{{ alert.time }}</span>\n                </div>\n              </div>\n              <div class=\"alert-action\">\n                <el-button size=\"small\" type=\"primary\" link>处理</el-button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- 动态照片播放 -->\n        <div class=\"side-panel\">\n          <div class=\"panel-header\">\n            <h3>智能检测照片</h3>\n          </div>\n          <photo-timeline />\n        </div>\n      </div>\n    </div>\n\n    <!-- 设备详情对话框 -->\n    <el-dialog \n      v-model=\"showDetail\" \n      title=\"设备详情\" \n      width=\"60%\"\n      destroy-on-close\n    >\n      <el-tabs v-if=\"currentDevice\">\n        <el-tab-pane label=\"基本信息\">\n          <div class=\"device-info\">\n            <div class=\"info-item\">\n              <span class=\"label\">设备名称</span>\n              <span class=\"value\">{{ currentDevice.name }}</span>\n            </div>\n            <div class=\"info-item\">\n              <span class=\"label\">设备类型</span>\n              <span class=\"value\">{{ currentDevice.type }}</span>\n            </div>\n            <div class=\"info-item\">\n              <span class=\"label\">当前状态</span>\n              <span class=\"value\">{{ getStatusText(currentDevice.status) }}</span>\n            </div>\n            <div class=\"info-item\">\n              <span class=\"label\">安装位置</span>\n              <span class=\"value\">{{ currentDevice.location }}</span>\n            </div>\n            <div class=\"info-item\">\n              <span class=\"label\">最近数据</span>\n              <span class=\"value\">{{ currentDevice.latestData }}</span>\n            </div>\n            <div class=\"info-item\">\n              <span class=\"label\">最后更新</span>\n              <span class=\"value\">{{ currentDevice.lastUpdate }}</span>\n            </div>\n          </div>\n        </el-tab-pane>\n        <el-tab-pane label=\"历史数据\">\n          <div class=\"history-data\">\n            <base-e-chart :options=\"historyChartOptions\" />\n          </div>\n        </el-tab-pane>\n        <el-tab-pane label=\"告警记录\">\n          <el-table :data=\"deviceAlerts\" style=\"width: 100%\">\n            <el-table-column prop=\"time\" label=\"时间\" width=\"180\" />\n            <el-table-column prop=\"title\" label=\"告警内容\" />\n            <el-table-column prop=\"level\" label=\"级别\" width=\"100\">\n              <template #default=\"{ row }\">\n                <el-tag :type=\"getAlertTagType(row.level)\">{{ row.level }}</el-tag>\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"status\" label=\"状态\" width=\"100\" />\n          </el-table>\n        </el-tab-pane>\n      </el-tabs>\n    </el-dialog>\n\n    <!-- 新增设备对话框 -->\n    <el-dialog \n      v-model=\"showAddDeviceDialog\" \n      title=\"新增设备\" \n      width=\"50%\"\n      destroy-on-close\n    >\n      <el-form \n        ref=\"deviceForm\"\n        :model=\"newDevice\"\n        :rules=\"deviceRules\"\n        label-width=\"100px\"\n      >\n        <el-form-item label=\"设备名称\" prop=\"name\">\n          <el-input v-model=\"newDevice.name\" placeholder=\"请输入设备名称\" />\n        </el-form-item>\n        <el-form-item label=\"设备类型\" prop=\"type\">\n          <el-select v-model=\"newDevice.type\" placeholder=\"请选择设备类型\">\n            <el-option label=\"温湿度传感器\" value=\"温湿度\" />\n            <el-option label=\"PH值传感器\" value=\"PH值\" />\n            <el-option label=\"视频监控\" value=\"视频监控\" />\n            <el-option label=\"数据网关\" value=\"数据网关\" />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"安装位置\" prop=\"location\">\n          <el-input v-model=\"newDevice.location\" placeholder=\"请输入安装位置\" />\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <el-button @click=\"showAddDeviceDialog = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"submitNewDevice\">确定</el-button>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, onUnmounted, onActivated, onDeactivated, nextTick, watch } from 'vue'\nimport { useStore } from 'vuex'\nimport { debounce } from 'lodash-es'\nimport cache from '@/utils/cache'\nimport BaseEChart from '@/components/BaseEChart.vue'\nimport PhotoTimeline from '@/components/PhotoTimeline.vue'\nimport { \n  Monitor, Connection, Warning, InfoFilled, Cpu, \n  ArrowUp, ArrowDown, Plus, View, Setting, Delete, Search,\n  Grid, List, Refresh, Download, Timer, Location\n} from '@element-plus/icons-vue'\nimport { ElMessage, ElMessageBox } from 'element-plus'\nimport AnimatedNumber from '@/components/AnimatedNumber.vue'\nimport { exportToExcel } from '@/utils/excel'\nimport BaseMap from '@/components/BaseMap.vue'\nimport { formatTime, formatNumber } from '@/utils/format'\n\n// chart update timer placeholder\nlet chartUpdateTimer = null\n\n// WebSocket连接\nconst ws = ref(null)\nconst wsReconnectTimer = ref(null)\nconst wsReconnectAttempts = ref(0)\nconst MAX_RECONNECT_ATTEMPTS = 5\n\n// 状态管理\nconst store = useStore()\n\n// 加载状态\nconst loading = ref(false)\n\n// 缓存设备数据\nconst DEVICE_CACHE_KEY = 'monitoring_devices'\nconst DEVICE_CACHE_EXPIRY = 5 * 60 * 1000 // 5分钟\n\n// 防抖的搜索和筛选\nconst debouncedSearch = debounce((query) => {\n  searchQuery.value = query\n}, 300)\n\nconst debouncedFilter = debounce((status, type) => {\n  filterStatus.value = status\n  filterType.value = type\n}, 300)\n\n// 初始化WebSocket连接\nconst initWebSocket = () => {\n  if (ws.value) return\n\n  ws.value = new WebSocket(process.env.VUE_APP_WS_URL || 'ws://localhost:8080/api/ws/monitoring')\n  \n  ws.value.onopen = () => {\n    console.log('WebSocket connected')\n    wsReconnectAttempts.value = 0\n  }\n\n  ws.value.onmessage = (event) => {\n    const data = JSON.parse(event.data)\n    handleWebSocketMessage(data)\n  }\n\n  ws.value.onclose = () => {\n    console.log('WebSocket disconnected')\n    ws.value = null\n    handleWebSocketReconnect()\n  }\n\n  ws.value.onerror = (error) => {\n    console.error('WebSocket error:', error)\n    ws.value?.close()\n  }\n}\n\n// 处理WebSocket重连\nconst handleWebSocketReconnect = () => {\n  if (wsReconnectAttempts.value >= MAX_RECONNECT_ATTEMPTS) {\n    ElMessage.error('连接服务器失败，请刷新页面重试')\n    return\n  }\n\n  if (wsReconnectTimer.value) {\n    clearTimeout(wsReconnectTimer.value)\n  }\n\n  wsReconnectTimer.value = setTimeout(() => {\n    wsReconnectAttempts.value++\n    initWebSocket()\n  }, 3000 * Math.min(wsReconnectAttempts.value + 1, 5))\n}\n\n// 处理WebSocket消息\nconst handleWebSocketMessage = (data) => {\n  switch (data.type) {\n    case 'deviceUpdate':\n      updateDeviceData(data.payload)\n      break\n    case 'alert':\n      handleNewAlert(data.payload)\n      break\n    case 'stats':\n      updateDeviceStats(data.payload)\n      break\n  }\n}\n\n// 更新设备数据\nconst updateDeviceData = async (deviceData) => {\n  const index = deviceList.value.findIndex(d => d.name === deviceData.name)\n  if (index !== -1) {\n    deviceList.value[index] = { ...deviceList.value[index], ...deviceData }\n    // 更新缓存\n    await cache.set(DEVICE_CACHE_KEY, deviceList.value, DEVICE_CACHE_EXPIRY)\n  }\n}\n\n// 处理新告警\nconst handleNewAlert = (alert) => {\n  alerts.value.unshift({\n    ...alert,\n    unread: true\n  })\n  \n  // 限制告警列表长度\n  if (alerts.value.length > 50) {\n    alerts.value = alerts.value.slice(0, 50)\n  }\n\n  // 显示告警通知\n  ElMessage({\n    type: alert.level === 'error' ? 'error' : alert.level === 'warning' ? 'warning' : 'info',\n    message: `${alert.device}: ${alert.title}`,\n    duration: 5000\n  })\n}\n\n// 更新设备统计数据\nconst updateDeviceStats = (stats) => {\n  deviceStats.value = stats\n}\n\n// 初始化数据\nconst initData = async () => {\n  loading.value = true\n  try {\n    // 尝试从缓存获取数据\n    const cachedData = await cache.get(DEVICE_CACHE_KEY)\n    if (cachedData) {\n      deviceList.value = cachedData\n      loading.value = false\n      return\n    }\n\n    // 如果没有缓存，从服务器获取\n    const response = await store.dispatch('device/fetchDevices')\n    deviceList.value = response\n    \n    // 更新缓存\n    await cache.set(DEVICE_CACHE_KEY, response, DEVICE_CACHE_EXPIRY)\n  } catch (error) {\n    ElMessage.error('获取设备数据失败')\n    console.error('Failed to fetch devices:', error)\n  } finally {\n    loading.value = false\n  }\n}\n\n// 预测相关数据\nconst predictionData = ref({\n  temperature: [],\n  humidity: [],\n  ph: []\n})\n\n// 预测时间范围\nconst predictionTimeRange = ref('24h')\nconst timeRangeOptions = [\n  { label: '24小时', value: '24h' },\n  { label: '48小时', value: '48h' },\n  { label: '7天', value: '7d' }\n]\n\n// 预测配置\nconst predictionConfig = ref({\n  enableAutoUpdate: true,\n  updateInterval: 30, // 分钟\n  confidenceInterval: 0.95,\n  showConfidenceBounds: true\n})\n\n// 预测图表配置\nconst predictionChartOptions = computed(() => {\n  return {\n    title: {\n      text: '智能预测分析',\n      left: 'center',\n      textStyle: {\n        color: '#fff'\n      }\n    },\n    tooltip: {\n      trigger: 'axis',\n      axisPointer: {\n        type: 'cross'\n      }\n    },\n    legend: {\n      data: ['实际值', '预测值', '置信区间'],\n      bottom: 0,\n      textStyle: {\n        color: '#fff'\n      }\n    },\n    grid: {\n      left: '3%',\n      right: '4%',\n      bottom: '15%',\n      top: '15%',\n      containLabel: true\n    },\n    xAxis: {\n      type: 'time',\n      boundaryGap: false,\n      axisLine: {\n        lineStyle: {\n          color: '#fff'\n        }\n      }\n    },\n    yAxis: {\n      type: 'value',\n      axisLine: {\n        lineStyle: {\n          color: '#fff'\n        }\n      },\n      splitLine: {\n        lineStyle: {\n          color: 'rgba(255,255,255,0.1)'\n        }\n      }\n    },\n    series: [\n      {\n        name: '实际值',\n        type: 'line',\n        data: generateTimeData(25, 2),\n        itemStyle: {\n          color: '#1890ff'\n        }\n      },\n      {\n        name: '预测值',\n        type: 'line',\n        data: generatePredictionData(25, 2),\n        lineStyle: {\n          type: 'dashed'\n        },\n        itemStyle: {\n          color: '#52c41a'\n        }\n      },\n      {\n        name: '置信区间',\n        type: 'line',\n        data: generateConfidenceBounds(25, 2),\n        lineStyle: {\n          color: 'rgba(82, 196, 26, 0.2)'\n        },\n        areaStyle: {\n          color: 'rgba(82, 196, 26, 0.1)'\n        }\n      }\n    ]\n  }\n})\n\n// 生成预测数据\nfunction generatePredictionData(baseValue, variance) {\n  const now = new Date()\n  const data = []\n  for (let i = 0; i < 24; i++) {\n    const time = new Date(now.getTime() + i * 3600000)\n    const value = baseValue + Math.sin(i / 12 * Math.PI) * variance\n    data.push([\n      time.toISOString(),\n      +value.toFixed(1)\n    ])\n  }\n  return data\n}\n\n// 生成置信区间\nfunction generateConfidenceBounds(baseValue, variance) {\n  const now = new Date()\n  const data = []\n  const confidenceMultiplier = 1.96 // 95% 置信区间\n  \n  for (let i = 0; i < 24; i++) {\n    const time = new Date(now.getTime() + i * 3600000)\n    const prediction = baseValue + Math.sin(i / 12 * Math.PI) * variance\n    const uncertainty = Math.abs(Math.sin(i / 12 * Math.PI)) * variance * 0.5\n    \n    data.push([\n      time.toISOString(),\n      +(prediction - uncertainty * confidenceMultiplier).toFixed(1),\n      +(prediction + uncertainty * confidenceMultiplier).toFixed(1)\n    ])\n  }\n  return data\n}\n\n// 更新预测数据\nconst updatePredictionData = async () => {\n  try {\n    // TODO: 从后端获取预测数据\n    const response = await store.dispatch('device/fetchPredictions', {\n      timeRange: predictionTimeRange.value,\n      deviceId: selectedDevice.value\n    })\n    \n    predictionData.value = response\n  } catch (error) {\n    console.error('Failed to fetch prediction data:', error)\n    ElMessage.error('获取预测数据失败')\n  }\n}\n\n// 自动更新预测数据\nlet predictionUpdateTimer = null\n\nconst startPredictionUpdate = () => {\n  if (predictionConfig.value.enableAutoUpdate) {\n    predictionUpdateTimer = setInterval(() => {\n      updatePredictionData()\n    }, predictionConfig.value.updateInterval * 60 * 1000)\n  }\n}\n\nconst stopPredictionUpdate = () => {\n  if (predictionUpdateTimer) {\n    clearInterval(predictionUpdateTimer)\n    predictionUpdateTimer = null\n  }\n}\n\n// 监听配置变化\nwatch(() => predictionConfig.value.enableAutoUpdate, (newValue) => {\n  if (newValue) {\n    startPredictionUpdate()\n  } else {\n    stopPredictionUpdate()\n  }\n})\n\nwatch(() => predictionConfig.value.updateInterval, () => {\n  if (predictionConfig.value.enableAutoUpdate) {\n    stopPredictionUpdate()\n    startPredictionUpdate()\n  }\n})\n\n// 视图模式\nconst viewMode = ref('grid')\n\n// 自动刷新\nconst autoRefresh = ref(true)\nconst refreshInterval = ref(30) // 秒\nlet refreshTimer = null\n\n// 设备数据结构\nconst deviceList = ref([\n  { \n    name: '传感器A', \n    type: '温湿度', \n    status: 'online', \n    location: '田块1',\n    lastUpdate: '2024-03-15 14:30:00',\n    metrics: {\n      temperature: 25.5,\n      humidity: 65.2,\n      battery: 85\n    }\n  },\n  { \n    name: '摄像头B', \n    type: '视频监控', \n    status: 'offline', \n    location: '田块2',\n    lastUpdate: '2024-03-15 10:15:00',\n    metrics: {\n      resolution: '1080p',\n      framerate: 30,\n      battery: 45\n    }\n  },\n  { \n    name: '网关C', \n    type: '数据网关', \n    status: 'online', \n    location: '田块3',\n    lastUpdate: '2024-03-15 14:35:00',\n    metrics: {\n      throughput: 2.5,\n      latency: 50,\n      connections: 12\n    }\n  },\n  { \n    name: '传感器D', \n    type: 'PH值', \n    status: 'error', \n    location: '田块4',\n    lastUpdate: '2024-03-15 14:20:00',\n    metrics: {\n      ph: 8.5,\n      temperature: 26.8,\n      battery: 30\n    }\n  },\n  // 添加更多测试数据\n  ...Array.from({ length: 20 }, (_, i) => ({\n    name: `传感器${String.fromCharCode(69 + i)}`,\n    type: ['温湿度', 'PH值', '视频监控', '数据网关'][i % 4],\n    status: ['online', 'offline', 'error'][i % 3],\n    location: `田块${i + 5}`,\n    lastUpdate: '2024-03-15 14:30:00',\n    metrics: {\n      temperature: 20 + Math.random() * 10,\n      humidity: 50 + Math.random() * 30,\n      battery: 30 + Math.random() * 70,\n      ph: 6 + Math.random() * 2,\n      throughput: 1 + Math.random() * 4,\n      latency: 20 + Math.random() * 80,\n      connections: Math.floor(5 + Math.random() * 20),\n      resolution: ['720p', '1080p', '4K'][i % 3],\n      framerate: [24, 30, 60][i % 3]\n    }\n  }))\n])\n\n// 设备配置\nconst showConfig = ref(false)\nconst configForm = ref(null)\nconst deviceConfig = ref({\n  sampleRate: 60,\n  thresholds: {\n    temperature: { min: 20, max: 30 },\n    humidity: { min: 40, max: 80 },\n    ph: { min: 6.5, max: 7.5 }\n  },\n  autoCalibration: true,\n  storage: 'local'\n})\n\nconst configRules = {\n  sampleRate: [\n    { required: true, message: '请输入采集频率', trigger: 'blur' },\n    { type: 'number', min: 1, max: 3600, message: '频率范围1-3600秒', trigger: 'blur' }\n  ]\n}\n\n// 历史数据\nconst historyDateRange = ref([])\nconst selectedMetrics = ref([])\nconst availableMetrics = [\n  { label: '温度', value: 'temperature' },\n  { label: '湿度', value: 'humidity' },\n  { label: 'PH值', value: 'ph' },\n  { label: '电量', value: 'battery' }\n]\n\nconst dateShortcuts = [\n  {\n    text: '最近一天',\n    value: () => {\n      const end = new Date()\n      const start = new Date()\n      start.setTime(start.getTime() - 3600 * 1000 * 24)\n      return [start, end]\n    }\n  },\n  {\n    text: '最近一周',\n    value: () => {\n      const end = new Date()\n      const start = new Date()\n      start.setTime(start.getTime() - 3600 * 1000 * 24 * 7)\n      return [start, end]\n    }\n  }\n]\n\n// 计算属性\nconst currentDevice = computed(() => {\n  return deviceList.value.find(d => d.name === selectedDevice.value)\n})\n\nconst unreadAlerts = computed(() => {\n  return alerts.value.filter(a => a.unread)\n})\n\n// 方法\nconst selectDevice = (device) => {\n  selectedDevice.value = device.name\n  updateDeviceCharts()\n}\n\nconst toggleAutoRefresh = (value) => {\n  if (value) {\n    startAutoRefresh()\n  } else {\n    stopAutoRefresh()\n  }\n}\n\nconst startAutoRefresh = () => {\n  if (refreshTimer) {\n    clearInterval(refreshTimer)\n  }\n  refreshTimer = setInterval(() => {\n    refreshData()\n  }, refreshInterval.value * 1000)\n}\n\nconst stopAutoRefresh = () => {\n  if (refreshTimer) {\n    clearInterval(refreshTimer)\n    refreshTimer = null\n  }\n}\n\nconst refreshData = async () => {\n  loading.value = true\n  try {\n    await updateDeviceData()\n    if (selectedDevice.value) {\n      updateDeviceCharts()\n    }\n  } catch (error) {\n    console.error('Failed to refresh data:', error)\n    ElMessage.error('刷新数据失败')\n  } finally {\n    loading.value = false\n  }\n}\n\nconst getMetricLabel = (key) => {\n  const labels = {\n    temperature: '温度',\n    humidity: '湿度',\n    ph: 'PH值',\n    battery: '电量',\n    throughput: '流量',\n    latency: '延迟',\n    connections: '连接数',\n    framerate: '帧率',\n    resolution: '分辨率'\n  }\n  return labels[key] || key\n}\n\nconst getMetricUnit = (key) => {\n  const units = {\n    temperature: '°C',\n    humidity: '%',\n    ph: '',\n    battery: '%',\n    throughput: 'MB/s',\n    latency: 'ms',\n    connections: '',\n    framerate: 'fps',\n    resolution: ''\n  }\n  return units[key] || ''\n}\n\nconst formatMetricValue = (value, key) => {\n  if (typeof value === 'number') {\n    return `${formatNumber(value)}${getMetricUnit(key)}`\n  }\n  return value\n}\n\nconst getMetricStatus = (value, key) => {\n  const thresholds = deviceConfig.value.thresholds[key]\n  if (!thresholds) return { type: '', effect: 'plain', text: '正常' }\n\n  if (value < thresholds.min) {\n    return { type: 'danger', effect: 'dark', text: '过低' }\n  }\n  if (value > thresholds.max) {\n    return { type: 'danger', effect: 'dark', text: '过高' }\n  }\n  return { type: 'success', effect: 'dark', text: '正常' }\n}\n\nconst getMetricChartOptions = (key) => {\n  return {\n    grid: {\n      top: 20,\n      right: 20,\n      bottom: 20,\n      left: 50\n    },\n    xAxis: {\n      type: 'time',\n      axisLine: { lineStyle: { color: '#fff' } }\n    },\n    yAxis: {\n      type: 'value',\n      axisLine: { lineStyle: { color: '#fff' } },\n      splitLine: { lineStyle: { color: 'rgba(255,255,255,0.1)' } }\n    },\n    series: [\n      {\n        type: 'line',\n        data: generateMetricData(key),\n        smooth: true,\n        showSymbol: false,\n        lineStyle: { width: 2 },\n        areaStyle: {\n          opacity: 0.1\n        }\n      }\n    ]\n  }\n}\n\nconst generateMetricData = (key) => {\n  const now = new Date()\n  const data = []\n  for (let i = 0; i < 60; i++) {\n    const time = new Date(now - (59 - i) * 60000)\n    const baseValue = currentDevice.value.metrics[key]\n    const value = typeof baseValue === 'number' \n      ? baseValue + (Math.random() * 2 - 1)\n      : baseValue\n    data.push([time.getTime(), value])\n  }\n  return data\n}\n\nconst loadHistoryData = async () => {\n  if (!historyDateRange.value || !selectedDevice.value) return\n  \n  loading.value = true\n  try {\n    // TODO: 从后端获取历史数据\n    const response = await store.dispatch('device/fetchHistory', {\n      deviceId: selectedDevice.value,\n      startTime: historyDateRange.value[0],\n      endTime: historyDateRange.value[1],\n      metrics: selectedMetrics.value\n    })\n    \n    // 更新图表\n    updateHistoryChart(response)\n  } catch (error) {\n    console.error('Failed to load history data:', error)\n    ElMessage.error('获取历史数据失败')\n  } finally {\n    loading.value = false\n  }\n}\n\nconst updateHistoryChart = (data) => {\n  // TODO: 更新历史数据图表\n}\n\nconst viewHistory = (device) => {\n  selectDevice(device)\n  showDetail.value = true\n  nextTick(() => {\n    // 切换到历史数据标签\n    // TODO: 实现标签切换\n  })\n}\n\nconst configDevice = (device) => {\n  selectDevice(device)\n  showConfig.value = true\n}\n\nconst saveConfig = async () => {\n  if (!configForm.value) return\n  \n  try {\n    await configForm.value.validate()\n    // TODO: 保存设备配置\n    showConfig.value = false\n    ElMessage.success('配置保存成功')\n  } catch (error) {\n    console.error('Config validation failed:', error)\n  }\n}\n\n// 生命周期钩子\nonMounted(() => {\n  initWebSocket()\n  initData()\n  if (autoRefresh.value) {\n    startAutoRefresh()\n  }\n})\n\nonUnmounted(() => {\n  if (ws.value) {\n    ws.value.close()\n    ws.value = null\n  }\n  if (wsReconnectTimer.value) {\n    clearTimeout(wsReconnectTimer.value)\n  }\n  stopAutoRefresh()\n})\n\n// keep-alive 支持\nonActivated(() => {\n  initWebSocket()\n  initData()\n})\n\nonDeactivated(() => {\n  if (ws.value) {\n    ws.value.close()\n    ws.value = null\n  }\n})\n\n  // 设备统计数据\nconst deviceStats = ref({\n  online: deviceList.value.filter(d => d.status === 'online').length,\n  offline: deviceList.value.filter(d => d.status === 'offline').length,\n  error: deviceList.value.filter(d => d.status === 'error').length,\n  total: deviceList.value.length\n})\n\n\n\n// 告警数据\nconst alerts = ref([\n  {\n    id: 1,\n    title: 'PH值超出正常范围',\n    device: '传感器D',\n    time: '10分钟前',\n    level: 'error',\n    unread: true\n  },\n  {\n    id: 2,\n    title: '设备离线超过4小时',\n    device: '摄像头B',\n    time: '4小时前',\n    level: 'warning',\n    unread: true\n  },\n  {\n    id: 3,\n    title: '数据传输异常',\n    device: '网关C',\n    time: '2小时前',\n    level: 'info',\n    unread: false\n  }\n])\n\n// 搜索和筛选\nconst searchQuery = ref('')\nconst filterStatus = ref('')\nconst filterType = ref('')\n\n// 优化的计算属性\nconst filteredDeviceList = computed(() => {\n  if (!deviceList.value) return []\n  \n  const query = searchQuery.value.toLowerCase()\n  const status = filterStatus.value\n  const type = filterType.value\n  \n  return deviceList.value.filter(device => {\n    if (status && device.status !== status) return false\n    if (type && device.type !== type) return false\n    if (!query) return true\n    \n    return device.name.toLowerCase().includes(query) ||\n           device.type.toLowerCase().includes(query) ||\n           device.location.toLowerCase().includes(query)\n  })\n})\n\n// 设备详情相关\nconst showDetail = ref(false)\nconst deviceAlerts = ref([\n  { time: '2024-03-15 14:20:00', title: 'PH值超出正常范围', level: 'error', status: '未处理' },\n  { time: '2024-03-15 10:15:00', title: '设备离线', level: 'warning', status: '已处理' },\n  { time: '2024-03-14 16:30:00', title: '数据异常', level: 'info', status: '已处理' }\n])\n\n// 新增设备相关\nconst showAddDeviceDialog = ref(false)\nconst deviceForm = ref(null)\nconst newDevice = ref({\n  name: '',\n  type: '',\n  location: ''\n})\n\nconst deviceRules = {\n  name: [\n    { required: true, message: '请输入设备名称', trigger: 'blur' },\n    { min: 2, max: 20, message: '长度在 2 到 20 个字符', trigger: 'blur' }\n  ],\n  type: [\n    { required: true, message: '请选择设备类型', trigger: 'change' }\n  ],\n  location: [\n    { required: true, message: '请输入安装位置', trigger: 'blur' }\n  ]\n}\n\n// 图表相关\nconst selectedDevice = ref('')\n/* 实时数据图表配置 */\nconst chartOptions = computed(() => {\n  // 使用 requestAnimationFrame 优化图表更新\n  if (chartUpdateTimer) {\n    cancelAnimationFrame(chartUpdateTimer)\n  }\n  \n  chartUpdateTimer = requestAnimationFrame(() => {\n    // ... existing chart options ...\n  })\n})\n\nconst historyChartOptions = computed(() => ({\n  backgroundColor: 'transparent',\n  title: {\n    text: '历史数据趋势',\n    textStyle: { color: '#fff' }\n  },\n  tooltip: {\n    trigger: 'axis',\n    axisPointer: {\n      type: 'shadow'\n    }\n  },\n  legend: {\n    data: ['温度', '湿度', 'PH值'],\n    textStyle: { color: '#fff' },\n    top: 30\n  },\n  grid: {\n    top: 80,\n    right: 20,\n    bottom: 30,\n    left: 50,\n    containLabel: true\n  },\n  xAxis: {\n    type: 'category',\n    data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日'],\n    axisLabel: { color: '#fff' },\n    axisLine: {\n      lineStyle: {\n        color: '#8c8c8c'\n      }\n    }\n  },\n  yAxis: {\n    type: 'value',\n    axisLabel: { color: '#fff' },\n    splitLine: {\n      lineStyle: {\n        color: 'rgba(255, 255, 255, 0.1)'\n      }\n    },\n    axisLine: {\n      lineStyle: {\n        color: '#8c8c8c'\n      }\n    }\n  },\n  series: [\n    {\n      name: '温度',\n      type: 'bar',\n      data: [23, 24, 25, 23, 24, 26, 25],\n      itemStyle: {\n        color: {\n          type: 'linear',\n          x: 0,\n          y: 0,\n          x2: 0,\n          y2: 1,\n          colorStops: [{\n            offset: 0,\n            color: '#1890ff'\n          }, {\n            offset: 1,\n            color: 'rgba(24, 144, 255, 0.3)'\n          }]\n        }\n      }\n    },\n    {\n      name: '湿度',\n      type: 'bar',\n      data: [65, 63, 68, 64, 62, 65, 66],\n      itemStyle: {\n        color: {\n          type: 'linear',\n          x: 0,\n          y: 0,\n          x2: 0,\n          y2: 1,\n          colorStops: [{\n            offset: 0,\n            color: '#52c41a'\n          }, {\n            offset: 1,\n            color: 'rgba(82, 196, 26, 0.3)'\n          }]\n        }\n      }\n    },\n    {\n      name: 'PH值',\n      type: 'bar',\n      data: [7.1, 7.0, 7.2, 7.1, 7.0, 7.1, 7.2],\n      itemStyle: {\n        color: {\n          type: 'linear',\n          x: 0,\n          y: 0,\n          x2: 0,\n          y2: 1,\n          colorStops: [{\n            offset: 0,\n            color: '#faad14'\n          }, {\n            offset: 1,\n            color: 'rgba(250, 173, 20, 0.3)'\n          }]\n        }\n      }\n    }\n  ]\n}))\n\n// 生成时间序列数据\nfunction generateTimeData(baseValue, variance) {\n  const now = new Date()\n  const data = []\n  for (let i = 0; i < 60; i++) {\n    const time = new Date(now - (59 - i) * 60000)\n    data.push([\n      time.toISOString(),\n      +(baseValue + (Math.random() * 2 - 1) * variance).toFixed(1)\n    ])\n  }\n  return data\n}\n\n// 优化的设备操作\nconst viewDetail = async (device) => {\n  currentDevice.value = device;\n  showDetail.value = true;\n\n  try {\n    // 预加载设备历史数据\n    const history = await store.dispatch('device/fetchDeviceHistory', device.name);\n    await nextTick();\n    // 可以在这里更新依赖于历史数据的图表或组件\n  } catch (error) {\n    ElMessage.error('获取设备历史数据失败');\n  }\n};\n\nconst deleteDevice = async (device) => {\n  try {\n    await ElMessageBox.confirm(\n      `您正在尝试删除设备：<strong>${device.name}</strong><br/>此操作将永久删除该设备及其所有关联数据，且无法恢复。`,\n      '删除确认',\n      {\n        type: 'warning',\n        confirmButtonText: '确定删除',\n        cancelButtonText: '取消',\n        dangerouslyUseHTMLString: true,\n      }\n    );\n    \n    loading.value = true;\n    await store.dispatch('device/deleteDevice', device.name);\n    \n    // 更新本地数据和缓存\n    deviceList.value = deviceList.value.filter(d => d.name !== device.name);\n    await cache.set(DEVICE_CACHE_KEY, deviceList.value, DEVICE_CACHE_EXPIRY);\n    \n    ElMessage.success('设备已删除');\n  } catch (error) {\n    if (error !== 'cancel') {\n      ElMessage.error('删除设备失败');\n      console.error('Delete device error:', error);\n    }\n  } finally {\n    loading.value = false;\n  }\n};\n\n// 优化的告警处理\nconst handleAlert = async (alert) => {\n  const device = deviceList.value.find(d => d.name === alert.device);\n  if (device) {\n    viewDetail(device);\n  }\n\n  if (alert.unread) {\n    // 使用 nextTick 确保在 DOM 更新后再标记为已读\n    await nextTick();\n    \n    const index = alerts.value.findIndex(a => a.id === alert.id);\n    if (index !== -1 && alerts.value[index].unread) {\n      alerts.value[index].unread = false;\n      try {\n        await store.dispatch('alert/markAsRead', alert.id);\n      } catch (error) {\n        // 如果标记已读失败，将状态改回未读\n        alerts.value[index].unread = true;\n        console.error('Failed to mark alert as read:', error);\n      }\n    }\n  }\n};\n\nfunction showAddDevice() {\n  showAddDeviceDialog.value = true\n}\n\nfunction submitNewDevice() {\n  deviceForm.value?.validate((valid) => {\n    if (valid) {\n      const device = {\n        ...newDevice.value,\n        status: 'online',\n        latestData: '暂无数据',\n        lastUpdate: new Date().toLocaleString()\n      }\n      deviceList.value.push(device)\n      showAddDeviceDialog.value = false\n      ElMessage.success('添加成功')\n      newDevice.value = {\n        name: '',\n        type: '',\n        location: ''\n      }\n    }\n  })\n}\n\n// Helper functions\nfunction getDeviceIcon(type) {\n  const icons = {\n    '温湿度': 'Temperature',\n    'PH值': 'Experiment',\n    '视频监控': 'VideoCamera',\n    '数据网关': 'Connection'\n  };\n  return icons[type] || 'Monitor';\n}\n\nfunction getDeviceTagType(type) {\n  const types = {\n    '温湿度': '',\n    'PH值': 'warning',\n    '视频监控': 'success',\n    '数据网关': 'info'\n  };\n  return types[type] || 'info';\n}\n\nfunction getStatusText(status) {\n  const statuses = {\n    online: '在线',\n    offline: '离线',\n    error: '异常'\n  };\n  return statuses[status] || status;\n}\n\nfunction getAlertTagType(level) {\n  const types = {\n    error: 'danger',\n    warning: 'warning',\n    info: 'info'\n  };\n  return types[level] || 'info';\n}\n\n\n// 状态选项\nconst statusOptions = [\n  { label: '全部', value: '' },\n  { label: '在线', value: 'online' },\n  { label: '离线', value: 'offline' },\n  { label: '异常', value: 'error' }\n]\n\n// 类型选项\nconst typeOptions = [\n  { label: '全部', value: '' },\n  { label: '温湿度传感器', value: '温湿度' },\n  { label: 'PH值传感器', value: 'PH值' },\n  { label: '视频监控', value: '视频监控' },\n  { label: '数据网关', value: '数据网关' }\n]\n\n// 高级搜索\nconst showAdvancedSearchDialog = ref(false)\nconst advancedSearch = ref({\n  name: '',\n  type: '',\n  status: '',\n  location: '',\n  updateTime: []\n})\n\n// Excel导出\nconst exporting = ref(false)\n\n// 导出数据\nconst exportData = async () => {\n  try {\n    exporting.value = true\n    await exportToExcel(deviceList.value, {\n      filename: `设备列表_${new Date().toLocaleDateString()}`,\n      sheets: [{\n        name: '设备列表',\n        columns: [\n          { header: '设备名称', key: 'name' },\n          { header: '设备类型', key: 'type' },\n          { header: '状态', key: 'status' },\n          { header: '位置', key: 'location' },\n          { header: '最近数据', key: 'latestData' },\n          { header: '最后更新', key: 'lastUpdate' }\n        ]\n      }]\n    })\n    ElMessage.success('导出成功')\n  } catch (error) {\n    ElMessage.error('导出失败')\n    console.error('Export failed:', error)\n  } finally {\n    exporting.value = false\n  }\n}\n\n// 显示高级搜索\nconst showAdvancedSearch = () => {\n  showAdvancedSearchDialog.value = true\n}\n\n// 重置高级搜索\nconst resetAdvancedSearch = () => {\n  advancedSearch.value = {\n    name: '',\n    type: '',\n    status: '',\n    location: '',\n    updateTime: []\n  }\n}\n\n// 应用高级搜索\nconst applyAdvancedSearch = () => {\n  searchQuery.value = advancedSearch.value.name\n  filterType.value = advancedSearch.value.type\n  filterStatus.value = advancedSearch.value.status\n  showAdvancedSearchDialog.value = false\n}\n\n// 统计卡片相关方法\nconst getStatTooltip = (key) => {\n  const tooltips = {\n    online: '当前在线的设备数量',\n    offline: '当前离线的设备数量',\n    error: '存在异常的设备数量',\n    total: '系统中的设备总数'\n  }\n  return tooltips[key]\n}\n\nconst getStatLabel = (key) => {\n  const labels = {\n    online: '在线设备',\n    offline: '离线设备',\n    error: '异常设备',\n    total: '设备总数'\n  }\n  return labels[key]\n}\n\nconst getStatIcon = (key) => {\n  const icons = {\n    online: Monitor,\n    offline: Connection,\n    error: Warning,\n    total: Cpu\n  }\n  return icons[key]\n}\n\nconst getTrendClass = (key) => {\n  const trends = {\n    online: 'up',\n    offline: 'down',\n    error: '',\n    total: 'up'\n  }\n  return trends[key]\n}\n\nconst getTrendIcon = (key) => {\n  const trends = {\n    online: ArrowUp,\n    offline: ArrowDown,\n    error: InfoFilled,\n    total: ArrowUp\n  }\n  return trends[key]\n}\n\nconst getTrendText = (key) => {\n  const texts = {\n    online: '2台',\n    offline: '1台',\n    error: '无变化',\n    total: '1台'\n  }\n  return texts[key]\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.monitoring-view {\n  padding: 24px;\n  height: 100%;\n  overflow-y: auto;\n  background: linear-gradient(135deg, #1a1a1a 0%, #0a0a0a 100%);\n  color: #fff;\n  /* 添加滚动条样式 */\n  &::-webkit-scrollbar {\n    width: 8px;\n  }\n  \n  &::-webkit-scrollbar-thumb {\n    background: rgba(255, 255, 255, 0.2);\n    border-radius: 4px;\n    \n    &:hover {\n      background: rgba(255, 255, 255, 0.3);\n    }\n  }\n  \n  &::-webkit-scrollbar-track {\n    background: rgba(0, 0, 0, 0.1);\n  }\n\n  // 顶部统计卡片区域\n  .stats-section {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));\n    gap: 20px;\n    margin-bottom: 24px;\n\n    .stat-card {\n      background: rgba(255, 255, 255, 0.05);\n      backdrop-filter: blur(10px);\n      border: 1px solid rgba(255, 255, 255, 0.1);\n      border-radius: 12px;\n  padding: 20px;\n      transition: all 0.3s ease;\n      cursor: pointer;\n\n      &:hover {\n        transform: translateY(-2px);\n        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\n        background: rgba(255, 255, 255, 0.08);\n      }\n\n      .stat-icon {\n        font-size: 24px;\n        margin-bottom: 12px;\n        color: #40a9ff;\n      }\n\n      .stat-content {\n        .stat-value {\n          font-size: 28px;\n          font-weight: 600;\n          margin-bottom: 8px;\n          background: linear-gradient(45deg, #40a9ff, #69c0ff);\n          -webkit-background-clip: text;\n          -webkit-text-fill-color: transparent;\n        }\n\n        .stat-label {\n          color: rgba(255, 255, 255, 0.65);\n          font-size: 14px;\n        }\n      }\n\n      .stat-trend {\n  display: flex;\n        align-items: center;\n        gap: 4px;\n        margin-top: 12px;\n        font-size: 14px;\n\n        &.up {\n          color: #52c41a;\n        }\n\n        &.down {\n          color: #ff4d4f;\n        }\n      }\n\n      &.online { .stat-icon { color: #52c41a; } }\n      &.offline { .stat-icon { color: #ff4d4f; } }\n      &.error { .stat-icon { color: #faad14; } }\n      &.total { .stat-icon { color: #40a9ff; } }\n    }\n  }\n\n  // 工具栏\n  .toolbar {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 24px;\n    padding: 16px;\n    background: rgba(255, 255, 255, 0.05);\n    border-radius: 12px;\n    backdrop-filter: blur(10px);\n\n    .toolbar-left {\n      display: flex;\n      gap: 16px;\n      align-items: center;\n\n      .el-button-group {\n        .el-button {\n          background: rgba(255, 255, 255, 0.08);\n          border-color: rgba(255, 255, 255, 0.1);\n          color: rgba(255, 255, 255, 0.85);\n\n          &:hover {\n            background: rgba(255, 255, 255, 0.12);\n          }\n\n          &.active {\n            background: #40a9ff;\n            color: #fff;\n          }\n        }\n      }\n    }\n\n    .toolbar-right {\n      display: flex;\n      gap: 16px;\n      align-items: center;\n\n      .el-input {\n        width: 240px;\n        .el-input__wrapper {\n          background: rgba(255, 255, 255, 0.08);\n        }\n      }\n\n      .el-select {\n        width: 160px;\n        .el-input__wrapper {\n          background: rgba(255, 255, 255, 0.08);\n        }\n      }\n    }\n  }\n\n  // 主要内容区域\n  .main-content {\n    display: grid;\n    grid-template-columns: 1fr 400px;\n    gap: 24px;\n    min-height: calc(100% - 200px);\n    margin-bottom: 24px;\n\n    .content-main {\n      display: flex;\n      flex-direction: column;\n      gap: 24px;\n\n      .device-list-panel {\n        height: 500px;\n        background: rgba(255, 255, 255, 0.05);\n        border-radius: 12px;\n        backdrop-filter: blur(10px);\n        overflow: auto;\n        /* 添加内部滚动条样式 */\n        &::-webkit-scrollbar {\n          width: 6px;\n        }\n        \n        &::-webkit-scrollbar-thumb {\n          background: rgba(255, 255, 255, 0.2);\n          border-radius: 3px;\n          \n          &:hover {\n            background: rgba(255, 255, 255, 0.3);\n          }\n        }\n        \n        &::-webkit-scrollbar-track {\n          background: rgba(0, 0, 0, 0.1);\n        }\n\n        .panel-header {\n          padding: 16px;\n          border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n\n          h3 {\n            margin: 0;\n            font-size: 18px;\n            font-weight: 500;\n          }\n        }\n\n        .device-grid {\n          padding: 20px;\n          display: grid;\n          grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n  gap: 20px;\n\n          .device-card {\n            background: rgba(0, 0, 0, 0.2);\n            border-radius: 8px;\n            padding: 16px;\n            transition: all 0.3s ease;\n\n            &:hover {\n              transform: translateY(-2px);\n              box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\n            }\n\n            .device-card-header {\n              display: flex;\n              justify-content: space-between;\n              align-items: center;\n              margin-bottom: 12px;\n\n              .device-icon {\n                font-size: 24px;\n                color: #40a9ff;\n              }\n\n              .device-status {\n                display: flex;\n                align-items: center;\n                gap: 6px;\n                font-size: 14px;\n\n                .status-dot {\n                  width: 8px;\n                  height: 8px;\n                  border-radius: 50%;\n                }\n              }\n            }\n\n            .device-card-content {\n              .device-name {\n                font-size: 16px;\n                font-weight: 500;\n                margin-bottom: 8px;\n              }\n\n              .device-type {\n                margin-bottom: 8px;\n              }\n\n              .device-location {\n                color: rgba(255, 255, 255, 0.65);\n                font-size: 14px;\n                margin-bottom: 8px;\n              }\n\n              .device-data {\n                font-size: 14px;\n                color: rgba(255, 255, 255, 0.85);\n              }\n            }\n\n            .device-card-footer {\n              margin-top: 16px;\n              display: flex;\n              justify-content: flex-end;\n            }\n\n            &.online .status-dot { background: #52c41a; }\n            &.offline .status-dot { background: #ff4d4f; }\n            &.error .status-dot { background: #faad14; }\n          }\n        }\n      }\n\n      .timeline-panel {\n        background: rgba(255, 255, 255, 0.05);\n        border-radius: 12px;\n        backdrop-filter: blur(10px);\n        overflow: hidden;\n        \n        .panel-header {\n          padding: 16px;\n          border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n          \n          h3 {\n            margin: 0;\n            font-size: 18px;\n            font-weight: 500;\n          }\n        }\n        \n        .timeline-content {\n          padding: 20px;\n          \n          :deep(.photo-timeline) {\n            background: transparent;\n            \n            .timeline-header {\n              margin-bottom: 16px;\n              \n              h2 {\n                display: none;\n              }\n            }\n            \n            .image-container {\n              border-radius: 8px;\n              overflow: hidden;\n              background: rgba(0, 0, 0, 0.2);\n              \n              .timeline-image {\n                height: 300px;\n                object-fit: cover;\n              }\n            }\n            \n            .timeline-slider {\n              margin: 16px 0;\n            }\n            \n            .timeline-info {\n              :deep(.el-descriptions) {\n                --el-descriptions-item-bordered-label-background: rgba(0, 0, 0, 0.2);\n                \n                .el-descriptions-item__label {\n                  color: rgba(255, 255, 255, 0.85);\n                }\n                \n                .el-descriptions-item__content {\n                  background: rgba(0, 0, 0, 0.1);\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    .content-side {\n      display: flex;\n      flex-direction: column;\n      gap: 24px;\n\n      .side-panel {\n        background: rgba(255, 255, 255, 0.05);\n        border-radius: 12px;\n        backdrop-filter: blur(10px);\n        overflow: hidden;\n\n        .panel-header {\n          padding: 16px;\n          border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n\n          h3 {\n            margin: 0;\n            font-size: 18px;\n            font-weight: 500;\n          }\n        }\n\n        &.prediction-panel {\n          flex: 1;\n\n          .prediction-content {\n            padding: 20px;\n\n            .prediction-chart {\n              height: 300px;\n              margin-bottom: 20px;\n              background: rgba(0, 0, 0, 0.2);\n              border-radius: 8px;\n              padding: 16px;\n            }\n\n            .prediction-settings {\n              background: rgba(0, 0, 0, 0.2);\n              border-radius: 8px;\n              padding: 16px;\n              margin-bottom: 20px;\n\n              .el-form {\n                .el-form-item {\n                  margin-bottom: 16px;\n                  &:last-child {\n                    margin-bottom: 0;\n                  }\n                }\n              }\n            }\n\n            .prediction-metrics {\n              .metric-card {\n                background: rgba(0, 0, 0, 0.2);\n                border-radius: 8px;\n                padding: 16px;\n                height: 100%;\n                transition: all 0.3s ease;\n\n                &:hover {\n                  transform: translateY(-2px);\n                  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\n                }\n\n                .metric-label {\n                  color: rgba(255, 255, 255, 0.65);\n                  font-size: 14px;\n                  margin-bottom: 8px;\n                }\n\n                .metric-value {\n                  font-size: 24px;\n                  font-weight: 600;\n  color: #fff;\n                  margin-bottom: 8px;\n                }\n\n                .metric-trend {\n                  display: flex;\n                  align-items: center;\n                  justify-content: center;\n                  gap: 4px;\n                  font-size: 14px;\n\n                  &.positive {\n                    color: #52c41a;\n                  }\n\n                  &.negative {\n                    color: #ff4d4f;\n                  }\n                }\n              }\n            }\n          }\n        }\n\n        .chart-container {\n          height: 300px;\n          padding: 16px;\n        }\n\n        .alert-list {\n          padding: 16px;\n\n          .alert-item {\n            display: flex;\n            align-items: center;\n            gap: 12px;\n            padding: 12px;\n            background: rgba(0, 0, 0, 0.2);\n            border-radius: 8px;\n            margin-bottom: 12px;\n            cursor: pointer;\n            transition: all 0.3s ease;\n\n            &:hover {\n              transform: translateX(4px);\n              background: rgba(0, 0, 0, 0.3);\n            }\n\n            &:last-child {\n              margin-bottom: 0;\n            }\n\n            .alert-icon {\n              font-size: 20px;\n              color: #ff4d4f;\n            }\n\n            .alert-content {\n              flex: 1;\n\n              .alert-title {\n                font-size: 14px;\n                margin-bottom: 4px;\n              }\n\n              .alert-info {\n                display: flex;\n                justify-content: space-between;\n                font-size: 12px;\n                color: rgba(255, 255, 255, 0.45);\n              }\n            }\n\n            &.error .alert-icon { color: #ff4d4f; }\n            &.warning .alert-icon { color: #faad14; }\n            &.info .alert-icon { color: #40a9ff; }\n          }\n        }\n      }\n    }\n  }\n}\n\n.stats-section {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 20px;\n  margin-bottom: 20px;\n}\n\n.stat-card {\n  background: rgba(255, 255, 255, 0.04);\n  border-radius: 8px;\n  padding: 20px;\n  display: flex;\n  align-items: center;\n  gap: 16px;\n  transition: all 0.3s ease;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  }\n\n  .stat-icon {\n    width: 48px;\n    height: 48px;\n    border-radius: 8px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 24px;\n  }\n\n  .stat-content {\n    flex: 1;\n\n    .stat-value {\n      font-size: 24px;\n      font-weight: 600;\n      margin-bottom: 4px;\n    }\n\n    .stat-label {\n      color: rgba(255, 255, 255, 0.65);\n      font-size: 14px;\n    }\n  }\n\n  .stat-trend {\n    display: flex;\n    align-items: center;\n    gap: 4px;\n    font-size: 14px;\n\n    &.up {\n      color: #52c41a;\n    }\n\n    &.down {\n      color: #ff4d4f;\n    }\n  }\n\n  &.online .stat-icon {\n    background: rgba(82, 196, 26, 0.15);\n    color: #52c41a;\n  }\n\n  &.offline .stat-icon {\n    background: rgba(255, 77, 79, 0.15);\n    color: #ff4d4f;\n  }\n\n  &.error .stat-icon {\n    background: rgba(250, 173, 20, 0.15);\n    color: #faad14;\n  }\n\n  &.total .stat-icon {\n    background: rgba(24, 144, 255, 0.15);\n    color: #1890ff;\n  }\n}\n\n.main-content {\n  display: flex;\n  gap: 20px;\n  flex: 1;\n  min-height: 0;\n}\n\n.content-main {\n  flex: 1;\n  min-width: 0;\n}\n\n.content-side {\n  width: 360px;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.panel {\n  background: rgba(255, 255, 255, 0.04);\n  border-radius: 8px;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\n.panel-header {\n  padding: 16px 20px;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.08);\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  h3 {\n    margin: 0;\n    font-size: 16px;\n    font-weight: 500;\n  }\n}\n\n.device-grid {\n  padding: 20px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 20px;\n}\n\n.device-card {\n  background: rgba(255, 255, 255, 0.04);\n  border-radius: 8px;\n  padding: 16px;\n  transition: all 0.3s ease;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  }\n\n  &.online {\n    border-left: 4px solid #52c41a;\n  }\n\n  &.offline {\n    border-left: 4px solid #ff4d4f;\n  }\n\n  &.error {\n    border-left: 4px solid #faad14;\n  }\n}\n\n.device-card-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 12px;\n}\n\n.device-icon {\n  width: 40px;\n  height: 40px;\n  border-radius: 8px;\n  background: rgba(255, 255, 255, 0.04);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 20px;\n}\n\n.device-status {\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  font-size: 14px;\n  color: rgba(255, 255, 255, 0.65);\n\n  .status-dot {\n    width: 8px;\n    height: 8px;\n    border-radius: 50%;\n  }\n\n  &.online .status-dot {\n    background: #52c41a;\n  }\n\n  &.offline .status-dot {\n    background: #ff4d4f;\n  }\n\n  &.error .status-dot {\n    background: #faad14;\n  }\n}\n\n.device-card-content {\n  margin-bottom: 12px;\n\n  .device-name {\n    font-size: 16px;\n    font-weight: 500;\n    margin-bottom: 8px;\n  }\n\n  .device-type {\n    margin-bottom: 8px;\n  }\n\n  .device-location {\n    color: rgba(255, 255, 255, 0.65);\n    font-size: 14px;\n    margin-bottom: 8px;\n  }\n\n  .device-data {\n    font-size: 14px;\n    color: rgba(255, 255, 255, 0.85);\n  }\n}\n\n.device-card-footer {\n  display: flex;\n  justify-content: flex-end;\n}\n\n.alert-list {\n  padding: 16px;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n}\n\n.alert-item {\n  background: rgba(255, 255, 255, 0.04);\n  border-radius: 6px;\n  padding: 12px;\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n\n  &:hover {\n    background: rgba(255, 255, 255, 0.08);\n  }\n\n  &.unread {\n    border-left: 3px solid #1890ff;\n  }\n\n  &.error {\n    border-left: 3px solid #ff4d4f;\n  }\n\n  &.warning {\n    border-left: 3px solid #faad14;\n  }\n\n  &.info {\n    border-left: 3px solid #1890ff;\n  }\n}\n\n.alert-icon {\n  width: 32px;\n  height: 32px;\n  border-radius: 6px;\n  background: rgba(255, 255, 255, 0.04);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 18px;\n}\n\n.alert-content {\n  flex: 1;\n  min-width: 0;\n\n  .alert-title {\n    font-size: 14px;\n    margin-bottom: 4px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n\n  .alert-info {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    font-size: 12px;\n    color: rgba(255, 255, 255, 0.45);\n\n    .alert-device {\n      color: rgba(255, 255, 255, 0.65);\n    }\n  }\n}\n\n.chart-container {\n  flex: 1;\n  min-height: 300px;\n  padding: 0 20px 20px;\n}\n\n:deep(.el-table) {\n  background: transparent;\n  \n  th {\n    background: #1a1a1a !important;\n    border-bottom: 1px solid rgba(255, 255, 255, 0.08);\n  }\n\n  td {\n    background: transparent;\n    border-bottom: 1px solid rgba(255, 255, 255, 0.04);\n  }\n\n  tr {\n    background: transparent;\n\n    &:hover > td {\n      background: rgba(255, 255, 255, 0.04);\n    }\n  }\n}\n\n.header-left {\n  display: flex;\n  align-items: center;\n  gap: 16px;\n}\n\n.header-right {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n\n  .el-input {\n    width: 200px;\n  }\n\n  .el-select {\n    width: 120px;\n  }\n}\n\n:deep(.el-button) {\n  &.active {\n    background: #1890ff;\n    border-color: #1890ff;\n    color: #fff;\n  }\n}\n\n.toolbar {\n  padding: 16px 20px;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.08);\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 20px;\n  background: rgba(255, 255, 255, 0.02);\n}\n\n.toolbar-left {\n  display: flex;\n  align-items: center;\n  gap: 16px;\n}\n\n.toolbar-right {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  flex-wrap: wrap;\n}\n\n.view-options {\n  margin-left: 12px;\n}\n\n.select-option {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  .status-dot {\n    width: 8px;\n    height: 8px;\n    border-radius: 50%;\n\n    &.online {\n      background: #52c41a;\n    }\n\n    &.offline {\n      background: #ff4d4f;\n    }\n\n    &.error {\n      background: #faad14;\n    }\n  }\n\n  .el-icon {\n    font-size: 16px;\n  }\n}\n\n:deep(.el-dialog) {\n  background: #1a1a1a;\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2);\n\n  .el-dialog__header {\n    border-bottom: 1px solid rgba(255, 255, 255, 0.08);\n    margin: 0;\n    padding: 20px;\n\n    .el-dialog__title {\n      color: #fff;\n      font-size: 16px;\n      font-weight: 500;\n    }\n  }\n\n  .el-dialog__body {\n    padding: 20px;\n  }\n\n  .el-dialog__footer {\n    border-top: 1px solid rgba(255, 255, 255, 0.08);\n    padding: 20px;\n  }\n}\n\n:deep(.el-form) {\n  .el-form-item__label {\n    color: rgba(255, 255, 255, 0.85);\n  }\n}\n\n:deep(.el-input),\n:deep(.el-select) {\n  .el-input__wrapper {\n    background: rgba(0, 0, 0, 0.2);\n    border: 1px solid rgba(255, 255, 255, 0.1);\n    box-shadow: none;\n\n    &:hover {\n      border-color: #1890ff;\n    }\n\n    &.is-focus {\n      border-color: #1890ff;\n      box-shadow: 0 0 0 1px #1890ff;\n    }\n  }\n\n  .el-input__inner {\n    color: #fff;\n\n    &::placeholder {\n      color: rgba(255, 255, 255, 0.45);\n    }\n  }\n}\n\n:deep(.el-date-editor) {\n  background: rgba(0, 0, 0, 0.2);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  \n  .el-range-input {\n    color: #fff;\n    background: transparent;\n  }\n  \n  .el-range-separator {\n    color: rgba(255, 255, 255, 0.45);\n  }\n}\n\n.virtual-list-container {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 20px;\n  padding: 20px;\n}\n\n.device-list-panel {\n  .device-name-cell {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    \n    .el-icon {\n      font-size: 18px;\n      color: #40a9ff;\n    }\n  }\n\n  .device-info {\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n\n    .info-item {\n      display: flex;\n      align-items: center;\n      gap: 6px;\n      color: rgba(255, 255, 255, 0.65);\n\n      .el-icon {\n        font-size: 16px;\n      }\n    }\n  }\n\n  .device-metrics {\n    margin-top: 12px;\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));\n    gap: 12px;\n\n    .metric-item {\n      background: rgba(0, 0, 0, 0.2);\n      border-radius: 6px;\n      padding: 8px;\n\n      .metric-label {\n        color: rgba(255, 255, 255, 0.45);\n        font-size: 12px;\n        margin-bottom: 4px;\n      }\n\n      .metric-value {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        font-size: 14px;\n\n        .el-tag {\n          margin-left: 8px;\n        }\n      }\n    }\n  }\n}\n\n.realtime-panel {\n  .realtime-content {\n    padding: 20px;\n\n    .selected-device-info {\n      .device-header {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        margin-bottom: 20px;\n\n        .device-basic {\n          display: flex;\n          align-items: center;\n          gap: 12px;\n\n          .el-icon {\n            font-size: 24px;\n            color: #40a9ff;\n          }\n\n          .device-name {\n            font-size: 18px;\n            font-weight: 500;\n          }\n        }\n\n        .device-status {\n          display: flex;\n          align-items: center;\n          gap: 6px;\n          font-size: 14px;\n\n          .status-dot {\n            width: 8px;\n            height: 8px;\n            border-radius: 50%;\n          }\n\n          &.online .status-dot { background: #52c41a; }\n          &.offline .status-dot { background: #ff4d4f; }\n          &.error .status-dot { background: #faad14; }\n        }\n      }\n\n      .device-metrics {\n        display: grid;\n        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n        gap: 20px;\n\n        .metric-card {\n          background: rgba(0, 0, 0, 0.2);\n          border-radius: 8px;\n          padding: 16px;\n\n          .metric-header {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            margin-bottom: 12px;\n\n            .metric-label {\n              color: rgba(255, 255, 255, 0.65);\n              font-size: 14px;\n            }\n          }\n\n          .metric-value {\n            font-size: 24px;\n            font-weight: 600;\n            margin-bottom: 16px;\n          }\n\n          .metric-chart {\n            height: 120px;\n          }\n        }\n      }\n    }\n\n    .no-device-selected {\n      height: 400px;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n  }\n}\n\n.device-detail-dialog {\n  .device-info {\n    .el-descriptions {\n      --el-descriptions-item-bordered-label-background: #1a1a1a;\n      \n      .el-descriptions-item__label {\n        color: rgba(255, 255, 255, 0.85);\n      }\n    }\n  }\n\n  .history-data {\n    .chart-filters {\n      margin-bottom: 20px;\n    }\n\n    .history-chart {\n      height: 400px;\n    }\n  }\n}\n\n.device-config-dialog {\n  .threshold-item {\n    display: flex;\n    align-items: center;\n    gap: 12px;\n    margin-bottom: 12px;\n\n    &:last-child {\n      margin-bottom: 0;\n    }\n\n    .threshold-label {\n      width: 80px;\n    }\n\n    .separator {\n      color: rgba(255, 255, 255, 0.45);\n    }\n\n    .unit {\n      color: rgba(255, 255, 255, 0.45);\n      margin-left: 4px;\n    }\n  }\n}\n\n.device-map {\n  height: 100%;\n  \n  .map-container {\n    height: 100%;\n    background: rgba(0, 0, 0, 0.2);\n    border-radius: 8px;\n  }\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}