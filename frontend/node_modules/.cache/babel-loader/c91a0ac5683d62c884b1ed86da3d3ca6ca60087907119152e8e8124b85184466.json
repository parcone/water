{"ast":null,"code":"import dayjs from 'dayjs';\nimport 'dayjs/locale/zh-cn';\nimport numeral from 'numeral';\n\n// 设置语言\ndayjs.locale('zh-cn');\n\n/**\r\n * 格式化日期\r\n * @param {Date|string|number} date 日期\r\n * @param {string} format 格式\r\n * @returns {string} 格式化后的日期字符串\r\n */\nexport const formatDate = (date, format = 'YYYY-MM-DD') => {\n  if (!date) return '';\n  return dayjs(date).format(format);\n};\n\n/**\r\n * 格式化时间\r\n * @param {Date|string|number} date 日期\r\n * @param {string} format 格式\r\n * @returns {string} 格式化后的时间字符串\r\n */\nexport const formatTime = (date, format = 'YYYY-MM-DD HH:mm:ss') => {\n  if (!date) return '';\n  return dayjs(date).format(format);\n};\n\n/**\r\n * 格式化数字\r\n * @param {number} number 数字\r\n * @param {string} format 格式\r\n * @returns {string} 格式化后的数字字符串\r\n */\nexport const formatNumber = (number, format = '0,0.00') => {\n  if (number === undefined || number === null) return '';\n  return numeral(number).format(format);\n};\n\n/**\r\n * 格式化百分比\r\n * @param {number} number 数字\r\n * @param {number} decimals 小数位数\r\n * @returns {string} 格式化后的百分比字符串\r\n */\nexport const formatPercent = (number, decimals = 2) => {\n  if (number === undefined || number === null) return '';\n  return `${(number * 100).toFixed(decimals)}%`;\n};\n\n/**\r\n * 格式化文件大小\r\n * @param {number} bytes 字节数\r\n * @returns {string} 格式化后的文件大小\r\n */\nexport const formatFileSize = bytes => {\n  if (bytes === 0) return '0 B';\n  const k = 1024;\n  const sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return `${parseFloat((bytes / Math.pow(k, i)).toFixed(2))} ${sizes[i]}`;\n};\n\n/**\r\n * 格式化持续时间\r\n * @param {number} seconds 秒数\r\n * @returns {string} 格式化后的持续时间\r\n */\nexport const formatDuration = seconds => {\n  if (!seconds) return '0秒';\n  const days = Math.floor(seconds / 86400);\n  const hours = Math.floor(seconds % 86400 / 3600);\n  const minutes = Math.floor(seconds % 3600 / 60);\n  const remainingSeconds = seconds % 60;\n  const parts = [];\n  if (days > 0) parts.push(`${days}天`);\n  if (hours > 0) parts.push(`${hours}小时`);\n  if (minutes > 0) parts.push(`${minutes}分钟`);\n  if (remainingSeconds > 0) parts.push(`${remainingSeconds}秒`);\n  return parts.join('');\n};\n\n/**\r\n * 格式化金额\r\n * @param {number} amount 金额\r\n * @param {string} currency 货币符号\r\n * @returns {string} 格式化后的金额\r\n */\nexport const formatCurrency = (amount, currency = '¥') => {\n  if (amount === undefined || amount === null) return '';\n  return `${currency} ${numeral(amount).format('0,0.00')}`;\n};\n\n/**\r\n * 格式化手机号\r\n * @param {string} phone 手机号\r\n * @returns {string} 格式化后的手机号\r\n */\nexport const formatPhone = phone => {\n  if (!phone) return '';\n  return phone.replace(/(\\d{3})(\\d{4})(\\d{4})/, '$1 $2 $3');\n};\n\n/**\r\n * 格式化身份证号\r\n * @param {string} idCard 身份证号\r\n * @returns {string} 格式化后的身份证号\r\n */\nexport const formatIdCard = idCard => {\n  if (!idCard) return '';\n  return idCard.replace(/(\\d{6})(\\d{4})(\\d{4})(\\d{4})/, '$1 $2 $3 $4');\n};\n\n/**\r\n * 数字转中文\r\n * @param {number} num 数字\r\n * @returns {string} 中文数字\r\n */\nexport const numberToChinese = num => {\n  const chars = ['零', '一', '二', '三', '四', '五', '六', '七', '八', '九'];\n  const units = ['', '十', '百', '千', '万', '十万', '百万', '千万', '亿'];\n  const str = Math.floor(num).toString();\n  const len = str.length;\n  let result = '';\n  for (let i = 0; i < len; i++) {\n    const n = parseInt(str[i]);\n    const unit = units[len - 1 - i];\n    if (n === 0) {\n      if (result.charAt(result.length - 1) !== chars[0]) {\n        result += chars[0];\n      }\n    } else {\n      result += chars[n] + unit;\n    }\n  }\n  result = result.replace(/零+$/, '');\n  result = result.replace(/零+/g, '零');\n  if (result.startsWith('一十')) {\n    result = result.substring(1);\n  }\n  return result || '零';\n};","map":{"version":3,"names":["dayjs","numeral","locale","formatDate","date","format","formatTime","formatNumber","number","undefined","formatPercent","decimals","toFixed","formatFileSize","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","formatDuration","seconds","days","hours","minutes","remainingSeconds","parts","push","join","formatCurrency","amount","currency","formatPhone","phone","replace","formatIdCard","idCard","numberToChinese","num","chars","units","str","toString","len","length","result","n","parseInt","unit","charAt","startsWith","substring"],"sources":["D:/restore/water-melt/frontend/src/utils/format.js"],"sourcesContent":["import dayjs from 'dayjs'\r\nimport 'dayjs/locale/zh-cn'\r\nimport numeral from 'numeral'\r\n\r\n// 设置语言\r\ndayjs.locale('zh-cn')\r\n\r\n/**\r\n * 格式化日期\r\n * @param {Date|string|number} date 日期\r\n * @param {string} format 格式\r\n * @returns {string} 格式化后的日期字符串\r\n */\r\nexport const formatDate = (date, format = 'YYYY-MM-DD') => {\r\n  if (!date) return ''\r\n  return dayjs(date).format(format)\r\n}\r\n\r\n/**\r\n * 格式化时间\r\n * @param {Date|string|number} date 日期\r\n * @param {string} format 格式\r\n * @returns {string} 格式化后的时间字符串\r\n */\r\nexport const formatTime = (date, format = 'YYYY-MM-DD HH:mm:ss') => {\r\n  if (!date) return ''\r\n  return dayjs(date).format(format)\r\n}\r\n\r\n/**\r\n * 格式化数字\r\n * @param {number} number 数字\r\n * @param {string} format 格式\r\n * @returns {string} 格式化后的数字字符串\r\n */\r\nexport const formatNumber = (number, format = '0,0.00') => {\r\n  if (number === undefined || number === null) return ''\r\n  return numeral(number).format(format)\r\n}\r\n\r\n/**\r\n * 格式化百分比\r\n * @param {number} number 数字\r\n * @param {number} decimals 小数位数\r\n * @returns {string} 格式化后的百分比字符串\r\n */\r\nexport const formatPercent = (number, decimals = 2) => {\r\n  if (number === undefined || number === null) return ''\r\n  return `${(number * 100).toFixed(decimals)}%`\r\n}\r\n\r\n/**\r\n * 格式化文件大小\r\n * @param {number} bytes 字节数\r\n * @returns {string} 格式化后的文件大小\r\n */\r\nexport const formatFileSize = (bytes) => {\r\n  if (bytes === 0) return '0 B'\r\n  const k = 1024\r\n  const sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\r\n  const i = Math.floor(Math.log(bytes) / Math.log(k))\r\n  return `${parseFloat((bytes / Math.pow(k, i)).toFixed(2))} ${sizes[i]}`\r\n}\r\n\r\n/**\r\n * 格式化持续时间\r\n * @param {number} seconds 秒数\r\n * @returns {string} 格式化后的持续时间\r\n */\r\nexport const formatDuration = (seconds) => {\r\n  if (!seconds) return '0秒'\r\n  const days = Math.floor(seconds / 86400)\r\n  const hours = Math.floor((seconds % 86400) / 3600)\r\n  const minutes = Math.floor((seconds % 3600) / 60)\r\n  const remainingSeconds = seconds % 60\r\n\r\n  const parts = []\r\n  if (days > 0) parts.push(`${days}天`)\r\n  if (hours > 0) parts.push(`${hours}小时`)\r\n  if (minutes > 0) parts.push(`${minutes}分钟`)\r\n  if (remainingSeconds > 0) parts.push(`${remainingSeconds}秒`)\r\n\r\n  return parts.join('')\r\n}\r\n\r\n/**\r\n * 格式化金额\r\n * @param {number} amount 金额\r\n * @param {string} currency 货币符号\r\n * @returns {string} 格式化后的金额\r\n */\r\nexport const formatCurrency = (amount, currency = '¥') => {\r\n  if (amount === undefined || amount === null) return ''\r\n  return `${currency} ${numeral(amount).format('0,0.00')}`\r\n}\r\n\r\n/**\r\n * 格式化手机号\r\n * @param {string} phone 手机号\r\n * @returns {string} 格式化后的手机号\r\n */\r\nexport const formatPhone = (phone) => {\r\n  if (!phone) return ''\r\n  return phone.replace(/(\\d{3})(\\d{4})(\\d{4})/, '$1 $2 $3')\r\n}\r\n\r\n/**\r\n * 格式化身份证号\r\n * @param {string} idCard 身份证号\r\n * @returns {string} 格式化后的身份证号\r\n */\r\nexport const formatIdCard = (idCard) => {\r\n  if (!idCard) return ''\r\n  return idCard.replace(/(\\d{6})(\\d{4})(\\d{4})(\\d{4})/, '$1 $2 $3 $4')\r\n}\r\n\r\n/**\r\n * 数字转中文\r\n * @param {number} num 数字\r\n * @returns {string} 中文数字\r\n */\r\nexport const numberToChinese = (num) => {\r\n  const chars = ['零', '一', '二', '三', '四', '五', '六', '七', '八', '九']\r\n  const units = ['', '十', '百', '千', '万', '十万', '百万', '千万', '亿']\r\n  const str = Math.floor(num).toString()\r\n  const len = str.length\r\n  let result = ''\r\n\r\n  for (let i = 0; i < len; i++) {\r\n    const n = parseInt(str[i])\r\n    const unit = units[len - 1 - i]\r\n    if (n === 0) {\r\n      if (result.charAt(result.length - 1) !== chars[0]) {\r\n        result += chars[0]\r\n      }\r\n    } else {\r\n      result += chars[n] + unit\r\n    }\r\n  }\r\n\r\n  result = result.replace(/零+$/, '')\r\n  result = result.replace(/零+/g, '零')\r\n  \r\n  if (result.startsWith('一十')) {\r\n    result = result.substring(1)\r\n  }\r\n\r\n  return result || '零'\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}