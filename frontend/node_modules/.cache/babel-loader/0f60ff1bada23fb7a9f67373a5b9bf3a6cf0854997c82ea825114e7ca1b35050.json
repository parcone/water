{"ast":null,"code":"import { computed } from 'vue';\nimport { Monitor, Location, Timer, View, Setting, Delete } from '@element-plus/icons-vue';\nimport { formatTime } from '@/utils/format';\nexport default {\n  __name: 'DeviceCard',\n  props: {\n    source: {\n      type: Object,\n      required: true\n    }\n  },\n  emits: ['view', 'config', 'delete'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const props = __props;\n    const emit = __emit;\n    const filteredMetrics = computed(() => {\n      if (!props.source.metrics) return {};\n      // 只显示重要指标\n      const importantKeys = ['temperature', 'humidity', 'ph', 'battery'];\n      return Object.entries(props.source.metrics).filter(([key]) => importantKeys.includes(key)).reduce((acc, [key, value]) => {\n        acc[key] = value;\n        return acc;\n      }, {});\n    });\n\n    // 辅助函数\n    function getDeviceIcon(type) {\n      const icons = {\n        '温湿度': 'Temperature',\n        'PH值': 'Experiment',\n        '视频监控': 'VideoCamera',\n        '数据网关': 'Connection'\n      };\n      return icons[type] || 'Monitor';\n    }\n    function getDeviceTagType(type) {\n      const types = {\n        '温湿度': '',\n        'PH值': 'warning',\n        '视频监控': 'success',\n        '数据网关': 'info'\n      };\n      return types[type] || 'info';\n    }\n    function getStatusText(status) {\n      const statuses = {\n        online: '在线',\n        offline: '离线',\n        error: '异常'\n      };\n      return statuses[status] || status;\n    }\n    function getMetricLabel(key) {\n      const labels = {\n        temperature: '温度',\n        humidity: '湿度',\n        ph: 'PH值',\n        battery: '电量'\n      };\n      return labels[key] || key;\n    }\n    function formatMetricValue(value, key) {\n      const units = {\n        temperature: '°C',\n        humidity: '%',\n        ph: '',\n        battery: '%'\n      };\n      return `${value}${units[key] || ''}`;\n    }\n    const __returned__ = {\n      props,\n      emit,\n      filteredMetrics,\n      getDeviceIcon,\n      getDeviceTagType,\n      getStatusText,\n      getMetricLabel,\n      formatMetricValue,\n      computed,\n      get Monitor() {\n        return Monitor;\n      },\n      get Location() {\n        return Location;\n      },\n      get Timer() {\n        return Timer;\n      },\n      get View() {\n        return View;\n      },\n      get Setting() {\n        return Setting;\n      },\n      get Delete() {\n        return Delete;\n      },\n      get formatTime() {\n        return formatTime;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["computed","Monitor","Location","Timer","View","Setting","Delete","formatTime","props","__props","emit","__emit","filteredMetrics","source","metrics","importantKeys","Object","entries","filter","key","includes","reduce","acc","value","getDeviceIcon","type","icons","getDeviceTagType","types","getStatusText","status","statuses","online","offline","error","getMetricLabel","labels","temperature","humidity","ph","battery","formatMetricValue","units"],"sources":["D:/restore/water-melt/frontend/src/components/DeviceCard.vue"],"sourcesContent":["<!-- DeviceCard.vue -->\r\n<template>\r\n  <div class=\"device-card\" :class=\"source.status\">\r\n    <div class=\"device-card-header\">\r\n      <div class=\"device-info\">\r\n        <div class=\"device-name\">\r\n          <el-icon :class=\"getDeviceIcon(source.type)\"><Monitor /></el-icon>\r\n          {{ source.name }}\r\n        </div>\r\n        <div class=\"device-meta\">\r\n          <el-tag :type=\"getDeviceTagType(source.type)\" size=\"small\">{{ source.type }}</el-tag>\r\n          <span class=\"device-location\">\r\n            <el-icon><Location /></el-icon>\r\n            {{ source.location }}\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div class=\"device-status\">\r\n        <span class=\"status-dot\"></span>\r\n        {{ getStatusText(source.status) }}\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"device-metrics\">\r\n      <template v-if=\"source.metrics\">\r\n        <div v-for=\"(value, key) in filteredMetrics\" :key=\"key\" class=\"metric-item\">\r\n          <div class=\"metric-label\">{{ getMetricLabel(key) }}</div>\r\n          <div class=\"metric-value\">\r\n            {{ formatMetricValue(value, key) }}\r\n          </div>\r\n        </div>\r\n      </template>\r\n      <div v-else class=\"no-data\">暂无数据</div>\r\n    </div>\r\n\r\n    <div class=\"device-card-footer\">\r\n      <div class=\"update-time\">\r\n        <el-icon><Timer /></el-icon>\r\n        {{ formatTime(source.lastUpdate) }}\r\n      </div>\r\n      <div class=\"actions\">\r\n        <el-tooltip content=\"查看详情\" placement=\"top\">\r\n          <el-button link type=\"primary\" @click=\"$emit('view', source)\">\r\n            <el-icon><View /></el-icon>\r\n          </el-button>\r\n        </el-tooltip>\r\n        <el-tooltip content=\"配置设备\" placement=\"top\">\r\n          <el-button link type=\"primary\" @click=\"$emit('config', source)\">\r\n            <el-icon><Setting /></el-icon>\r\n          </el-button>\r\n        </el-tooltip>\r\n        <el-tooltip content=\"删除设备\" placement=\"top\">\r\n          <el-button link type=\"danger\" @click=\"$emit('delete', source)\">\r\n            <el-icon><Delete /></el-icon>\r\n          </el-button>\r\n        </el-tooltip>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed } from 'vue'\r\nimport { Monitor, Location, Timer, View, Setting, Delete } from '@element-plus/icons-vue'\r\nimport { formatTime } from '@/utils/format'\r\n\r\nconst props = defineProps({\r\n  source: {\r\n    type: Object,\r\n    required: true\r\n  }\r\n})\r\n\r\nconst emit = defineEmits(['view', 'config', 'delete'])\r\n\r\nconst filteredMetrics = computed(() => {\r\n  if (!props.source.metrics) return {}\r\n  // 只显示重要指标\r\n  const importantKeys = ['temperature', 'humidity', 'ph', 'battery']\r\n  return Object.entries(props.source.metrics)\r\n    .filter(([key]) => importantKeys.includes(key))\r\n    .reduce((acc, [key, value]) => {\r\n      acc[key] = value\r\n      return acc\r\n    }, {})\r\n})\r\n\r\n// 辅助函数\r\nfunction getDeviceIcon(type) {\r\n  const icons = {\r\n    '温湿度': 'Temperature',\r\n    'PH值': 'Experiment',\r\n    '视频监控': 'VideoCamera',\r\n    '数据网关': 'Connection'\r\n  }\r\n  return icons[type] || 'Monitor'\r\n}\r\n\r\nfunction getDeviceTagType(type) {\r\n  const types = {\r\n    '温湿度': '',\r\n    'PH值': 'warning',\r\n    '视频监控': 'success',\r\n    '数据网关': 'info'\r\n  }\r\n  return types[type] || 'info'\r\n}\r\n\r\nfunction getStatusText(status) {\r\n  const statuses = {\r\n    online: '在线',\r\n    offline: '离线',\r\n    error: '异常'\r\n  }\r\n  return statuses[status] || status\r\n}\r\n\r\nfunction getMetricLabel(key) {\r\n  const labels = {\r\n    temperature: '温度',\r\n    humidity: '湿度',\r\n    ph: 'PH值',\r\n    battery: '电量'\r\n  }\r\n  return labels[key] || key\r\n}\r\n\r\nfunction formatMetricValue(value, key) {\r\n  const units = {\r\n    temperature: '°C',\r\n    humidity: '%',\r\n    ph: '',\r\n    battery: '%'\r\n  }\r\n  return `${value}${units[key] || ''}`\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.device-card {\r\n  background: rgba(255, 255, 255, 0.04);\r\n  border-radius: 8px;\r\n  padding: 12px;\r\n  transition: all 0.3s ease;\r\n  border-left: 4px solid transparent;\r\n\r\n  &:hover {\r\n    transform: translateY(-2px);\r\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n  }\r\n\r\n  &.online { border-left-color: #52c41a; }\r\n  &.offline { border-left-color: #ff4d4f; }\r\n  &.error { border-left-color: #faad14; }\r\n}\r\n\r\n.device-card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n  margin-bottom: 12px;\r\n}\r\n\r\n.device-info {\r\n  flex: 1;\r\n  min-width: 0;\r\n\r\n  .device-name {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 8px;\r\n    font-size: 15px;\r\n    font-weight: 500;\r\n    margin-bottom: 8px;\r\n    \r\n    .el-icon {\r\n      font-size: 18px;\r\n      color: #40a9ff;\r\n    }\r\n  }\r\n\r\n  .device-meta {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 12px;\r\n    \r\n    .device-location {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 4px;\r\n      color: rgba(255, 255, 255, 0.65);\r\n      font-size: 13px;\r\n      \r\n      .el-icon {\r\n        font-size: 14px;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.device-status {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 6px;\r\n  font-size: 13px;\r\n  color: rgba(255, 255, 255, 0.65);\r\n  padding: 4px 8px;\r\n  border-radius: 4px;\r\n  background: rgba(0, 0, 0, 0.2);\r\n\r\n  .status-dot {\r\n    width: 6px;\r\n    height: 6px;\r\n    border-radius: 50%;\r\n  }\r\n\r\n  .online & .status-dot { background: #52c41a; }\r\n  .offline & .status-dot { background: #ff4d4f; }\r\n  .error & .status-dot { background: #faad14; }\r\n}\r\n\r\n.device-metrics {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\r\n  gap: 8px;\r\n  margin-bottom: 12px;\r\n  \r\n  .metric-item {\r\n    padding: 6px 8px;\r\n    background: rgba(0, 0, 0, 0.2);\r\n    border-radius: 4px;\r\n    \r\n    .metric-label {\r\n      font-size: 12px;\r\n      color: rgba(255, 255, 255, 0.45);\r\n      margin-bottom: 2px;\r\n    }\r\n    \r\n    .metric-value {\r\n      font-size: 14px;\r\n      color: rgba(255, 255, 255, 0.85);\r\n    }\r\n  }\r\n  \r\n  .no-data {\r\n    grid-column: 1 / -1;\r\n    text-align: center;\r\n    color: rgba(255, 255, 255, 0.45);\r\n    font-size: 13px;\r\n    padding: 8px;\r\n  }\r\n}\r\n\r\n.device-card-footer {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  \r\n  .update-time {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 4px;\r\n    color: rgba(255, 255, 255, 0.45);\r\n    font-size: 12px;\r\n    \r\n    .el-icon {\r\n      font-size: 14px;\r\n    }\r\n  }\r\n  \r\n  .actions {\r\n    display: flex;\r\n    gap: 8px;\r\n    \r\n    .el-button {\r\n      padding: 4px;\r\n      \r\n      .el-icon {\r\n        font-size: 16px;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style> "],"mappings":"AA8DA,SAASA,QAAQ,QAAQ,KAAK;AAC9B,SAASC,OAAO,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,IAAI,EAAEC,OAAO,EAAEC,MAAM,QAAQ,yBAAyB;AACzF,SAASC,UAAU,QAAQ,gBAAgB;;;;;;;;;;;;;;;IAE3C,MAAMC,KAAK,GAAGC,OAKZ;IAEF,MAAMC,IAAI,GAAGC,MAAyC;IAEtD,MAAMC,eAAe,GAAGZ,QAAQ,CAAC,MAAM;MACrC,IAAI,CAACQ,KAAK,CAACK,MAAM,CAACC,OAAO,EAAE,OAAO,CAAC,CAAC;MACpC;MACA,MAAMC,aAAa,GAAG,CAAC,aAAa,EAAE,UAAU,EAAE,IAAI,EAAE,SAAS,CAAC;MAClE,OAAOC,MAAM,CAACC,OAAO,CAACT,KAAK,CAACK,MAAM,CAACC,OAAO,CAAC,CACxCI,MAAM,CAAC,CAAC,CAACC,GAAG,CAAC,KAAKJ,aAAa,CAACK,QAAQ,CAACD,GAAG,CAAC,CAAC,CAC9CE,MAAM,CAAC,CAACC,GAAG,EAAE,CAACH,GAAG,EAAEI,KAAK,CAAC,KAAK;QAC7BD,GAAG,CAACH,GAAG,CAAC,GAAGI,KAAK;QAChB,OAAOD,GAAG;MACZ,CAAC,EAAE,CAAC,CAAC,CAAC;IACV,CAAC,CAAC;;IAEF;IACA,SAASE,aAAaA,CAACC,IAAI,EAAE;MAC3B,MAAMC,KAAK,GAAG;QACZ,KAAK,EAAE,aAAa;QACpB,KAAK,EAAE,YAAY;QACnB,MAAM,EAAE,aAAa;QACrB,MAAM,EAAE;MACV,CAAC;MACD,OAAOA,KAAK,CAACD,IAAI,CAAC,IAAI,SAAS;IACjC;IAEA,SAASE,gBAAgBA,CAACF,IAAI,EAAE;MAC9B,MAAMG,KAAK,GAAG;QACZ,KAAK,EAAE,EAAE;QACT,KAAK,EAAE,SAAS;QAChB,MAAM,EAAE,SAAS;QACjB,MAAM,EAAE;MACV,CAAC;MACD,OAAOA,KAAK,CAACH,IAAI,CAAC,IAAI,MAAM;IAC9B;IAEA,SAASI,aAAaA,CAACC,MAAM,EAAE;MAC7B,MAAMC,QAAQ,GAAG;QACfC,MAAM,EAAE,IAAI;QACZC,OAAO,EAAE,IAAI;QACbC,KAAK,EAAE;MACT,CAAC;MACD,OAAOH,QAAQ,CAACD,MAAM,CAAC,IAAIA,MAAM;IACnC;IAEA,SAASK,cAAcA,CAAChB,GAAG,EAAE;MAC3B,MAAMiB,MAAM,GAAG;QACbC,WAAW,EAAE,IAAI;QACjBC,QAAQ,EAAE,IAAI;QACdC,EAAE,EAAE,KAAK;QACTC,OAAO,EAAE;MACX,CAAC;MACD,OAAOJ,MAAM,CAACjB,GAAG,CAAC,IAAIA,GAAG;IAC3B;IAEA,SAASsB,iBAAiBA,CAAClB,KAAK,EAAEJ,GAAG,EAAE;MACrC,MAAMuB,KAAK,GAAG;QACZL,WAAW,EAAE,IAAI;QACjBC,QAAQ,EAAE,GAAG;QACbC,EAAE,EAAE,EAAE;QACNC,OAAO,EAAE;MACX,CAAC;MACD,OAAO,GAAGjB,KAAK,GAAGmB,KAAK,CAACvB,GAAG,CAAC,IAAI,EAAE,EAAE;IACtC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}