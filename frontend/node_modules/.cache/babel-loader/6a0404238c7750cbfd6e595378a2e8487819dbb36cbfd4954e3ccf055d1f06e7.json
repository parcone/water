{"ast":null,"code":"import request from '@/utils/request';\nconst state = {\n  token: 'mock-token',\n  // 模拟的 token\n  user: {\n    username: 'admin',\n    role: 'ADMIN'\n  } // 模拟的用户信息\n};\nconst mutations = {\n  SET_TOKEN(state, token) {\n    state.token = token;\n  },\n  SET_USER(state, user) {\n    state.user = user;\n  },\n  CLEAR_AUTH(state) {\n    state.token = 'mock-token';\n    state.user = {\n      username: 'admin',\n      role: 'ADMIN'\n    };\n  }\n};\nconst actions = {\n  async login({\n    commit\n  }, credentials) {\n    try {\n      // 直接返回模拟数据，不发送请求\n      const mockData = {\n        token: 'mock-token',\n        user: {\n          username: 'admin',\n          role: 'ADMIN'\n        }\n      };\n      commit('SET_TOKEN', mockData.token);\n      commit('SET_USER', mockData.user);\n      return mockData;\n    } catch (error) {\n      throw error;\n    }\n  },\n  async register({\n    commit\n  }, userData) {\n    try {\n      // 直接返回模拟数据，不发送请求\n      const mockData = {\n        token: 'mock-token',\n        user: {\n          username: userData.username || 'admin',\n          role: 'USER'\n        }\n      };\n      commit('SET_TOKEN', mockData.token);\n      commit('SET_USER', mockData.user);\n      return mockData;\n    } catch (error) {\n      throw error;\n    }\n  },\n  async getUserInfo({\n    commit\n  }) {\n    try {\n      // 直接返回模拟数据，不发送请求\n      const mockData = {\n        username: 'admin',\n        role: 'ADMIN'\n      };\n      commit('SET_USER', mockData);\n      return mockData;\n    } catch (error) {\n      throw error;\n    }\n  },\n  logout({\n    commit\n  }) {\n    commit('CLEAR_AUTH');\n  }\n};\nconst getters = {\n  isAuthenticated: state => true,\n  // 始终返回已认证\n  currentUser: state => state.user\n};\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions,\n  getters\n};","map":{"version":3,"names":["request","state","token","user","username","role","mutations","SET_TOKEN","SET_USER","CLEAR_AUTH","actions","login","commit","credentials","mockData","error","register","userData","getUserInfo","logout","getters","isAuthenticated","currentUser","namespaced"],"sources":["D:/restore/water-melt/frontend/src/store/modules/auth.js"],"sourcesContent":["import request from '@/utils/request'\r\n\r\nconst state = {\r\n  token: 'mock-token', // 模拟的 token\r\n  user: { username: 'admin', role: 'ADMIN' } // 模拟的用户信息\r\n}\r\n\r\nconst mutations = {\r\n  SET_TOKEN(state, token) {\r\n    state.token = token\r\n  },\r\n  SET_USER(state, user) {\r\n    state.user = user\r\n  },\r\n  CLEAR_AUTH(state) {\r\n    state.token = 'mock-token'\r\n    state.user = { username: 'admin', role: 'ADMIN' }\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  async login({ commit }, credentials) {\r\n    try {\r\n      // 直接返回模拟数据，不发送请求\r\n      const mockData = {\r\n        token: 'mock-token',\r\n        user: { username: 'admin', role: 'ADMIN' }\r\n      }\r\n      commit('SET_TOKEN', mockData.token)\r\n      commit('SET_USER', mockData.user)\r\n      return mockData\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  },\r\n\r\n  async register({ commit }, userData) {\r\n    try {\r\n      // 直接返回模拟数据，不发送请求\r\n      const mockData = {\r\n        token: 'mock-token',\r\n        user: { username: userData.username || 'admin', role: 'USER' }\r\n      }\r\n      commit('SET_TOKEN', mockData.token)\r\n      commit('SET_USER', mockData.user)\r\n      return mockData\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  },\r\n\r\n  async getUserInfo({ commit }) {\r\n    try {\r\n      // 直接返回模拟数据，不发送请求\r\n      const mockData = { username: 'admin', role: 'ADMIN' }\r\n      commit('SET_USER', mockData)\r\n      return mockData\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  },\r\n\r\n  logout({ commit }) {\r\n    commit('CLEAR_AUTH')\r\n  }\r\n}\r\n\r\nconst getters = {\r\n  isAuthenticated: state => true, // 始终返回已认证\r\n  currentUser: state => state.user\r\n}\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  mutations,\r\n  actions,\r\n  getters\r\n} "],"mappings":"AAAA,OAAOA,OAAO,MAAM,iBAAiB;AAErC,MAAMC,KAAK,GAAG;EACZC,KAAK,EAAE,YAAY;EAAE;EACrBC,IAAI,EAAE;IAAEC,QAAQ,EAAE,OAAO;IAAEC,IAAI,EAAE;EAAQ,CAAC,CAAC;AAC7C,CAAC;AAED,MAAMC,SAAS,GAAG;EAChBC,SAASA,CAACN,KAAK,EAAEC,KAAK,EAAE;IACtBD,KAAK,CAACC,KAAK,GAAGA,KAAK;EACrB,CAAC;EACDM,QAAQA,CAACP,KAAK,EAAEE,IAAI,EAAE;IACpBF,KAAK,CAACE,IAAI,GAAGA,IAAI;EACnB,CAAC;EACDM,UAAUA,CAACR,KAAK,EAAE;IAChBA,KAAK,CAACC,KAAK,GAAG,YAAY;IAC1BD,KAAK,CAACE,IAAI,GAAG;MAAEC,QAAQ,EAAE,OAAO;MAAEC,IAAI,EAAE;IAAQ,CAAC;EACnD;AACF,CAAC;AAED,MAAMK,OAAO,GAAG;EACd,MAAMC,KAAKA,CAAC;IAAEC;EAAO,CAAC,EAAEC,WAAW,EAAE;IACnC,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG;QACfZ,KAAK,EAAE,YAAY;QACnBC,IAAI,EAAE;UAAEC,QAAQ,EAAE,OAAO;UAAEC,IAAI,EAAE;QAAQ;MAC3C,CAAC;MACDO,MAAM,CAAC,WAAW,EAAEE,QAAQ,CAACZ,KAAK,CAAC;MACnCU,MAAM,CAAC,UAAU,EAAEE,QAAQ,CAACX,IAAI,CAAC;MACjC,OAAOW,QAAQ;IACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMC,QAAQA,CAAC;IAAEJ;EAAO,CAAC,EAAEK,QAAQ,EAAE;IACnC,IAAI;MACF;MACA,MAAMH,QAAQ,GAAG;QACfZ,KAAK,EAAE,YAAY;QACnBC,IAAI,EAAE;UAAEC,QAAQ,EAAEa,QAAQ,CAACb,QAAQ,IAAI,OAAO;UAAEC,IAAI,EAAE;QAAO;MAC/D,CAAC;MACDO,MAAM,CAAC,WAAW,EAAEE,QAAQ,CAACZ,KAAK,CAAC;MACnCU,MAAM,CAAC,UAAU,EAAEE,QAAQ,CAACX,IAAI,CAAC;MACjC,OAAOW,QAAQ;IACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMG,WAAWA,CAAC;IAAEN;EAAO,CAAC,EAAE;IAC5B,IAAI;MACF;MACA,MAAME,QAAQ,GAAG;QAAEV,QAAQ,EAAE,OAAO;QAAEC,IAAI,EAAE;MAAQ,CAAC;MACrDO,MAAM,CAAC,UAAU,EAAEE,QAAQ,CAAC;MAC5B,OAAOA,QAAQ;IACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAEDI,MAAMA,CAAC;IAAEP;EAAO,CAAC,EAAE;IACjBA,MAAM,CAAC,YAAY,CAAC;EACtB;AACF,CAAC;AAED,MAAMQ,OAAO,GAAG;EACdC,eAAe,EAAEpB,KAAK,IAAI,IAAI;EAAE;EAChCqB,WAAW,EAAErB,KAAK,IAAIA,KAAK,CAACE;AAC9B,CAAC;AAED,eAAe;EACboB,UAAU,EAAE,IAAI;EAChBtB,KAAK;EACLK,SAAS;EACTI,OAAO;EACPU;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}