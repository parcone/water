{"ast":null,"code":"import { ref, computed, onMounted, onUnmounted, onActivated, onDeactivated, nextTick, watch } from 'vue';\nimport { useStore } from 'vuex';\nimport { debounce } from 'lodash-es';\nimport cache from '@/utils/cache';\nimport BaseEChart from '@/components/BaseEChart.vue';\nimport { Monitor, Connection, Warning, InfoFilled, Cpu, ArrowUp, ArrowDown, Plus, View, Setting, Delete, Search, Grid, List, Refresh, Download, Timer, Location } from '@element-plus/icons-vue';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nimport AnimatedNumber from '@/components/AnimatedNumber.vue';\nimport { exportToExcel } from '@/utils/excel';\nimport BaseMap from '@/components/BaseMap.vue';\nimport { formatTime, formatNumber } from '@/utils/format';\nimport PhotoTimeline from '@/components/PhotoTimeline.vue';\nimport VirtualList from 'vue-virtual-scroll-list';\nimport DeviceCard from '@/components/DeviceCard.vue';\n\n// chart update timer placeholder\nconst MAX_RECONNECT_ATTEMPTS = 5;\n\n// 状态管理\nconst DEVICE_CACHE_KEY = 'monitoring_devices';\nconst DEVICE_CACHE_EXPIRY = 5 * 60 * 1000; // 5分钟\n\n// 防抖的搜索和筛选\n\nexport default {\n  __name: 'Monitoring',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    let chartUpdateTimer = null;\n\n    // WebSocket连接\n    const ws = ref(null);\n    const wsReconnectTimer = ref(null);\n    const wsReconnectAttempts = ref(0);\n    const store = useStore();\n\n    // 加载状态\n    const loading = ref(false);\n\n    // 缓存设备数据\n    const debouncedSearch = debounce(query => {\n      searchQuery.value = query;\n    }, 300);\n    const debouncedFilter = debounce((status, type) => {\n      filterStatus.value = status;\n      filterType.value = type;\n    }, 300);\n\n    // 初始化WebSocket连接\n    const initWebSocket = () => {\n      if (ws.value) return;\n      ws.value = new WebSocket(process.env.VUE_APP_WS_URL || 'ws://localhost:8082/api/ws/monitoring');\n      ws.value.onopen = () => {\n        console.log('WebSocket connected');\n        wsReconnectAttempts.value = 0;\n      };\n      ws.value.onmessage = event => {\n        const data = JSON.parse(event.data);\n        handleWebSocketMessage(data);\n      };\n      ws.value.onclose = () => {\n        console.log('WebSocket disconnected');\n        ws.value = null;\n        handleWebSocketReconnect();\n      };\n      ws.value.onerror = error => {\n        console.error('WebSocket error:', error);\n        ws.value?.close();\n      };\n    };\n\n    // 处理WebSocket重连\n    const handleWebSocketReconnect = () => {\n      if (wsReconnectAttempts.value >= MAX_RECONNECT_ATTEMPTS) {\n        ElMessage.error('连接服务器失败，请刷新页面重试');\n        return;\n      }\n      if (wsReconnectTimer.value) {\n        clearTimeout(wsReconnectTimer.value);\n      }\n      wsReconnectTimer.value = setTimeout(() => {\n        wsReconnectAttempts.value++;\n        initWebSocket();\n      }, 3000 * Math.min(wsReconnectAttempts.value + 1, 5));\n    };\n\n    // 处理WebSocket消息\n    const handleWebSocketMessage = data => {\n      switch (data.type) {\n        case 'deviceUpdate':\n          updateDeviceData(data.payload);\n          break;\n        case 'alert':\n          handleNewAlert(data.payload);\n          break;\n        case 'stats':\n          updateDeviceStats(data.payload);\n          break;\n      }\n    };\n\n    // 更新设备数据\n    const updateDeviceData = async deviceData => {\n      const index = deviceList.value.findIndex(d => d.name === deviceData.name);\n      if (index !== -1) {\n        deviceList.value[index] = {\n          ...deviceList.value[index],\n          ...deviceData\n        };\n        // 更新缓存\n        await cache.set(DEVICE_CACHE_KEY, deviceList.value, DEVICE_CACHE_EXPIRY);\n      }\n    };\n\n    // 处理新告警\n    const handleNewAlert = alert => {\n      alerts.value.unshift({\n        ...alert,\n        unread: true\n      });\n\n      // 限制告警列表长度\n      if (alerts.value.length > 50) {\n        alerts.value = alerts.value.slice(0, 50);\n      }\n\n      // 显示告警通知\n      ElMessage({\n        type: alert.level === 'error' ? 'error' : alert.level === 'warning' ? 'warning' : 'info',\n        message: `${alert.device}: ${alert.title}`,\n        duration: 5000\n      });\n    };\n\n    // 更新设备统计数据\n    const updateDeviceStats = stats => {\n      deviceStats.value = stats;\n    };\n\n    // 初始化数据\n    const initData = async () => {\n      loading.value = true;\n      try {\n        // 尝试从缓存获取数据\n        const cachedData = await cache.get(DEVICE_CACHE_KEY);\n        if (cachedData) {\n          deviceList.value = cachedData;\n          loading.value = false;\n          return;\n        }\n\n        // 如果没有缓存，从服务器获取\n        const response = await store.dispatch('device/fetchDevices');\n        deviceList.value = response;\n\n        // 更新缓存\n        await cache.set(DEVICE_CACHE_KEY, response, DEVICE_CACHE_EXPIRY);\n      } catch (error) {\n        ElMessage.error('获取设备数据失败');\n        console.error('Failed to fetch devices:', error);\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 预测相关数据\n    const predictionData = ref({\n      temperature: [],\n      humidity: [],\n      ph: []\n    });\n\n    // 预测时间范围\n    const predictionTimeRange = ref('24h');\n    const timeRangeOptions = [{\n      label: '24小时',\n      value: '24h'\n    }, {\n      label: '48小时',\n      value: '48h'\n    }, {\n      label: '7天',\n      value: '7d'\n    }];\n\n    // 预测配置\n    const predictionConfig = ref({\n      enableAutoUpdate: true,\n      updateInterval: 30,\n      // 分钟\n      confidenceInterval: 0.95,\n      showConfidenceBounds: true\n    });\n\n    // 预测图表配置\n    const predictionChartOptions = computed(() => {\n      return {\n        title: {\n          text: '智能预测分析',\n          left: 'center',\n          textStyle: {\n            color: '#fff'\n          }\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross'\n          }\n        },\n        legend: {\n          data: ['实际值', '预测值', '置信区间'],\n          bottom: 0,\n          textStyle: {\n            color: '#fff'\n          }\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '15%',\n          top: '15%',\n          containLabel: true\n        },\n        xAxis: {\n          type: 'time',\n          boundaryGap: false,\n          axisLine: {\n            lineStyle: {\n              color: '#fff'\n            }\n          }\n        },\n        yAxis: {\n          type: 'value',\n          axisLine: {\n            lineStyle: {\n              color: '#fff'\n            }\n          },\n          splitLine: {\n            lineStyle: {\n              color: 'rgba(255,255,255,0.1)'\n            }\n          }\n        },\n        series: [{\n          name: '实际值',\n          type: 'line',\n          data: generateTimeData(25, 2),\n          itemStyle: {\n            color: '#1890ff'\n          }\n        }, {\n          name: '预测值',\n          type: 'line',\n          data: generatePredictionData(25, 2),\n          lineStyle: {\n            type: 'dashed'\n          },\n          itemStyle: {\n            color: '#52c41a'\n          }\n        }, {\n          name: '置信区间',\n          type: 'line',\n          data: generateConfidenceBounds(25, 2),\n          lineStyle: {\n            color: 'rgba(82, 196, 26, 0.2)'\n          },\n          areaStyle: {\n            color: 'rgba(82, 196, 26, 0.1)'\n          }\n        }]\n      };\n    });\n\n    // 生成预测数据\n    function generatePredictionData(baseValue, variance) {\n      const now = new Date();\n      const data = [];\n      for (let i = 0; i < 24; i++) {\n        const time = new Date(now.getTime() + i * 3600000);\n        const value = baseValue + Math.sin(i / 12 * Math.PI) * variance;\n        data.push([time.toISOString(), +value.toFixed(1)]);\n      }\n      return data;\n    }\n\n    // 生成置信区间\n    function generateConfidenceBounds(baseValue, variance) {\n      const now = new Date();\n      const data = [];\n      const confidenceMultiplier = 1.96; // 95% 置信区间\n\n      for (let i = 0; i < 24; i++) {\n        const time = new Date(now.getTime() + i * 3600000);\n        const prediction = baseValue + Math.sin(i / 12 * Math.PI) * variance;\n        const uncertainty = Math.abs(Math.sin(i / 12 * Math.PI)) * variance * 0.5;\n        data.push([time.toISOString(), +(prediction - uncertainty * confidenceMultiplier).toFixed(1), +(prediction + uncertainty * confidenceMultiplier).toFixed(1)]);\n      }\n      return data;\n    }\n\n    // 更新预测数据\n    const updatePredictionData = async () => {\n      try {\n        // TODO: 从后端获取预测数据\n        const response = await store.dispatch('device/fetchPredictions', {\n          timeRange: predictionTimeRange.value,\n          deviceId: selectedDevice.value\n        });\n        predictionData.value = response;\n      } catch (error) {\n        console.error('Failed to fetch prediction data:', error);\n        ElMessage.error('获取预测数据失败');\n      }\n    };\n\n    // 自动更新预测数据\n    let predictionUpdateTimer = null;\n    const startPredictionUpdate = () => {\n      if (predictionConfig.value.enableAutoUpdate) {\n        predictionUpdateTimer = setInterval(() => {\n          updatePredictionData();\n        }, predictionConfig.value.updateInterval * 60 * 1000);\n      }\n    };\n    const stopPredictionUpdate = () => {\n      if (predictionUpdateTimer) {\n        clearInterval(predictionUpdateTimer);\n        predictionUpdateTimer = null;\n      }\n    };\n\n    // 监听配置变化\n    watch(() => predictionConfig.value.enableAutoUpdate, newValue => {\n      if (newValue) {\n        startPredictionUpdate();\n      } else {\n        stopPredictionUpdate();\n      }\n    });\n    watch(() => predictionConfig.value.updateInterval, () => {\n      if (predictionConfig.value.enableAutoUpdate) {\n        stopPredictionUpdate();\n        startPredictionUpdate();\n      }\n    });\n\n    // 视图模式\n    const viewMode = ref('grid');\n\n    // 自动刷新\n    const autoRefresh = ref(true);\n    const refreshInterval = ref(30); // 秒\n    let refreshTimer = null;\n\n    // 设备数据结构\n    const deviceList = ref([{\n      name: '传感器A',\n      type: '温湿度',\n      status: 'online',\n      location: '田块1',\n      lastUpdate: '2024-03-15 14:30:00',\n      metrics: {\n        temperature: 25.5,\n        humidity: 65.2,\n        battery: 85\n      }\n    }, {\n      name: '摄像头B',\n      type: '视频监控',\n      status: 'offline',\n      location: '田块2',\n      lastUpdate: '2024-03-15 10:15:00',\n      metrics: {\n        resolution: '1080p',\n        framerate: 30,\n        battery: 45\n      }\n    }, {\n      name: '网关C',\n      type: '数据网关',\n      status: 'online',\n      location: '田块3',\n      lastUpdate: '2024-03-15 14:35:00',\n      metrics: {\n        throughput: 2.5,\n        latency: 50,\n        connections: 12\n      }\n    }, {\n      name: '传感器D',\n      type: 'PH值',\n      status: 'error',\n      location: '田块4',\n      lastUpdate: '2024-03-15 14:20:00',\n      metrics: {\n        ph: 8.5,\n        temperature: 26.8,\n        battery: 30\n      }\n    },\n    // 添加更多测试数据\n    ...Array.from({\n      length: 20\n    }, (_, i) => ({\n      name: `传感器${String.fromCharCode(69 + i)}`,\n      type: ['温湿度', 'PH值', '视频监控', '数据网关'][i % 4],\n      status: ['online', 'offline', 'error'][i % 3],\n      location: `田块${i + 5}`,\n      lastUpdate: '2024-03-15 14:30:00',\n      metrics: {\n        temperature: 20 + Math.random() * 10,\n        humidity: 50 + Math.random() * 30,\n        battery: 30 + Math.random() * 70,\n        ph: 6 + Math.random() * 2,\n        throughput: 1 + Math.random() * 4,\n        latency: 20 + Math.random() * 80,\n        connections: Math.floor(5 + Math.random() * 20),\n        resolution: ['720p', '1080p', '4K'][i % 3],\n        framerate: [24, 30, 60][i % 3]\n      }\n    }))]);\n\n    // 设备配置\n    const showConfig = ref(false);\n    const configForm = ref(null);\n    const deviceConfig = ref({\n      sampleRate: 60,\n      thresholds: {\n        temperature: {\n          min: 20,\n          max: 30\n        },\n        humidity: {\n          min: 40,\n          max: 80\n        },\n        ph: {\n          min: 6.5,\n          max: 7.5\n        }\n      },\n      autoCalibration: true,\n      storage: 'local'\n    });\n    const configRules = {\n      sampleRate: [{\n        required: true,\n        message: '请输入采集频率',\n        trigger: 'blur'\n      }, {\n        type: 'number',\n        min: 1,\n        max: 3600,\n        message: '频率范围1-3600秒',\n        trigger: 'blur'\n      }]\n    };\n\n    // 历史数据\n    const historyDateRange = ref([]);\n    const selectedMetrics = ref([]);\n    const availableMetrics = [{\n      label: '温度',\n      value: 'temperature'\n    }, {\n      label: '湿度',\n      value: 'humidity'\n    }, {\n      label: 'PH值',\n      value: 'ph'\n    }, {\n      label: '电量',\n      value: 'battery'\n    }];\n    const dateShortcuts = [{\n      text: '最近一天',\n      value: () => {\n        const end = new Date();\n        const start = new Date();\n        start.setTime(start.getTime() - 3600 * 1000 * 24);\n        return [start, end];\n      }\n    }, {\n      text: '最近一周',\n      value: () => {\n        const end = new Date();\n        const start = new Date();\n        start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n        return [start, end];\n      }\n    }];\n\n    // 计算属性\n    const currentDevice = computed(() => {\n      return deviceList.value.find(d => d.name === selectedDevice.value);\n    });\n    const unreadAlerts = computed(() => {\n      return alerts.value.filter(a => a.unread);\n    });\n\n    // 方法\n    const selectDevice = device => {\n      selectedDevice.value = device.name;\n      updateDeviceCharts();\n    };\n    const toggleAutoRefresh = value => {\n      if (value) {\n        startAutoRefresh();\n      } else {\n        stopAutoRefresh();\n      }\n    };\n    const startAutoRefresh = () => {\n      if (refreshTimer) {\n        clearInterval(refreshTimer);\n      }\n      refreshTimer = setInterval(() => {\n        refreshData();\n      }, refreshInterval.value * 1000);\n    };\n    const stopAutoRefresh = () => {\n      if (refreshTimer) {\n        clearInterval(refreshTimer);\n        refreshTimer = null;\n      }\n    };\n    const refreshData = async () => {\n      loading.value = true;\n      try {\n        await updateDeviceData();\n        if (selectedDevice.value) {\n          updateDeviceCharts();\n        }\n      } catch (error) {\n        console.error('Failed to refresh data:', error);\n        ElMessage.error('刷新数据失败');\n      } finally {\n        loading.value = false;\n      }\n    };\n    const getMetricLabel = key => {\n      const labels = {\n        temperature: '温度',\n        humidity: '湿度',\n        ph: 'PH值',\n        battery: '电量',\n        throughput: '流量',\n        latency: '延迟',\n        connections: '连接数',\n        framerate: '帧率',\n        resolution: '分辨率'\n      };\n      return labels[key] || key;\n    };\n    const getMetricUnit = key => {\n      const units = {\n        temperature: '°C',\n        humidity: '%',\n        ph: '',\n        battery: '%',\n        throughput: 'MB/s',\n        latency: 'ms',\n        connections: '',\n        framerate: 'fps',\n        resolution: ''\n      };\n      return units[key] || '';\n    };\n    const formatMetricValue = (value, key) => {\n      if (typeof value === 'number') {\n        return `${formatNumber(value)}${getMetricUnit(key)}`;\n      }\n      return value;\n    };\n    const getMetricStatus = (value, key) => {\n      const thresholds = deviceConfig.value.thresholds[key];\n      if (!thresholds) return {\n        type: '',\n        effect: 'plain',\n        text: '正常'\n      };\n      if (value < thresholds.min) {\n        return {\n          type: 'danger',\n          effect: 'dark',\n          text: '过低'\n        };\n      }\n      if (value > thresholds.max) {\n        return {\n          type: 'danger',\n          effect: 'dark',\n          text: '过高'\n        };\n      }\n      return {\n        type: 'success',\n        effect: 'dark',\n        text: '正常'\n      };\n    };\n    const getMetricChartOptions = key => {\n      return {\n        grid: {\n          top: 20,\n          right: 20,\n          bottom: 20,\n          left: 50\n        },\n        xAxis: {\n          type: 'time',\n          axisLine: {\n            lineStyle: {\n              color: '#fff'\n            }\n          }\n        },\n        yAxis: {\n          type: 'value',\n          axisLine: {\n            lineStyle: {\n              color: '#fff'\n            }\n          },\n          splitLine: {\n            lineStyle: {\n              color: 'rgba(255,255,255,0.1)'\n            }\n          }\n        },\n        series: [{\n          type: 'line',\n          data: generateMetricData(key),\n          smooth: true,\n          showSymbol: false,\n          lineStyle: {\n            width: 2\n          },\n          areaStyle: {\n            opacity: 0.1\n          }\n        }]\n      };\n    };\n    const generateMetricData = key => {\n      const now = new Date();\n      const data = [];\n      for (let i = 0; i < 60; i++) {\n        const time = new Date(now - (59 - i) * 60000);\n        const baseValue = currentDevice.value.metrics[key];\n        const value = typeof baseValue === 'number' ? baseValue + (Math.random() * 2 - 1) : baseValue;\n        data.push([time.getTime(), value]);\n      }\n      return data;\n    };\n    const loadHistoryData = async () => {\n      if (!historyDateRange.value || !selectedDevice.value) return;\n      loading.value = true;\n      try {\n        // TODO: 从后端获取历史数据\n        const response = await store.dispatch('device/fetchHistory', {\n          deviceId: selectedDevice.value,\n          startTime: historyDateRange.value[0],\n          endTime: historyDateRange.value[1],\n          metrics: selectedMetrics.value\n        });\n\n        // 更新图表\n        updateHistoryChart(response);\n      } catch (error) {\n        console.error('Failed to load history data:', error);\n        ElMessage.error('获取历史数据失败');\n      } finally {\n        loading.value = false;\n      }\n    };\n    const updateHistoryChart = data => {\n      // TODO: 更新历史数据图表\n    };\n    const viewHistory = device => {\n      selectDevice(device);\n      showDetail.value = true;\n      nextTick(() => {\n        // 切换到历史数据标签\n        // TODO: 实现标签切换\n      });\n    };\n    const configDevice = device => {\n      selectDevice(device);\n      showConfig.value = true;\n    };\n    const saveConfig = async () => {\n      if (!configForm.value) return;\n      try {\n        await configForm.value.validate();\n        // TODO: 保存设备配置\n        showConfig.value = false;\n        ElMessage.success('配置保存成功');\n      } catch (error) {\n        console.error('Config validation failed:', error);\n      }\n    };\n\n    // 生命周期钩子\n    onMounted(() => {\n      initWebSocket();\n      initData();\n      if (autoRefresh.value) {\n        startAutoRefresh();\n      }\n    });\n    onUnmounted(() => {\n      if (ws.value) {\n        ws.value.close();\n        ws.value = null;\n      }\n      if (wsReconnectTimer.value) {\n        clearTimeout(wsReconnectTimer.value);\n      }\n      stopAutoRefresh();\n    });\n\n    // keep-alive 支持\n    onActivated(() => {\n      initWebSocket();\n      initData();\n    });\n    onDeactivated(() => {\n      if (ws.value) {\n        ws.value.close();\n        ws.value = null;\n      }\n    });\n\n    // 设备统计数据\n    const deviceStats = ref({\n      online: deviceList.value.filter(d => d.status === 'online').length,\n      offline: deviceList.value.filter(d => d.status === 'offline').length,\n      error: deviceList.value.filter(d => d.status === 'error').length,\n      total: deviceList.value.length\n    });\n\n    // 告警数据\n    const alerts = ref(Array.from({\n      length: 10\n    }, (_, i) => ({\n      id: i + 1,\n      title: ['PH值超出正常范围', '设备离线', '数据传输异常'][i % 3],\n      device: `设备-${i + 1}`,\n      time: `${(i + 1) * 5} 分钟前`,\n      level: ['error', 'warning', 'info'][i % 3],\n      unread: i < 3\n    })));\n\n    // 搜索和筛选\n    const searchQuery = ref('');\n    const filterStatus = ref('');\n    const filterType = ref('');\n\n    // 优化的计算属性\n    const filteredDeviceList = computed(() => {\n      if (!deviceList.value) return [];\n      const query = searchQuery.value.toLowerCase();\n      const status = filterStatus.value;\n      const type = filterType.value;\n      return deviceList.value.filter(device => {\n        if (status && device.status !== status) return false;\n        if (type && device.type !== type) return false;\n        if (!query) return true;\n        return device.name.toLowerCase().includes(query) || device.type.toLowerCase().includes(query) || device.location.toLowerCase().includes(query);\n      });\n    });\n\n    // 分页\n    const pageSize = ref(12);\n    const currentPage = ref(1);\n    const totalPages = computed(() => Math.ceil(filteredDeviceList.value.length / pageSize.value));\n    const paginatedDeviceList = computed(() => {\n      const start = (currentPage.value - 1) * pageSize.value;\n      return filteredDeviceList.value.slice(start, start + pageSize.value);\n    });\n    function handlePageChange(page) {\n      currentPage.value = page;\n    }\n\n    // 设备详情相关\n    const showDetail = ref(false);\n    const deviceAlerts = ref([{\n      time: '2024-03-15 14:20:00',\n      title: 'PH值超出正常范围',\n      level: 'error',\n      status: '未处理'\n    }, {\n      time: '2024-03-15 10:15:00',\n      title: '设备离线',\n      level: 'warning',\n      status: '已处理'\n    }, {\n      time: '2024-03-14 16:30:00',\n      title: '数据异常',\n      level: 'info',\n      status: '已处理'\n    }]);\n\n    // 新增设备相关\n    const showAddDeviceDialog = ref(false);\n    const deviceForm = ref(null);\n    const newDevice = ref({\n      name: '',\n      type: '',\n      location: ''\n    });\n    const deviceRules = {\n      name: [{\n        required: true,\n        message: '请输入设备名称',\n        trigger: 'blur'\n      }, {\n        min: 2,\n        max: 20,\n        message: '长度在 2 到 20 个字符',\n        trigger: 'blur'\n      }],\n      type: [{\n        required: true,\n        message: '请选择设备类型',\n        trigger: 'change'\n      }],\n      location: [{\n        required: true,\n        message: '请输入安装位置',\n        trigger: 'blur'\n      }]\n    };\n\n    // 图表相关\n    const selectedDevice = ref('');\n    /* 实时数据图表配置 */\n    const chartOptions = computed(() => {\n      const device = currentDevice.value || deviceList.value[0];\n      if (!device) return {};\n      return {\n        backgroundColor: 'transparent',\n        tooltip: {\n          trigger: 'axis'\n        },\n        grid: {\n          top: 40,\n          right: 20,\n          bottom: 20,\n          left: 50\n        },\n        legend: {\n          data: ['温度', '湿度', 'PH值'],\n          textStyle: {\n            color: '#fff'\n          }\n        },\n        xAxis: {\n          type: 'time',\n          axisLine: {\n            lineStyle: {\n              color: '#fff'\n            }\n          },\n          splitLine: {\n            show: false\n          }\n        },\n        yAxis: {\n          type: 'value',\n          axisLine: {\n            lineStyle: {\n              color: '#fff'\n            }\n          },\n          splitLine: {\n            lineStyle: {\n              color: 'rgba(255,255,255,0.1)'\n            }\n          }\n        },\n        series: [{\n          name: '温度',\n          type: 'line',\n          smooth: true,\n          showSymbol: false,\n          data: generateTimeData(25, 2)\n        }, {\n          name: '湿度',\n          type: 'line',\n          smooth: true,\n          showSymbol: false,\n          data: generateTimeData(60, 5)\n        }, {\n          name: 'PH值',\n          type: 'line',\n          smooth: true,\n          showSymbol: false,\n          data: generateTimeData(7, 0.5)\n        }]\n      };\n    });\n    const historyChartOptions = computed(() => ({\n      backgroundColor: 'transparent',\n      title: {\n        text: '历史数据趋势',\n        textStyle: {\n          color: '#fff'\n        }\n      },\n      tooltip: {\n        trigger: 'axis',\n        axisPointer: {\n          type: 'shadow'\n        }\n      },\n      legend: {\n        data: ['温度', '湿度', 'PH值'],\n        textStyle: {\n          color: '#fff'\n        },\n        top: 30\n      },\n      grid: {\n        top: 80,\n        right: 20,\n        bottom: 30,\n        left: 50,\n        containLabel: true\n      },\n      xAxis: {\n        type: 'category',\n        data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日'],\n        axisLabel: {\n          color: '#fff'\n        },\n        axisLine: {\n          lineStyle: {\n            color: '#8c8c8c'\n          }\n        }\n      },\n      yAxis: {\n        type: 'value',\n        axisLabel: {\n          color: '#fff'\n        },\n        splitLine: {\n          lineStyle: {\n            color: 'rgba(255, 255, 255, 0.1)'\n          }\n        },\n        axisLine: {\n          lineStyle: {\n            color: '#8c8c8c'\n          }\n        }\n      },\n      series: [{\n        name: '温度',\n        type: 'bar',\n        data: [23, 24, 25, 23, 24, 26, 25],\n        itemStyle: {\n          color: {\n            type: 'linear',\n            x: 0,\n            y: 0,\n            x2: 0,\n            y2: 1,\n            colorStops: [{\n              offset: 0,\n              color: '#1890ff'\n            }, {\n              offset: 1,\n              color: 'rgba(24, 144, 255, 0.3)'\n            }]\n          }\n        }\n      }, {\n        name: '湿度',\n        type: 'bar',\n        data: [65, 63, 68, 64, 62, 65, 66],\n        itemStyle: {\n          color: {\n            type: 'linear',\n            x: 0,\n            y: 0,\n            x2: 0,\n            y2: 1,\n            colorStops: [{\n              offset: 0,\n              color: '#52c41a'\n            }, {\n              offset: 1,\n              color: 'rgba(82, 196, 26, 0.3)'\n            }]\n          }\n        }\n      }, {\n        name: 'PH值',\n        type: 'bar',\n        data: [7.1, 7.0, 7.2, 7.1, 7.0, 7.1, 7.2],\n        itemStyle: {\n          color: {\n            type: 'linear',\n            x: 0,\n            y: 0,\n            x2: 0,\n            y2: 1,\n            colorStops: [{\n              offset: 0,\n              color: '#faad14'\n            }, {\n              offset: 1,\n              color: 'rgba(250, 173, 20, 0.3)'\n            }]\n          }\n        }\n      }]\n    }));\n\n    // 生成时间序列数据\n    function generateTimeData(baseValue, variance) {\n      const now = new Date();\n      const data = [];\n      for (let i = 0; i < 60; i++) {\n        const time = new Date(now - (59 - i) * 60000);\n        data.push([time.toISOString(), +(baseValue + (Math.random() * 2 - 1) * variance).toFixed(1)]);\n      }\n      return data;\n    }\n\n    // 优化的设备操作\n    const viewDetail = async device => {\n      currentDevice.value = device;\n      showDetail.value = true;\n      try {\n        // 预加载设备历史数据\n        const history = await store.dispatch('device/fetchDeviceHistory', device.name);\n        await nextTick();\n        // 可以在这里更新依赖于历史数据的图表或组件\n      } catch (error) {\n        ElMessage.error('获取设备历史数据失败');\n      }\n    };\n    const deleteDevice = async device => {\n      try {\n        await ElMessageBox.confirm(`您正在尝试删除设备：<strong>${device.name}</strong><br/>此操作将永久删除该设备及其所有关联数据，且无法恢复。`, '删除确认', {\n          type: 'warning',\n          confirmButtonText: '确定删除',\n          cancelButtonText: '取消',\n          dangerouslyUseHTMLString: true\n        });\n        loading.value = true;\n        await store.dispatch('device/deleteDevice', device.name);\n\n        // 更新本地数据和缓存\n        deviceList.value = deviceList.value.filter(d => d.name !== device.name);\n        await cache.set(DEVICE_CACHE_KEY, deviceList.value, DEVICE_CACHE_EXPIRY);\n        ElMessage.success('设备已删除');\n      } catch (error) {\n        if (error !== 'cancel') {\n          ElMessage.error('删除设备失败');\n          console.error('Delete device error:', error);\n        }\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 优化的告警处理\n    const handleAlert = async alert => {\n      const device = deviceList.value.find(d => d.name === alert.device);\n      if (device) {\n        viewDetail(device);\n      }\n      if (alert.unread) {\n        // 使用 nextTick 确保在 DOM 更新后再标记为已读\n        await nextTick();\n        const index = alerts.value.findIndex(a => a.id === alert.id);\n        if (index !== -1 && alerts.value[index].unread) {\n          alerts.value[index].unread = false;\n          try {\n            await store.dispatch('alert/markAsRead', alert.id);\n          } catch (error) {\n            // 如果标记已读失败，将状态改回未读\n            alerts.value[index].unread = true;\n            console.error('Failed to mark alert as read:', error);\n          }\n        }\n      }\n    };\n    function showAddDevice() {\n      showAddDeviceDialog.value = true;\n    }\n    function submitNewDevice() {\n      deviceForm.value?.validate(valid => {\n        if (valid) {\n          const device = {\n            ...newDevice.value,\n            status: 'online',\n            latestData: '暂无数据',\n            lastUpdate: new Date().toLocaleString()\n          };\n          deviceList.value.push(device);\n          showAddDeviceDialog.value = false;\n          ElMessage.success('添加成功');\n          newDevice.value = {\n            name: '',\n            type: '',\n            location: ''\n          };\n        }\n      });\n    }\n\n    // Helper functions\n    function getDeviceIcon(type) {\n      const icons = {\n        '温湿度': 'Temperature',\n        'PH值': 'Experiment',\n        '视频监控': 'VideoCamera',\n        '数据网关': 'Connection'\n      };\n      return icons[type] || 'Monitor';\n    }\n    function getDeviceTagType(type) {\n      const types = {\n        '温湿度': '',\n        'PH值': 'warning',\n        '视频监控': 'success',\n        '数据网关': 'info'\n      };\n      return types[type] || 'info';\n    }\n    function getStatusText(status) {\n      const statuses = {\n        online: '在线',\n        offline: '离线',\n        error: '异常'\n      };\n      return statuses[status] || status;\n    }\n    function getAlertTagType(level) {\n      const types = {\n        error: 'danger',\n        warning: 'warning',\n        info: 'info'\n      };\n      return types[level] || 'info';\n    }\n\n    // 状态选项\n    const statusOptions = [{\n      label: '全部',\n      value: ''\n    }, {\n      label: '在线',\n      value: 'online'\n    }, {\n      label: '离线',\n      value: 'offline'\n    }, {\n      label: '异常',\n      value: 'error'\n    }];\n\n    // 类型选项\n    const typeOptions = [{\n      label: '全部',\n      value: ''\n    }, {\n      label: '温湿度传感器',\n      value: '温湿度'\n    }, {\n      label: 'PH值传感器',\n      value: 'PH值'\n    }, {\n      label: '视频监控',\n      value: '视频监控'\n    }, {\n      label: '数据网关',\n      value: '数据网关'\n    }];\n\n    // 高级搜索\n    const showAdvancedSearchDialog = ref(false);\n    const advancedSearch = ref({\n      name: '',\n      type: '',\n      status: '',\n      location: '',\n      updateTime: []\n    });\n\n    // Excel导出\n    const exporting = ref(false);\n\n    // 导出数据\n    const exportData = async () => {\n      try {\n        exporting.value = true;\n        await exportToExcel(deviceList.value, {\n          filename: `设备列表_${new Date().toLocaleDateString()}`,\n          sheets: [{\n            name: '设备列表',\n            columns: [{\n              header: '设备名称',\n              key: 'name'\n            }, {\n              header: '设备类型',\n              key: 'type'\n            }, {\n              header: '状态',\n              key: 'status'\n            }, {\n              header: '位置',\n              key: 'location'\n            }, {\n              header: '最近数据',\n              key: 'latestData'\n            }, {\n              header: '最后更新',\n              key: 'lastUpdate'\n            }]\n          }]\n        });\n        ElMessage.success('导出成功');\n      } catch (error) {\n        ElMessage.error('导出失败');\n        console.error('Export failed:', error);\n      } finally {\n        exporting.value = false;\n      }\n    };\n\n    // 显示高级搜索\n    const showAdvancedSearch = () => {\n      showAdvancedSearchDialog.value = true;\n    };\n\n    // 重置高级搜索\n    const resetAdvancedSearch = () => {\n      advancedSearch.value = {\n        name: '',\n        type: '',\n        status: '',\n        location: '',\n        updateTime: []\n      };\n    };\n\n    // 应用高级搜索\n    const applyAdvancedSearch = () => {\n      searchQuery.value = advancedSearch.value.name;\n      filterType.value = advancedSearch.value.type;\n      filterStatus.value = advancedSearch.value.status;\n      showAdvancedSearchDialog.value = false;\n    };\n\n    // 统计卡片相关方法\n    const getStatTooltip = key => {\n      const tooltips = {\n        online: '当前在线的设备数量',\n        offline: '当前离线的设备数量',\n        error: '存在异常的设备数量',\n        total: '系统中的设备总数'\n      };\n      return tooltips[key];\n    };\n    const getStatLabel = key => {\n      const labels = {\n        online: '在线设备',\n        offline: '离线设备',\n        error: '异常设备',\n        total: '设备总数'\n      };\n      return labels[key];\n    };\n    const getStatIcon = key => {\n      const icons = {\n        online: Monitor,\n        offline: Connection,\n        error: Warning,\n        total: Cpu\n      };\n      return icons[key];\n    };\n    const getTrendClass = key => {\n      const trends = {\n        online: 'up',\n        offline: 'down',\n        error: '',\n        total: 'up'\n      };\n      return trends[key];\n    };\n    const getTrendIcon = key => {\n      const trends = {\n        online: ArrowUp,\n        offline: ArrowDown,\n        error: InfoFilled,\n        total: ArrowUp\n      };\n      return trends[key];\n    };\n    const getTrendText = key => {\n      const texts = {\n        online: '2台',\n        offline: '1台',\n        error: '无变化',\n        total: '1台'\n      };\n      return texts[key];\n    };\n\n    // 预测指标选择\n    const predictionMetric = ref('temperature');\n\n    // 预测数据表格数据\n    const predictionTableData = computed(() => {\n      const data = [];\n      for (let i = 0; i < 24; i++) {\n        const time = new Date(Date.now() + i * 3600000);\n        const value = predictionData.value[predictionMetric.value][i];\n        data.push({\n          time: time.toISOString(),\n          predicted: value ? `预测值: ${value.toFixed(1)}` : '无数据'\n        });\n      }\n      return data;\n    });\n\n    // 预测数据表格标签\n    const metricLabel = computed(() => {\n      return getMetricLabel(predictionMetric.value);\n    });\n    const __returned__ = {\n      get chartUpdateTimer() {\n        return chartUpdateTimer;\n      },\n      set chartUpdateTimer(v) {\n        chartUpdateTimer = v;\n      },\n      ws,\n      wsReconnectTimer,\n      wsReconnectAttempts,\n      MAX_RECONNECT_ATTEMPTS,\n      store,\n      loading,\n      DEVICE_CACHE_KEY,\n      DEVICE_CACHE_EXPIRY,\n      debouncedSearch,\n      debouncedFilter,\n      initWebSocket,\n      handleWebSocketReconnect,\n      handleWebSocketMessage,\n      updateDeviceData,\n      handleNewAlert,\n      updateDeviceStats,\n      initData,\n      predictionData,\n      predictionTimeRange,\n      timeRangeOptions,\n      predictionConfig,\n      predictionChartOptions,\n      generatePredictionData,\n      generateConfidenceBounds,\n      updatePredictionData,\n      get predictionUpdateTimer() {\n        return predictionUpdateTimer;\n      },\n      set predictionUpdateTimer(v) {\n        predictionUpdateTimer = v;\n      },\n      startPredictionUpdate,\n      stopPredictionUpdate,\n      viewMode,\n      autoRefresh,\n      refreshInterval,\n      get refreshTimer() {\n        return refreshTimer;\n      },\n      set refreshTimer(v) {\n        refreshTimer = v;\n      },\n      deviceList,\n      showConfig,\n      configForm,\n      deviceConfig,\n      configRules,\n      historyDateRange,\n      selectedMetrics,\n      availableMetrics,\n      dateShortcuts,\n      currentDevice,\n      unreadAlerts,\n      selectDevice,\n      toggleAutoRefresh,\n      startAutoRefresh,\n      stopAutoRefresh,\n      refreshData,\n      getMetricLabel,\n      getMetricUnit,\n      formatMetricValue,\n      getMetricStatus,\n      getMetricChartOptions,\n      generateMetricData,\n      loadHistoryData,\n      updateHistoryChart,\n      viewHistory,\n      configDevice,\n      saveConfig,\n      deviceStats,\n      alerts,\n      searchQuery,\n      filterStatus,\n      filterType,\n      filteredDeviceList,\n      pageSize,\n      currentPage,\n      totalPages,\n      paginatedDeviceList,\n      handlePageChange,\n      showDetail,\n      deviceAlerts,\n      showAddDeviceDialog,\n      deviceForm,\n      newDevice,\n      deviceRules,\n      selectedDevice,\n      chartOptions,\n      historyChartOptions,\n      generateTimeData,\n      viewDetail,\n      deleteDevice,\n      handleAlert,\n      showAddDevice,\n      submitNewDevice,\n      getDeviceIcon,\n      getDeviceTagType,\n      getStatusText,\n      getAlertTagType,\n      statusOptions,\n      typeOptions,\n      showAdvancedSearchDialog,\n      advancedSearch,\n      exporting,\n      exportData,\n      showAdvancedSearch,\n      resetAdvancedSearch,\n      applyAdvancedSearch,\n      getStatTooltip,\n      getStatLabel,\n      getStatIcon,\n      getTrendClass,\n      getTrendIcon,\n      getTrendText,\n      predictionMetric,\n      predictionTableData,\n      metricLabel,\n      ref,\n      computed,\n      onMounted,\n      onUnmounted,\n      onActivated,\n      onDeactivated,\n      nextTick,\n      watch,\n      get useStore() {\n        return useStore;\n      },\n      get debounce() {\n        return debounce;\n      },\n      get cache() {\n        return cache;\n      },\n      BaseEChart,\n      get Monitor() {\n        return Monitor;\n      },\n      get Connection() {\n        return Connection;\n      },\n      get Warning() {\n        return Warning;\n      },\n      get InfoFilled() {\n        return InfoFilled;\n      },\n      get Cpu() {\n        return Cpu;\n      },\n      get ArrowUp() {\n        return ArrowUp;\n      },\n      get ArrowDown() {\n        return ArrowDown;\n      },\n      get Plus() {\n        return Plus;\n      },\n      get View() {\n        return View;\n      },\n      get Setting() {\n        return Setting;\n      },\n      get Delete() {\n        return Delete;\n      },\n      get Search() {\n        return Search;\n      },\n      get Grid() {\n        return Grid;\n      },\n      get List() {\n        return List;\n      },\n      get Refresh() {\n        return Refresh;\n      },\n      get Download() {\n        return Download;\n      },\n      get Timer() {\n        return Timer;\n      },\n      get Location() {\n        return Location;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get ElMessageBox() {\n        return ElMessageBox;\n      },\n      AnimatedNumber,\n      get exportToExcel() {\n        return exportToExcel;\n      },\n      BaseMap,\n      get formatTime() {\n        return formatTime;\n      },\n      get formatNumber() {\n        return formatNumber;\n      },\n      PhotoTimeline,\n      get VirtualList() {\n        return VirtualList;\n      },\n      DeviceCard\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","onUnmounted","onActivated","onDeactivated","nextTick","watch","useStore","debounce","cache","BaseEChart","Monitor","Connection","Warning","InfoFilled","Cpu","ArrowUp","ArrowDown","Plus","View","Setting","Delete","Search","Grid","List","Refresh","Download","Timer","Location","ElMessage","ElMessageBox","AnimatedNumber","exportToExcel","BaseMap","formatTime","formatNumber","PhotoTimeline","VirtualList","DeviceCard","MAX_RECONNECT_ATTEMPTS","DEVICE_CACHE_KEY","DEVICE_CACHE_EXPIRY","chartUpdateTimer","ws","wsReconnectTimer","wsReconnectAttempts","store","loading","debouncedSearch","query","searchQuery","value","debouncedFilter","status","type","filterStatus","filterType","initWebSocket","WebSocket","process","env","VUE_APP_WS_URL","onopen","console","log","onmessage","event","data","JSON","parse","handleWebSocketMessage","onclose","handleWebSocketReconnect","onerror","error","close","clearTimeout","setTimeout","Math","min","updateDeviceData","payload","handleNewAlert","updateDeviceStats","deviceData","index","deviceList","findIndex","d","name","set","alert","alerts","unshift","unread","length","slice","level","message","device","title","duration","stats","deviceStats","initData","cachedData","get","response","dispatch","predictionData","temperature","humidity","ph","predictionTimeRange","timeRangeOptions","label","predictionConfig","enableAutoUpdate","updateInterval","confidenceInterval","showConfidenceBounds","predictionChartOptions","text","left","textStyle","color","tooltip","trigger","axisPointer","legend","bottom","grid","right","top","containLabel","xAxis","boundaryGap","axisLine","lineStyle","yAxis","splitLine","series","generateTimeData","itemStyle","generatePredictionData","generateConfidenceBounds","areaStyle","baseValue","variance","now","Date","i","time","getTime","sin","PI","push","toISOString","toFixed","confidenceMultiplier","prediction","uncertainty","abs","updatePredictionData","timeRange","deviceId","selectedDevice","predictionUpdateTimer","startPredictionUpdate","setInterval","stopPredictionUpdate","clearInterval","newValue","viewMode","autoRefresh","refreshInterval","refreshTimer","location","lastUpdate","metrics","battery","resolution","framerate","throughput","latency","connections","Array","from","_","String","fromCharCode","random","floor","showConfig","configForm","deviceConfig","sampleRate","thresholds","max","autoCalibration","storage","configRules","required","historyDateRange","selectedMetrics","availableMetrics","dateShortcuts","end","start","setTime","currentDevice","find","unreadAlerts","filter","a","selectDevice","updateDeviceCharts","toggleAutoRefresh","startAutoRefresh","stopAutoRefresh","refreshData","getMetricLabel","key","labels","getMetricUnit","units","formatMetricValue","getMetricStatus","effect","getMetricChartOptions","generateMetricData","smooth","showSymbol","width","opacity","loadHistoryData","startTime","endTime","updateHistoryChart","viewHistory","showDetail","configDevice","saveConfig","validate","success","online","offline","total","id","filteredDeviceList","toLowerCase","includes","pageSize","currentPage","totalPages","ceil","paginatedDeviceList","handlePageChange","page","deviceAlerts","showAddDeviceDialog","deviceForm","newDevice","deviceRules","chartOptions","backgroundColor","show","historyChartOptions","axisLabel","x","y","x2","y2","colorStops","offset","viewDetail","history","deleteDevice","confirm","confirmButtonText","cancelButtonText","dangerouslyUseHTMLString","handleAlert","showAddDevice","submitNewDevice","valid","latestData","toLocaleString","getDeviceIcon","icons","getDeviceTagType","types","getStatusText","statuses","getAlertTagType","warning","info","statusOptions","typeOptions","showAdvancedSearchDialog","advancedSearch","updateTime","exporting","exportData","filename","toLocaleDateString","sheets","columns","header","showAdvancedSearch","resetAdvancedSearch","applyAdvancedSearch","getStatTooltip","tooltips","getStatLabel","getStatIcon","getTrendClass","trends","getTrendIcon","getTrendText","texts","predictionMetric","predictionTableData","predicted","metricLabel"],"sources":["D:/restore/water-melt/frontend/src/views/Monitoring.vue"],"sourcesContent":["<!-- Monitoring.vue -->\n<template>\n  <div class=\"monitoring-view\">\n    <!-- 顶部统计卡片 -->\n    <div class=\"stats-section\">\n      <el-tooltip\n        v-for=\"(stat, key) in deviceStats\"\n        :key=\"key\"\n        :content=\"getStatTooltip(key)\"\n        placement=\"top\"\n      >\n        <div :class=\"['stat-card', key]\">\n          <div class=\"stat-icon\">\n            <el-icon><component :is=\"getStatIcon(key)\" /></el-icon>\n          </div>\n          <div class=\"stat-content\">\n            <animated-number \n              :value=\"stat\" \n              :duration=\"1000\"\n              class=\"stat-value\"\n            />\n            <div class=\"stat-label\">{{ getStatLabel(key) }}</div>\n          </div>\n          <div :class=\"['stat-trend', getTrendClass(key)]\">\n            <el-icon><component :is=\"getTrendIcon(key)\" /></el-icon>\n            <span>{{ getTrendText(key) }}</span>\n          </div>\n        </div>\n      </el-tooltip>\n    </div>\n\n    <!-- 设备列表工具栏 -->\n    <div class=\"toolbar\">\n      <div class=\"toolbar-left\">\n        <el-button-group>\n          <el-button \n            type=\"primary\" \n            @click=\"showAddDevice\"\n            :loading=\"loading\"\n          >\n            <el-icon><Plus /></el-icon>新增设备\n          </el-button>\n          <el-button \n            :class=\"{ active: viewMode === 'grid' }\" \n            @click=\"viewMode = 'grid'\"\n          >\n            <el-icon><Grid /></el-icon>\n          </el-button>\n          <el-button \n            :class=\"{ active: viewMode === 'table' }\" \n            @click=\"viewMode = 'table'\"\n          >\n            <el-icon><List /></el-icon>\n          </el-button>\n        </el-button-group>\n        \n        <el-button-group class=\"view-options\">\n          <el-tooltip content=\"刷新数据\" placement=\"top\">\n            <el-button @click=\"refreshData\" :loading=\"loading\">\n              <el-icon><Refresh /></el-icon>\n            </el-button>\n          </el-tooltip>\n          <el-tooltip content=\"导出数据\" placement=\"top\">\n            <el-button @click=\"exportData\" :loading=\"exporting\">\n              <el-icon><Download /></el-icon>\n            </el-button>\n          </el-tooltip>\n        </el-button-group>\n      </div>\n      \n      <div class=\"toolbar-right\">\n        <el-input\n          v-model=\"searchQuery\"\n          placeholder=\"搜索设备...\"\n          prefix-icon=\"Search\"\n          clearable\n          @input=\"debouncedSearch\"\n        >\n          <template #append>\n            <el-button @click=\"showAdvancedSearch\">\n              <el-icon><Setting /></el-icon>\n            </el-button>\n          </template>\n        </el-input>\n        \n        <el-select\n          v-model=\"filterStatus\"\n          placeholder=\"状态筛选\"\n          clearable\n          @change=\"debouncedFilter\"\n        >\n          <el-option\n            v-for=\"option in statusOptions\"\n            :key=\"option.value\"\n            v-bind=\"option\"\n          >\n            <div class=\"select-option\">\n              <span class=\"status-dot\" :class=\"option.value\"></span>\n              {{ option.label }}\n            </div>\n          </el-option>\n        </el-select>\n        \n        <el-select\n          v-model=\"filterType\"\n          placeholder=\"类型筛选\"\n          clearable\n          @change=\"debouncedFilter\"\n        >\n          <el-option\n            v-for=\"option in typeOptions\"\n            :key=\"option.value\"\n            v-bind=\"option\"\n          >\n            <div class=\"select-option\">\n              <el-icon :class=\"getDeviceIcon(option.value)\"></el-icon>\n              {{ option.label }}\n            </div>\n          </el-option>\n        </el-select>\n      </div>\n    </div>\n\n    <!-- 高级搜索对话框 -->\n    <el-dialog\n      v-model=\"showAdvancedSearchDialog\"\n      title=\"高级搜索\"\n      width=\"500px\"\n      destroy-on-close\n    >\n      <el-form\n        ref=\"searchForm\"\n        :model=\"advancedSearch\"\n        label-width=\"100px\"\n      >\n        <el-form-item label=\"设备名称\">\n          <el-input v-model=\"advancedSearch.name\" placeholder=\"支持模糊搜索\" />\n        </el-form-item>\n        <el-form-item label=\"设备类型\">\n          <el-select v-model=\"advancedSearch.type\" placeholder=\"请选择\" clearable>\n            <el-option\n              v-for=\"option in typeOptions\"\n              :key=\"option.value\"\n              v-bind=\"option\"\n            />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"设备状态\">\n          <el-select v-model=\"advancedSearch.status\" placeholder=\"请选择\" clearable>\n            <el-option\n              v-for=\"option in statusOptions\"\n              :key=\"option.value\"\n              v-bind=\"option\"\n            />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"安装位置\">\n          <el-input v-model=\"advancedSearch.location\" placeholder=\"支持模糊搜索\" />\n        </el-form-item>\n        <el-form-item label=\"更新时间\">\n          <el-date-picker\n            v-model=\"advancedSearch.updateTime\"\n            type=\"daterange\"\n            range-separator=\"至\"\n            start-placeholder=\"开始日期\"\n            end-placeholder=\"结束日期\"\n          />\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <el-button @click=\"showAdvancedSearchDialog = false\">取消</el-button>\n        <el-button @click=\"resetAdvancedSearch\">重置</el-button>\n        <el-button type=\"primary\" @click=\"applyAdvancedSearch\">确定</el-button>\n      </template>\n    </el-dialog>\n\n    <!-- 主要内容区域 -->\n    <div class=\"main-content\">\n      <!-- 左侧：设备列表和状态 -->\n      <div class=\"content-main\">\n        <div class=\"panel device-list-panel\">\n          <div class=\"panel-header\">\n            <div class=\"header-left\">\n              <h3>设备管理</h3>\n            </div>\n            <div class=\"header-right\">\n            </div>\n          </div>\n\n          <!-- 网格视图 -->\n          <div v-if=\"viewMode === 'grid'\" class=\"device-grid\">\n            <el-scrollbar height=\"calc(100vh - 320px)\">\n              <div class=\"virtual-list-container\">\n                <div\n                  v-for=\"device in paginatedDeviceList\"\n                  :key=\"device.name\"\n                  class=\"device-card\"\n                  :class=\"device.status\"\n                >\n                  <div class=\"device-card-header\">\n                    <div class=\"device-icon\">\n                      <el-icon><component :is=\"getDeviceIcon(device.type)\" /></el-icon>\n                    </div>\n                    <div class=\"device-status\">\n                      <span class=\"status-dot\" :class=\"device.status\"></span>\n                      <span>{{ getStatusText(device.status) }}</span>\n                    </div>\n                  </div>\n                  <div class=\"device-card-content\">\n                    <div class=\"device-name\">{{ device.name }}</div>\n                    <div class=\"device-type\">{{ device.type }}</div>\n                    <div class=\"device-location\">{{ device.location }}</div>\n                    <div class=\"device-data\">\n                      <span class=\"label\">最近数据:</span>\n                      <span class=\"value\">{{ device.latestData }}</span>\n                    </div>\n                    <div class=\"device-data\">\n                      <span class=\"label\">最后更新:</span>\n                      <span class=\"value\">{{ device.lastUpdate }}</span>\n                    </div>\n                  </div>\n                  <div class=\"device-card-footer\">\n                    <el-button size=\"small\" @click=\"viewDetail(device)\">查看</el-button>\n                    <el-button size=\"small\" type=\"primary\" @click=\"configDevice(device)\">配置</el-button>\n                    <el-button size=\"small\" type=\"danger\" @click=\"deleteDevice(device)\">删除</el-button>\n                  </div>\n                </div>\n              </div>\n            </el-scrollbar>\n            <el-pagination\n              background\n              layout=\"prev, pager, next\"\n              :total=\"filteredDeviceList.length\"\n              :page-size=\"pageSize\"\n              :current-page=\"currentPage\"\n              @current-change=\"handlePageChange\"\n              class=\"device-pagination\"\n            />\n          </div>\n\n          <!-- 表格视图 -->\n          <el-scrollbar v-else height=\"calc(100vh - 320px)\">\n            <el-table \n              :data=\"paginatedDeviceList\" \n              style=\"width: 100%\"\n              :header-cell-style=\"{ background: '#1a1a1a', color: '#fff' }\"\n              v-loading=\"loading\"\n              height=\"100%\"\n              :virtual-scrolling=\"true\"\n              :row-height=\"54\"\n            >\n              <el-table-column prop=\"name\" label=\"设备名称\" min-width=\"200\">\n                <template #default=\"{ row }\">\n                  <div class=\"device-name\">\n                    <el-icon :class=\"getDeviceIcon(row.type)\"><Monitor /></el-icon>\n                    <span>{{ row.name }}</span>\n                  </div>\n                </template>\n              </el-table-column>\n              <el-table-column prop=\"type\" label=\"类型\" width=\"120\">\n                <template #default=\"{ row }\">\n                  <el-tag :type=\"getDeviceTagType(row.type)\">{{ row.type }}</el-tag>\n                </template>\n              </el-table-column>\n              <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\n                <template #default=\"{ row }\">\n                  <div class=\"status-indicator\" :class=\"row.status\">\n                    <span class=\"status-dot\"></span>\n                    {{ getStatusText(row.status) }}\n                  </div>\n                </template>\n              </el-table-column>\n              <el-table-column prop=\"location\" label=\"位置\" width=\"120\" />\n              <el-table-column label=\"最近数据\" min-width=\"180\">\n                <template #default=\"{ row }\">\n                  <div class=\"latest-data\">\n                    <el-tooltip \n                      :content=\"row.lastUpdate\" \n                      placement=\"top\"\n                    >\n                      <span>{{ row.latestData }}</span>\n                    </el-tooltip>\n                  </div>\n                </template>\n              </el-table-column>\n              <el-table-column label=\"操作\" width=\"200\" fixed=\"right\">\n                <template #default=\"{ row }\">\n                  <el-button-group>\n                    <el-button size=\"small\" @click=\"viewDetail(row)\">\n                      <el-icon><View /></el-icon>\n                    </el-button>\n                    <el-button size=\"small\" type=\"primary\" @click=\"configDevice(row)\">\n                      <el-icon><Setting /></el-icon>\n                    </el-button>\n                    <el-button size=\"small\" type=\"danger\" @click=\"deleteDevice(row)\">\n                      <el-icon><Delete /></el-icon>\n                    </el-button>\n                  </el-button-group>\n                </template>\n              </el-table-column>\n            </el-table>\n            <el-pagination\n              background\n              layout=\"prev, pager, next\"\n              :total=\"filteredDeviceList.length\"\n              :page-size=\"pageSize\"\n              :current-page=\"currentPage\"\n              @current-change=\"handlePageChange\"\n              class=\"device-pagination\"\n            />\n          </el-scrollbar>\n        </div>\n\n        <!-- 最近告警面板（移动到左侧） -->\n        <div class=\"panel alert-panel\" style=\"margin-top:24px\">\n          <div class=\"panel-header\">\n            <h3>最近告警</h3>\n            <el-tag size=\"small\" type=\"danger\">{{ alerts.length }} 个未处理</el-tag>\n          </div>\n          <div class=\"alert-list\">\n            <div v-for=\"alert in alerts\" \n                 :key=\"alert.id\" \n                 class=\"alert-item\"\n                 :class=\"[alert.level, { unread: alert.unread } ]\"\n                 @click=\"handleAlert(alert)\">\n              <div class=\"alert-icon\">\n                <el-icon><Warning /></el-icon>\n              </div>\n              <div class=\"alert-content\">\n                <div class=\"alert-title\">{{ alert.title }}</div>\n                <div class=\"alert-info\">\n                  <span class=\"alert-device\">{{ alert.device }}</span>\n                  <span class=\"alert-time\">{{ alert.time }}</span>\n                </div>\n              </div>\n              <div class=\"alert-action\">\n                <el-button size=\"small\" type=\"primary\" link>处理</el-button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- 右侧：实时数据和告警 -->\n      <div class=\"content-side\">\n        <!-- 智能预测面板 -->\n        <div class=\"side-panel prediction-panel\">\n          <div class=\"panel-header\">\n            <h3>智能预测</h3>\n            <div class=\"panel-actions\">\n              <el-select \n                v-model=\"selectedDevice\" \n                size=\"small\" \n                placeholder=\"选择设备\"\n                @change=\"updatePredictionData\"\n              >\n                <el-option \n                  v-for=\"device in deviceList\" \n                  :key=\"device.name\" \n                  :label=\"device.name\" \n                  :value=\"device.name\"\n                />\n              </el-select>\n              <el-select \n                v-model=\"predictionTimeRange\" \n                size=\"small\" \n                placeholder=\"预测时间范围\"\n                @change=\"updatePredictionData\"\n              >\n                <el-option \n                  v-for=\"option in timeRangeOptions\" \n                  :key=\"option.value\" \n                  v-bind=\"option\"\n                />\n              </el-select>\n              <!-- 预测指标选择 -->\n              <el-select \n                v-model=\"predictionMetric\" \n                size=\"small\" \n                placeholder=\"预测指标\"\n              >\n                <el-option label=\"温度\" value=\"temperature\" />\n                <el-option label=\"湿度\" value=\"humidity\" />\n                <el-option label=\"PH值\" value=\"ph\" />\n              </el-select>\n            </div>\n          </div>\n          \n          <div class=\"prediction-content\">\n            <div class=\"prediction-chart\">\n              <base-e-chart :options=\"predictionChartOptions\" />\n            </div>\n            \n            <!-- 图片时间轴 -->\n            <div class=\"timeline-section\">\n              <div class=\"section-header\">\n                <h4>历史影像分析</h4>\n              </div>\n              <div class=\"timeline-wrapper\">\n                <PhotoTimeline />\n              </div>\n            </div>\n            \n            <div class=\"prediction-settings\">\n              <el-form :model=\"predictionConfig\" label-width=\"120px\" size=\"small\">\n                <el-form-item label=\"自动更新\">\n                  <el-switch v-model=\"predictionConfig.enableAutoUpdate\" />\n                </el-form-item>\n                <el-form-item label=\"更新间隔(分钟)\">\n                  <el-input-number \n                    v-model=\"predictionConfig.updateInterval\"\n                    :min=\"1\"\n                    :max=\"60\"\n                    :disabled=\"!predictionConfig.enableAutoUpdate\"\n                  />\n                </el-form-item>\n                <el-form-item label=\"置信区间\">\n                  <el-select v-model=\"predictionConfig.confidenceInterval\">\n                    <el-option label=\"90%\" value=\"0.90\" />\n                    <el-option label=\"95%\" value=\"0.95\" />\n                    <el-option label=\"99%\" value=\"0.99\" />\n                  </el-select>\n                </el-form-item>\n                <el-form-item label=\"显示置信区间\">\n                  <el-switch v-model=\"predictionConfig.showConfidenceBounds\" />\n                </el-form-item>\n              </el-form>\n            </div>\n            \n            <div class=\"prediction-metrics\">\n              <el-row :gutter=\"20\">\n                <el-col :span=\"8\">\n                  <div class=\"metric-card\">\n                    <div class=\"metric-label\">预测准确率</div>\n                    <div class=\"metric-value\">95.8%</div>\n                    <div class=\"metric-trend positive\">\n                      <el-icon><ArrowUp /></el-icon>\n                      <span>2.3%</span>\n                    </div>\n                  </div>\n                </el-col>\n                <el-col :span=\"8\">\n                  <div class=\"metric-card\">\n                    <div class=\"metric-label\">预警提前量</div>\n                    <div class=\"metric-value\">30min</div>\n                    <div class=\"metric-trend positive\">\n                      <el-icon><ArrowUp /></el-icon>\n                      <span>5min</span>\n                    </div>\n                  </div>\n                </el-col>\n                <el-col :span=\"8\">\n                  <div class=\"metric-card\">\n                    <div class=\"metric-label\">误报率</div>\n                    <div class=\"metric-value\">2.1%</div>\n                    <div class=\"metric-trend negative\">\n                      <el-icon><ArrowDown /></el-icon>\n                      <span>0.5%</span>\n                    </div>\n                  </div>\n                </el-col>\n              </el-row>\n            </div>\n\n            <!-- 预测数据表格 -->\n            <div class=\"prediction-table\">\n              <el-table :data=\"predictionTableData\" height=\"240\" stripe size=\"small\">\n                <el-table-column prop=\"time\" label=\"时间\" width=\"160\" />\n                <el-table-column prop=\"predicted\" :label=\"metricLabel\" />\n              </el-table>\n            </div>\n          </div>\n        </div>\n\n        <!-- 实时数据图表 -->\n        <div class=\"side-panel\">\n          <div class=\"panel-header\">\n            <h3>实时数据</h3>\n            <el-select v-model=\"selectedDevice\" size=\"small\" placeholder=\"选择设备\">\n              <el-option \n                v-for=\"device in deviceList\" \n                :key=\"device.name\" \n                :label=\"device.name\" \n                :value=\"device.name\"\n              />\n            </el-select>\n          </div>\n          <div class=\"chart-container\">\n            <base-e-chart :options=\"chartOptions\" />\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 设备详情对话框 -->\n    <el-dialog \n      v-model=\"showDetail\" \n      title=\"设备详情\" \n      width=\"60%\"\n      destroy-on-close\n    >\n      <el-tabs v-if=\"currentDevice\">\n        <el-tab-pane label=\"基本信息\">\n          <div class=\"device-info\">\n            <div class=\"info-item\">\n              <span class=\"label\">设备名称</span>\n              <span class=\"value\">{{ currentDevice.name }}</span>\n            </div>\n            <div class=\"info-item\">\n              <span class=\"label\">设备类型</span>\n              <span class=\"value\">{{ currentDevice.type }}</span>\n            </div>\n            <div class=\"info-item\">\n              <span class=\"label\">当前状态</span>\n              <span class=\"value\">{{ getStatusText(currentDevice.status) }}</span>\n            </div>\n            <div class=\"info-item\">\n              <span class=\"label\">安装位置</span>\n              <span class=\"value\">{{ currentDevice.location }}</span>\n            </div>\n            <div class=\"info-item\">\n              <span class=\"label\">最近数据</span>\n              <span class=\"value\">{{ currentDevice.latestData }}</span>\n            </div>\n            <div class=\"info-item\">\n              <span class=\"label\">最后更新</span>\n              <span class=\"value\">{{ currentDevice.lastUpdate }}</span>\n            </div>\n          </div>\n        </el-tab-pane>\n        <el-tab-pane label=\"历史数据\">\n          <div class=\"history-data\">\n            <base-e-chart :options=\"historyChartOptions\" />\n          </div>\n        </el-tab-pane>\n        <el-tab-pane label=\"告警记录\">\n          <el-table :data=\"deviceAlerts\" style=\"width: 100%\">\n            <el-table-column prop=\"time\" label=\"时间\" width=\"180\" />\n            <el-table-column prop=\"title\" label=\"告警内容\" />\n            <el-table-column prop=\"level\" label=\"级别\" width=\"100\">\n              <template #default=\"{ row }\">\n                <el-tag :type=\"getAlertTagType(row.level)\">{{ row.level }}</el-tag>\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"status\" label=\"状态\" width=\"100\" />\n          </el-table>\n        </el-tab-pane>\n      </el-tabs>\n    </el-dialog>\n\n    <!-- 新增设备对话框 -->\n    <el-dialog \n      v-model=\"showAddDeviceDialog\" \n      title=\"新增设备\" \n      width=\"50%\"\n      destroy-on-close\n    >\n      <el-form \n        ref=\"deviceForm\"\n        :model=\"newDevice\"\n        :rules=\"deviceRules\"\n        label-width=\"100px\"\n      >\n        <el-form-item label=\"设备名称\" prop=\"name\">\n          <el-input v-model=\"newDevice.name\" placeholder=\"请输入设备名称\" />\n        </el-form-item>\n        <el-form-item label=\"设备类型\" prop=\"type\">\n          <el-select v-model=\"newDevice.type\" placeholder=\"请选择设备类型\">\n            <el-option label=\"温湿度传感器\" value=\"温湿度\" />\n            <el-option label=\"PH值传感器\" value=\"PH值\" />\n            <el-option label=\"视频监控\" value=\"视频监控\" />\n            <el-option label=\"数据网关\" value=\"数据网关\" />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"安装位置\" prop=\"location\">\n          <el-input v-model=\"newDevice.location\" placeholder=\"请输入安装位置\" />\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <el-button @click=\"showAddDeviceDialog = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"submitNewDevice\">确定</el-button>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, onUnmounted, onActivated, onDeactivated, nextTick, watch } from 'vue'\nimport { useStore } from 'vuex'\nimport { debounce } from 'lodash-es'\nimport cache from '@/utils/cache'\nimport BaseEChart from '@/components/BaseEChart.vue'\nimport { \n  Monitor, Connection, Warning, InfoFilled, Cpu, \n  ArrowUp, ArrowDown, Plus, View, Setting, Delete, Search,\n  Grid, List, Refresh, Download, Timer, Location\n} from '@element-plus/icons-vue'\nimport { ElMessage, ElMessageBox } from 'element-plus'\nimport AnimatedNumber from '@/components/AnimatedNumber.vue'\nimport { exportToExcel } from '@/utils/excel'\nimport BaseMap from '@/components/BaseMap.vue'\nimport { formatTime, formatNumber } from '@/utils/format'\nimport PhotoTimeline from '@/components/PhotoTimeline.vue'\nimport VirtualList from 'vue-virtual-scroll-list'\nimport DeviceCard from '@/components/DeviceCard.vue'\n\n// chart update timer placeholder\nlet chartUpdateTimer = null\n\n// WebSocket连接\nconst ws = ref(null)\nconst wsReconnectTimer = ref(null)\nconst wsReconnectAttempts = ref(0)\nconst MAX_RECONNECT_ATTEMPTS = 5\n\n// 状态管理\nconst store = useStore()\n\n// 加载状态\nconst loading = ref(false)\n\n// 缓存设备数据\nconst DEVICE_CACHE_KEY = 'monitoring_devices'\nconst DEVICE_CACHE_EXPIRY = 5 * 60 * 1000 // 5分钟\n\n// 防抖的搜索和筛选\nconst debouncedSearch = debounce((query) => {\n  searchQuery.value = query\n}, 300)\n\nconst debouncedFilter = debounce((status, type) => {\n  filterStatus.value = status\n  filterType.value = type\n}, 300)\n\n// 初始化WebSocket连接\nconst initWebSocket = () => {\n  if (ws.value) return\n\n  ws.value = new WebSocket(process.env.VUE_APP_WS_URL || 'ws://localhost:8082/api/ws/monitoring')\n  \n  ws.value.onopen = () => {\n    console.log('WebSocket connected')\n    wsReconnectAttempts.value = 0\n  }\n\n  ws.value.onmessage = (event) => {\n    const data = JSON.parse(event.data)\n    handleWebSocketMessage(data)\n  }\n\n  ws.value.onclose = () => {\n    console.log('WebSocket disconnected')\n    ws.value = null\n    handleWebSocketReconnect()\n  }\n\n  ws.value.onerror = (error) => {\n    console.error('WebSocket error:', error)\n    ws.value?.close()\n  }\n}\n\n// 处理WebSocket重连\nconst handleWebSocketReconnect = () => {\n  if (wsReconnectAttempts.value >= MAX_RECONNECT_ATTEMPTS) {\n    ElMessage.error('连接服务器失败，请刷新页面重试')\n    return\n  }\n\n  if (wsReconnectTimer.value) {\n    clearTimeout(wsReconnectTimer.value)\n  }\n\n  wsReconnectTimer.value = setTimeout(() => {\n    wsReconnectAttempts.value++\n    initWebSocket()\n  }, 3000 * Math.min(wsReconnectAttempts.value + 1, 5))\n}\n\n// 处理WebSocket消息\nconst handleWebSocketMessage = (data) => {\n  switch (data.type) {\n    case 'deviceUpdate':\n      updateDeviceData(data.payload)\n      break\n    case 'alert':\n      handleNewAlert(data.payload)\n      break\n    case 'stats':\n      updateDeviceStats(data.payload)\n      break\n  }\n}\n\n// 更新设备数据\nconst updateDeviceData = async (deviceData) => {\n  const index = deviceList.value.findIndex(d => d.name === deviceData.name)\n  if (index !== -1) {\n    deviceList.value[index] = { ...deviceList.value[index], ...deviceData }\n    // 更新缓存\n    await cache.set(DEVICE_CACHE_KEY, deviceList.value, DEVICE_CACHE_EXPIRY)\n  }\n}\n\n// 处理新告警\nconst handleNewAlert = (alert) => {\n  alerts.value.unshift({\n    ...alert,\n    unread: true\n  })\n  \n  // 限制告警列表长度\n  if (alerts.value.length > 50) {\n    alerts.value = alerts.value.slice(0, 50)\n  }\n\n  // 显示告警通知\n  ElMessage({\n    type: alert.level === 'error' ? 'error' : alert.level === 'warning' ? 'warning' : 'info',\n    message: `${alert.device}: ${alert.title}`,\n    duration: 5000\n  })\n}\n\n// 更新设备统计数据\nconst updateDeviceStats = (stats) => {\n  deviceStats.value = stats\n}\n\n// 初始化数据\nconst initData = async () => {\n  loading.value = true\n  try {\n    // 尝试从缓存获取数据\n    const cachedData = await cache.get(DEVICE_CACHE_KEY)\n    if (cachedData) {\n      deviceList.value = cachedData\n      loading.value = false\n      return\n    }\n\n    // 如果没有缓存，从服务器获取\n    const response = await store.dispatch('device/fetchDevices')\n    deviceList.value = response\n    \n    // 更新缓存\n    await cache.set(DEVICE_CACHE_KEY, response, DEVICE_CACHE_EXPIRY)\n  } catch (error) {\n    ElMessage.error('获取设备数据失败')\n    console.error('Failed to fetch devices:', error)\n  } finally {\n    loading.value = false\n  }\n}\n\n// 预测相关数据\nconst predictionData = ref({\n  temperature: [],\n  humidity: [],\n  ph: []\n})\n\n// 预测时间范围\nconst predictionTimeRange = ref('24h')\nconst timeRangeOptions = [\n  { label: '24小时', value: '24h' },\n  { label: '48小时', value: '48h' },\n  { label: '7天', value: '7d' }\n]\n\n// 预测配置\nconst predictionConfig = ref({\n  enableAutoUpdate: true,\n  updateInterval: 30, // 分钟\n  confidenceInterval: 0.95,\n  showConfidenceBounds: true\n})\n\n// 预测图表配置\nconst predictionChartOptions = computed(() => {\n  return {\n    title: {\n      text: '智能预测分析',\n      left: 'center',\n      textStyle: {\n        color: '#fff'\n      }\n    },\n    tooltip: {\n      trigger: 'axis',\n      axisPointer: {\n        type: 'cross'\n      }\n    },\n    legend: {\n      data: ['实际值', '预测值', '置信区间'],\n      bottom: 0,\n      textStyle: {\n        color: '#fff'\n      }\n    },\n    grid: {\n      left: '3%',\n      right: '4%',\n      bottom: '15%',\n      top: '15%',\n      containLabel: true\n    },\n    xAxis: {\n      type: 'time',\n      boundaryGap: false,\n      axisLine: {\n        lineStyle: {\n          color: '#fff'\n        }\n      }\n    },\n    yAxis: {\n      type: 'value',\n      axisLine: {\n        lineStyle: {\n          color: '#fff'\n        }\n      },\n      splitLine: {\n        lineStyle: {\n          color: 'rgba(255,255,255,0.1)'\n        }\n      }\n    },\n    series: [\n      {\n        name: '实际值',\n        type: 'line',\n        data: generateTimeData(25, 2),\n        itemStyle: {\n          color: '#1890ff'\n        }\n      },\n      {\n        name: '预测值',\n        type: 'line',\n        data: generatePredictionData(25, 2),\n        lineStyle: {\n          type: 'dashed'\n        },\n        itemStyle: {\n          color: '#52c41a'\n        }\n      },\n      {\n        name: '置信区间',\n        type: 'line',\n        data: generateConfidenceBounds(25, 2),\n        lineStyle: {\n          color: 'rgba(82, 196, 26, 0.2)'\n        },\n        areaStyle: {\n          color: 'rgba(82, 196, 26, 0.1)'\n        }\n      }\n    ]\n  }\n})\n\n// 生成预测数据\nfunction generatePredictionData(baseValue, variance) {\n  const now = new Date()\n  const data = []\n  for (let i = 0; i < 24; i++) {\n    const time = new Date(now.getTime() + i * 3600000)\n    const value = baseValue + Math.sin(i / 12 * Math.PI) * variance\n    data.push([\n      time.toISOString(),\n      +value.toFixed(1)\n    ])\n  }\n  return data\n}\n\n// 生成置信区间\nfunction generateConfidenceBounds(baseValue, variance) {\n  const now = new Date()\n  const data = []\n  const confidenceMultiplier = 1.96 // 95% 置信区间\n  \n  for (let i = 0; i < 24; i++) {\n    const time = new Date(now.getTime() + i * 3600000)\n    const prediction = baseValue + Math.sin(i / 12 * Math.PI) * variance\n    const uncertainty = Math.abs(Math.sin(i / 12 * Math.PI)) * variance * 0.5\n    \n    data.push([\n      time.toISOString(),\n      +(prediction - uncertainty * confidenceMultiplier).toFixed(1),\n      +(prediction + uncertainty * confidenceMultiplier).toFixed(1)\n    ])\n  }\n  return data\n}\n\n// 更新预测数据\nconst updatePredictionData = async () => {\n  try {\n    // TODO: 从后端获取预测数据\n    const response = await store.dispatch('device/fetchPredictions', {\n      timeRange: predictionTimeRange.value,\n      deviceId: selectedDevice.value\n    })\n    \n    predictionData.value = response\n  } catch (error) {\n    console.error('Failed to fetch prediction data:', error)\n    ElMessage.error('获取预测数据失败')\n  }\n}\n\n// 自动更新预测数据\nlet predictionUpdateTimer = null\n\nconst startPredictionUpdate = () => {\n  if (predictionConfig.value.enableAutoUpdate) {\n    predictionUpdateTimer = setInterval(() => {\n      updatePredictionData()\n    }, predictionConfig.value.updateInterval * 60 * 1000)\n  }\n}\n\nconst stopPredictionUpdate = () => {\n  if (predictionUpdateTimer) {\n    clearInterval(predictionUpdateTimer)\n    predictionUpdateTimer = null\n  }\n}\n\n// 监听配置变化\nwatch(() => predictionConfig.value.enableAutoUpdate, (newValue) => {\n  if (newValue) {\n    startPredictionUpdate()\n  } else {\n    stopPredictionUpdate()\n  }\n})\n\nwatch(() => predictionConfig.value.updateInterval, () => {\n  if (predictionConfig.value.enableAutoUpdate) {\n    stopPredictionUpdate()\n    startPredictionUpdate()\n  }\n})\n\n// 视图模式\nconst viewMode = ref('grid')\n\n// 自动刷新\nconst autoRefresh = ref(true)\nconst refreshInterval = ref(30) // 秒\nlet refreshTimer = null\n\n// 设备数据结构\nconst deviceList = ref([\n  { \n    name: '传感器A', \n    type: '温湿度', \n    status: 'online', \n    location: '田块1',\n    lastUpdate: '2024-03-15 14:30:00',\n    metrics: {\n      temperature: 25.5,\n      humidity: 65.2,\n      battery: 85\n    }\n  },\n  { \n    name: '摄像头B', \n    type: '视频监控', \n    status: 'offline', \n    location: '田块2',\n    lastUpdate: '2024-03-15 10:15:00',\n    metrics: {\n      resolution: '1080p',\n      framerate: 30,\n      battery: 45\n    }\n  },\n  { \n    name: '网关C', \n    type: '数据网关', \n    status: 'online', \n    location: '田块3',\n    lastUpdate: '2024-03-15 14:35:00',\n    metrics: {\n      throughput: 2.5,\n      latency: 50,\n      connections: 12\n    }\n  },\n  { \n    name: '传感器D', \n    type: 'PH值', \n    status: 'error', \n    location: '田块4',\n    lastUpdate: '2024-03-15 14:20:00',\n    metrics: {\n      ph: 8.5,\n      temperature: 26.8,\n      battery: 30\n    }\n  },\n  // 添加更多测试数据\n  ...Array.from({ length: 20 }, (_, i) => ({\n    name: `传感器${String.fromCharCode(69 + i)}`,\n    type: ['温湿度', 'PH值', '视频监控', '数据网关'][i % 4],\n    status: ['online', 'offline', 'error'][i % 3],\n    location: `田块${i + 5}`,\n    lastUpdate: '2024-03-15 14:30:00',\n    metrics: {\n      temperature: 20 + Math.random() * 10,\n      humidity: 50 + Math.random() * 30,\n      battery: 30 + Math.random() * 70,\n      ph: 6 + Math.random() * 2,\n      throughput: 1 + Math.random() * 4,\n      latency: 20 + Math.random() * 80,\n      connections: Math.floor(5 + Math.random() * 20),\n      resolution: ['720p', '1080p', '4K'][i % 3],\n      framerate: [24, 30, 60][i % 3]\n    }\n  }))\n])\n\n// 设备配置\nconst showConfig = ref(false)\nconst configForm = ref(null)\nconst deviceConfig = ref({\n  sampleRate: 60,\n  thresholds: {\n    temperature: { min: 20, max: 30 },\n    humidity: { min: 40, max: 80 },\n    ph: { min: 6.5, max: 7.5 }\n  },\n  autoCalibration: true,\n  storage: 'local'\n})\n\nconst configRules = {\n  sampleRate: [\n    { required: true, message: '请输入采集频率', trigger: 'blur' },\n    { type: 'number', min: 1, max: 3600, message: '频率范围1-3600秒', trigger: 'blur' }\n  ]\n}\n\n// 历史数据\nconst historyDateRange = ref([])\nconst selectedMetrics = ref([])\nconst availableMetrics = [\n  { label: '温度', value: 'temperature' },\n  { label: '湿度', value: 'humidity' },\n  { label: 'PH值', value: 'ph' },\n  { label: '电量', value: 'battery' }\n]\n\nconst dateShortcuts = [\n  {\n    text: '最近一天',\n    value: () => {\n      const end = new Date()\n      const start = new Date()\n      start.setTime(start.getTime() - 3600 * 1000 * 24)\n      return [start, end]\n    }\n  },\n  {\n    text: '最近一周',\n    value: () => {\n      const end = new Date()\n      const start = new Date()\n      start.setTime(start.getTime() - 3600 * 1000 * 24 * 7)\n      return [start, end]\n    }\n  }\n]\n\n// 计算属性\nconst currentDevice = computed(() => {\n  return deviceList.value.find(d => d.name === selectedDevice.value)\n})\n\nconst unreadAlerts = computed(() => {\n  return alerts.value.filter(a => a.unread)\n})\n\n// 方法\nconst selectDevice = (device) => {\n  selectedDevice.value = device.name\n  updateDeviceCharts()\n}\n\nconst toggleAutoRefresh = (value) => {\n  if (value) {\n    startAutoRefresh()\n  } else {\n    stopAutoRefresh()\n  }\n}\n\nconst startAutoRefresh = () => {\n  if (refreshTimer) {\n    clearInterval(refreshTimer)\n  }\n  refreshTimer = setInterval(() => {\n    refreshData()\n  }, refreshInterval.value * 1000)\n}\n\nconst stopAutoRefresh = () => {\n  if (refreshTimer) {\n    clearInterval(refreshTimer)\n    refreshTimer = null\n  }\n}\n\nconst refreshData = async () => {\n  loading.value = true\n  try {\n    await updateDeviceData()\n    if (selectedDevice.value) {\n      updateDeviceCharts()\n    }\n  } catch (error) {\n    console.error('Failed to refresh data:', error)\n    ElMessage.error('刷新数据失败')\n  } finally {\n    loading.value = false\n  }\n}\n\nconst getMetricLabel = (key) => {\n  const labels = {\n    temperature: '温度',\n    humidity: '湿度',\n    ph: 'PH值',\n    battery: '电量',\n    throughput: '流量',\n    latency: '延迟',\n    connections: '连接数',\n    framerate: '帧率',\n    resolution: '分辨率'\n  }\n  return labels[key] || key\n}\n\nconst getMetricUnit = (key) => {\n  const units = {\n    temperature: '°C',\n    humidity: '%',\n    ph: '',\n    battery: '%',\n    throughput: 'MB/s',\n    latency: 'ms',\n    connections: '',\n    framerate: 'fps',\n    resolution: ''\n  }\n  return units[key] || ''\n}\n\nconst formatMetricValue = (value, key) => {\n  if (typeof value === 'number') {\n    return `${formatNumber(value)}${getMetricUnit(key)}`\n  }\n  return value\n}\n\nconst getMetricStatus = (value, key) => {\n  const thresholds = deviceConfig.value.thresholds[key]\n  if (!thresholds) return { type: '', effect: 'plain', text: '正常' }\n\n  if (value < thresholds.min) {\n    return { type: 'danger', effect: 'dark', text: '过低' }\n  }\n  if (value > thresholds.max) {\n    return { type: 'danger', effect: 'dark', text: '过高' }\n  }\n  return { type: 'success', effect: 'dark', text: '正常' }\n}\n\nconst getMetricChartOptions = (key) => {\n  return {\n    grid: {\n      top: 20,\n      right: 20,\n      bottom: 20,\n      left: 50\n    },\n    xAxis: {\n      type: 'time',\n      axisLine: { lineStyle: { color: '#fff' } }\n    },\n    yAxis: {\n      type: 'value',\n      axisLine: { lineStyle: { color: '#fff' } },\n      splitLine: { lineStyle: { color: 'rgba(255,255,255,0.1)' } }\n    },\n    series: [\n      {\n        type: 'line',\n        data: generateMetricData(key),\n        smooth: true,\n        showSymbol: false,\n        lineStyle: { width: 2 },\n        areaStyle: {\n          opacity: 0.1\n        }\n      }\n    ]\n  }\n}\n\nconst generateMetricData = (key) => {\n  const now = new Date()\n  const data = []\n  for (let i = 0; i < 60; i++) {\n    const time = new Date(now - (59 - i) * 60000)\n    const baseValue = currentDevice.value.metrics[key]\n    const value = typeof baseValue === 'number' \n      ? baseValue + (Math.random() * 2 - 1)\n      : baseValue\n    data.push([time.getTime(), value])\n  }\n  return data\n}\n\nconst loadHistoryData = async () => {\n  if (!historyDateRange.value || !selectedDevice.value) return\n  \n  loading.value = true\n  try {\n    // TODO: 从后端获取历史数据\n    const response = await store.dispatch('device/fetchHistory', {\n      deviceId: selectedDevice.value,\n      startTime: historyDateRange.value[0],\n      endTime: historyDateRange.value[1],\n      metrics: selectedMetrics.value\n    })\n    \n    // 更新图表\n    updateHistoryChart(response)\n  } catch (error) {\n    console.error('Failed to load history data:', error)\n    ElMessage.error('获取历史数据失败')\n  } finally {\n    loading.value = false\n  }\n}\n\nconst updateHistoryChart = (data) => {\n  // TODO: 更新历史数据图表\n}\n\nconst viewHistory = (device) => {\n  selectDevice(device)\n  showDetail.value = true\n  nextTick(() => {\n    // 切换到历史数据标签\n    // TODO: 实现标签切换\n  })\n}\n\nconst configDevice = (device) => {\n  selectDevice(device)\n  showConfig.value = true\n}\n\nconst saveConfig = async () => {\n  if (!configForm.value) return\n  \n  try {\n    await configForm.value.validate()\n    // TODO: 保存设备配置\n    showConfig.value = false\n    ElMessage.success('配置保存成功')\n  } catch (error) {\n    console.error('Config validation failed:', error)\n  }\n}\n\n// 生命周期钩子\nonMounted(() => {\n  initWebSocket()\n  initData()\n  if (autoRefresh.value) {\n    startAutoRefresh()\n  }\n})\n\nonUnmounted(() => {\n  if (ws.value) {\n    ws.value.close()\n    ws.value = null\n  }\n  if (wsReconnectTimer.value) {\n    clearTimeout(wsReconnectTimer.value)\n  }\n  stopAutoRefresh()\n})\n\n// keep-alive 支持\nonActivated(() => {\n  initWebSocket()\n  initData()\n})\n\nonDeactivated(() => {\n  if (ws.value) {\n    ws.value.close()\n    ws.value = null\n  }\n})\n\n  // 设备统计数据\nconst deviceStats = ref({\n  online: deviceList.value.filter(d => d.status === 'online').length,\n  offline: deviceList.value.filter(d => d.status === 'offline').length,\n  error: deviceList.value.filter(d => d.status === 'error').length,\n  total: deviceList.value.length\n})\n\n\n\n// 告警数据\nconst alerts = ref(\n  Array.from({ length: 10 }, (_, i) => ({\n    id: i + 1,\n    title: ['PH值超出正常范围', '设备离线', '数据传输异常'][i % 3],\n    device: `设备-${i + 1}`,\n    time: `${(i + 1) * 5} 分钟前`,\n    level: ['error', 'warning', 'info'][i % 3],\n    unread: i < 3\n  }))\n)\n\n// 搜索和筛选\nconst searchQuery = ref('')\nconst filterStatus = ref('')\nconst filterType = ref('')\n\n// 优化的计算属性\nconst filteredDeviceList = computed(() => {\n  if (!deviceList.value) return []\n  \n  const query = searchQuery.value.toLowerCase()\n  const status = filterStatus.value\n  const type = filterType.value\n  \n  return deviceList.value.filter(device => {\n    if (status && device.status !== status) return false\n    if (type && device.type !== type) return false\n    if (!query) return true\n    \n    return device.name.toLowerCase().includes(query) ||\n           device.type.toLowerCase().includes(query) ||\n           device.location.toLowerCase().includes(query)\n  })\n})\n\n// 分页\nconst pageSize = ref(12)\nconst currentPage = ref(1)\n\nconst totalPages = computed(() => Math.ceil(filteredDeviceList.value.length / pageSize.value))\n\nconst paginatedDeviceList = computed(() => {\n  const start = (currentPage.value - 1) * pageSize.value\n  return filteredDeviceList.value.slice(start, start + pageSize.value)\n})\n\nfunction handlePageChange(page) {\n  currentPage.value = page\n}\n\n// 设备详情相关\nconst showDetail = ref(false)\nconst deviceAlerts = ref([\n  { time: '2024-03-15 14:20:00', title: 'PH值超出正常范围', level: 'error', status: '未处理' },\n  { time: '2024-03-15 10:15:00', title: '设备离线', level: 'warning', status: '已处理' },\n  { time: '2024-03-14 16:30:00', title: '数据异常', level: 'info', status: '已处理' }\n])\n\n// 新增设备相关\nconst showAddDeviceDialog = ref(false)\nconst deviceForm = ref(null)\nconst newDevice = ref({\n  name: '',\n  type: '',\n  location: ''\n})\n\nconst deviceRules = {\n  name: [\n    { required: true, message: '请输入设备名称', trigger: 'blur' },\n    { min: 2, max: 20, message: '长度在 2 到 20 个字符', trigger: 'blur' }\n  ],\n  type: [\n    { required: true, message: '请选择设备类型', trigger: 'change' }\n  ],\n  location: [\n    { required: true, message: '请输入安装位置', trigger: 'blur' }\n  ]\n}\n\n// 图表相关\nconst selectedDevice = ref('')\n/* 实时数据图表配置 */\nconst chartOptions = computed(() => {\n  const device = currentDevice.value || deviceList.value[0]\n  if (!device) return {}\n\n  return {\n    backgroundColor: 'transparent',\n    tooltip: {\n      trigger: 'axis'\n    },\n    grid: {\n      top: 40,\n      right: 20,\n      bottom: 20,\n      left: 50\n    },\n    legend: {\n      data: ['温度', '湿度', 'PH值'],\n      textStyle: { color: '#fff' }\n    },\n    xAxis: {\n      type: 'time',\n      axisLine: { lineStyle: { color: '#fff' } },\n      splitLine: { show: false }\n    },\n    yAxis: {\n      type: 'value',\n      axisLine: { lineStyle: { color: '#fff' } },\n      splitLine: { lineStyle: { color: 'rgba(255,255,255,0.1)' } }\n    },\n    series: [\n      {\n        name: '温度',\n        type: 'line',\n        smooth: true,\n        showSymbol: false,\n        data: generateTimeData(25, 2)\n      },\n      {\n        name: '湿度',\n        type: 'line',\n        smooth: true,\n        showSymbol: false,\n        data: generateTimeData(60, 5)\n      },\n      {\n        name: 'PH值',\n        type: 'line',\n        smooth: true,\n        showSymbol: false,\n        data: generateTimeData(7, 0.5)\n      }\n    ]\n  }\n})\n\nconst historyChartOptions = computed(() => ({\n  backgroundColor: 'transparent',\n  title: {\n    text: '历史数据趋势',\n    textStyle: { color: '#fff' }\n  },\n  tooltip: {\n    trigger: 'axis',\n    axisPointer: {\n      type: 'shadow'\n    }\n  },\n  legend: {\n    data: ['温度', '湿度', 'PH值'],\n    textStyle: { color: '#fff' },\n    top: 30\n  },\n  grid: {\n    top: 80,\n    right: 20,\n    bottom: 30,\n    left: 50,\n    containLabel: true\n  },\n  xAxis: {\n    type: 'category',\n    data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日'],\n    axisLabel: { color: '#fff' },\n    axisLine: {\n      lineStyle: {\n        color: '#8c8c8c'\n      }\n    }\n  },\n  yAxis: {\n    type: 'value',\n    axisLabel: { color: '#fff' },\n    splitLine: {\n      lineStyle: {\n        color: 'rgba(255, 255, 255, 0.1)'\n      }\n    },\n    axisLine: {\n      lineStyle: {\n        color: '#8c8c8c'\n      }\n    }\n  },\n  series: [\n    {\n      name: '温度',\n      type: 'bar',\n      data: [23, 24, 25, 23, 24, 26, 25],\n      itemStyle: {\n        color: {\n          type: 'linear',\n          x: 0,\n          y: 0,\n          x2: 0,\n          y2: 1,\n          colorStops: [{\n            offset: 0,\n            color: '#1890ff'\n          }, {\n            offset: 1,\n            color: 'rgba(24, 144, 255, 0.3)'\n          }]\n        }\n      }\n    },\n    {\n      name: '湿度',\n      type: 'bar',\n      data: [65, 63, 68, 64, 62, 65, 66],\n      itemStyle: {\n        color: {\n          type: 'linear',\n          x: 0,\n          y: 0,\n          x2: 0,\n          y2: 1,\n          colorStops: [{\n            offset: 0,\n            color: '#52c41a'\n          }, {\n            offset: 1,\n            color: 'rgba(82, 196, 26, 0.3)'\n          }]\n        }\n      }\n    },\n    {\n      name: 'PH值',\n      type: 'bar',\n      data: [7.1, 7.0, 7.2, 7.1, 7.0, 7.1, 7.2],\n      itemStyle: {\n        color: {\n          type: 'linear',\n          x: 0,\n          y: 0,\n          x2: 0,\n          y2: 1,\n          colorStops: [{\n            offset: 0,\n            color: '#faad14'\n          }, {\n            offset: 1,\n            color: 'rgba(250, 173, 20, 0.3)'\n          }]\n        }\n      }\n    }\n  ]\n}))\n\n// 生成时间序列数据\nfunction generateTimeData(baseValue, variance) {\n  const now = new Date()\n  const data = []\n  for (let i = 0; i < 60; i++) {\n    const time = new Date(now - (59 - i) * 60000)\n    data.push([\n      time.toISOString(),\n      +(baseValue + (Math.random() * 2 - 1) * variance).toFixed(1)\n    ])\n  }\n  return data\n}\n\n// 优化的设备操作\nconst viewDetail = async (device) => {\n  currentDevice.value = device;\n  showDetail.value = true;\n\n  try {\n    // 预加载设备历史数据\n    const history = await store.dispatch('device/fetchDeviceHistory', device.name);\n    await nextTick();\n    // 可以在这里更新依赖于历史数据的图表或组件\n  } catch (error) {\n    ElMessage.error('获取设备历史数据失败');\n  }\n};\n\nconst deleteDevice = async (device) => {\n  try {\n    await ElMessageBox.confirm(\n      `您正在尝试删除设备：<strong>${device.name}</strong><br/>此操作将永久删除该设备及其所有关联数据，且无法恢复。`,\n      '删除确认',\n      {\n        type: 'warning',\n        confirmButtonText: '确定删除',\n        cancelButtonText: '取消',\n        dangerouslyUseHTMLString: true,\n      }\n    );\n    \n    loading.value = true;\n    await store.dispatch('device/deleteDevice', device.name);\n    \n    // 更新本地数据和缓存\n    deviceList.value = deviceList.value.filter(d => d.name !== device.name);\n    await cache.set(DEVICE_CACHE_KEY, deviceList.value, DEVICE_CACHE_EXPIRY);\n    \n    ElMessage.success('设备已删除');\n  } catch (error) {\n    if (error !== 'cancel') {\n      ElMessage.error('删除设备失败');\n      console.error('Delete device error:', error);\n    }\n  } finally {\n    loading.value = false;\n  }\n};\n\n// 优化的告警处理\nconst handleAlert = async (alert) => {\n  const device = deviceList.value.find(d => d.name === alert.device);\n  if (device) {\n    viewDetail(device);\n  }\n\n  if (alert.unread) {\n    // 使用 nextTick 确保在 DOM 更新后再标记为已读\n    await nextTick();\n    \n    const index = alerts.value.findIndex(a => a.id === alert.id);\n    if (index !== -1 && alerts.value[index].unread) {\n      alerts.value[index].unread = false;\n      try {\n        await store.dispatch('alert/markAsRead', alert.id);\n      } catch (error) {\n        // 如果标记已读失败，将状态改回未读\n        alerts.value[index].unread = true;\n        console.error('Failed to mark alert as read:', error);\n      }\n    }\n  }\n};\n\nfunction showAddDevice() {\n  showAddDeviceDialog.value = true\n}\n\nfunction submitNewDevice() {\n  deviceForm.value?.validate((valid) => {\n    if (valid) {\n      const device = {\n        ...newDevice.value,\n        status: 'online',\n        latestData: '暂无数据',\n        lastUpdate: new Date().toLocaleString()\n      }\n      deviceList.value.push(device)\n      showAddDeviceDialog.value = false\n      ElMessage.success('添加成功')\n      newDevice.value = {\n        name: '',\n        type: '',\n        location: ''\n      }\n    }\n  })\n}\n\n// Helper functions\nfunction getDeviceIcon(type) {\n  const icons = {\n    '温湿度': 'Temperature',\n    'PH值': 'Experiment',\n    '视频监控': 'VideoCamera',\n    '数据网关': 'Connection'\n  };\n  return icons[type] || 'Monitor';\n}\n\nfunction getDeviceTagType(type) {\n  const types = {\n    '温湿度': '',\n    'PH值': 'warning',\n    '视频监控': 'success',\n    '数据网关': 'info'\n  };\n  return types[type] || 'info';\n}\n\nfunction getStatusText(status) {\n  const statuses = {\n    online: '在线',\n    offline: '离线',\n    error: '异常'\n  };\n  return statuses[status] || status;\n}\n\nfunction getAlertTagType(level) {\n  const types = {\n    error: 'danger',\n    warning: 'warning',\n    info: 'info'\n  };\n  return types[level] || 'info';\n}\n\n\n// 状态选项\nconst statusOptions = [\n  { label: '全部', value: '' },\n  { label: '在线', value: 'online' },\n  { label: '离线', value: 'offline' },\n  { label: '异常', value: 'error' }\n]\n\n// 类型选项\nconst typeOptions = [\n  { label: '全部', value: '' },\n  { label: '温湿度传感器', value: '温湿度' },\n  { label: 'PH值传感器', value: 'PH值' },\n  { label: '视频监控', value: '视频监控' },\n  { label: '数据网关', value: '数据网关' }\n]\n\n// 高级搜索\nconst showAdvancedSearchDialog = ref(false)\nconst advancedSearch = ref({\n  name: '',\n  type: '',\n  status: '',\n  location: '',\n  updateTime: []\n})\n\n// Excel导出\nconst exporting = ref(false)\n\n// 导出数据\nconst exportData = async () => {\n  try {\n    exporting.value = true\n    await exportToExcel(deviceList.value, {\n      filename: `设备列表_${new Date().toLocaleDateString()}`,\n      sheets: [{\n        name: '设备列表',\n        columns: [\n          { header: '设备名称', key: 'name' },\n          { header: '设备类型', key: 'type' },\n          { header: '状态', key: 'status' },\n          { header: '位置', key: 'location' },\n          { header: '最近数据', key: 'latestData' },\n          { header: '最后更新', key: 'lastUpdate' }\n        ]\n      }]\n    })\n    ElMessage.success('导出成功')\n  } catch (error) {\n    ElMessage.error('导出失败')\n    console.error('Export failed:', error)\n  } finally {\n    exporting.value = false\n  }\n}\n\n// 显示高级搜索\nconst showAdvancedSearch = () => {\n  showAdvancedSearchDialog.value = true\n}\n\n// 重置高级搜索\nconst resetAdvancedSearch = () => {\n  advancedSearch.value = {\n    name: '',\n    type: '',\n    status: '',\n    location: '',\n    updateTime: []\n  }\n}\n\n// 应用高级搜索\nconst applyAdvancedSearch = () => {\n  searchQuery.value = advancedSearch.value.name\n  filterType.value = advancedSearch.value.type\n  filterStatus.value = advancedSearch.value.status\n  showAdvancedSearchDialog.value = false\n}\n\n// 统计卡片相关方法\nconst getStatTooltip = (key) => {\n  const tooltips = {\n    online: '当前在线的设备数量',\n    offline: '当前离线的设备数量',\n    error: '存在异常的设备数量',\n    total: '系统中的设备总数'\n  }\n  return tooltips[key]\n}\n\nconst getStatLabel = (key) => {\n  const labels = {\n    online: '在线设备',\n    offline: '离线设备',\n    error: '异常设备',\n    total: '设备总数'\n  }\n  return labels[key]\n}\n\nconst getStatIcon = (key) => {\n  const icons = {\n    online: Monitor,\n    offline: Connection,\n    error: Warning,\n    total: Cpu\n  }\n  return icons[key]\n}\n\nconst getTrendClass = (key) => {\n  const trends = {\n    online: 'up',\n    offline: 'down',\n    error: '',\n    total: 'up'\n  }\n  return trends[key]\n}\n\nconst getTrendIcon = (key) => {\n  const trends = {\n    online: ArrowUp,\n    offline: ArrowDown,\n    error: InfoFilled,\n    total: ArrowUp\n  }\n  return trends[key]\n}\n\nconst getTrendText = (key) => {\n  const texts = {\n    online: '2台',\n    offline: '1台',\n    error: '无变化',\n    total: '1台'\n  }\n  return texts[key]\n}\n\n// 预测指标选择\nconst predictionMetric = ref('temperature')\n\n// 预测数据表格数据\nconst predictionTableData = computed(() => {\n  const data = []\n  for (let i = 0; i < 24; i++) {\n    const time = new Date(Date.now() + i * 3600000)\n    const value = predictionData.value[predictionMetric.value][i]\n    data.push({\n      time: time.toISOString(),\n      predicted: value ? `预测值: ${value.toFixed(1)}` : '无数据'\n    })\n  }\n  return data\n})\n\n// 预测数据表格标签\nconst metricLabel = computed(() => {\n  return getMetricLabel(predictionMetric.value)\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.monitoring-view {\n  padding: 16px; /* 缩小整体左右留白 */\n  height: 100%;\n  overflow-y: auto;\n  /* 与主布局统一的深蓝渐变背景 */\n  background: linear-gradient(180deg, #001529 0%, #002140 100%);\n  color: #fff;\n  /* 添加滚动条样式 */\n  &::-webkit-scrollbar {\n    width: 8px;\n  }\n  \n  &::-webkit-scrollbar-thumb {\n    background: rgba(255, 255, 255, 0.2);\n    border-radius: 4px;\n    \n    &:hover {\n      background: rgba(255, 255, 255, 0.3);\n    }\n  }\n  \n  &::-webkit-scrollbar-track {\n    background: rgba(0, 0, 0, 0.1);\n  }\n\n  // 顶部统计卡片区域\n  .stats-section {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));\n    gap: 20px;\n    margin-bottom: 24px;\n\n    .stat-card {\n      background: rgba(255, 255, 255, 0.05);\n      backdrop-filter: blur(10px);\n      border: 1px solid rgba(255, 255, 255, 0.1);\n      border-radius: 12px;\n  padding: 20px;\n      transition: all 0.3s ease;\n      cursor: pointer;\n\n      &:hover {\n        transform: translateY(-2px);\n        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\n        background: rgba(255, 255, 255, 0.08);\n      }\n\n      .stat-icon {\n        font-size: 24px;\n        margin-bottom: 12px;\n        color: #40a9ff;\n      }\n\n      .stat-content {\n        .stat-value {\n          font-size: 28px;\n          font-weight: 600;\n          margin-bottom: 8px;\n          background: linear-gradient(45deg, #40a9ff, #69c0ff);\n          -webkit-background-clip: text;\n          -webkit-text-fill-color: transparent;\n        }\n\n        .stat-label {\n          color: rgba(255, 255, 255, 0.65);\n          font-size: 14px;\n        }\n      }\n\n      .stat-trend {\n  display: flex;\n        align-items: center;\n        gap: 4px;\n        margin-top: 12px;\n        font-size: 14px;\n\n        &.up {\n          color: #52c41a;\n        }\n\n        &.down {\n          color: #ff4d4f;\n        }\n      }\n\n      &.online { .stat-icon { color: #52c41a; } }\n      &.offline { .stat-icon { color: #ff4d4f; } }\n      &.error { .stat-icon { color: #faad14; } }\n      &.total { .stat-icon { color: #40a9ff; } }\n    }\n  }\n\n  // 工具栏\n  .toolbar {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 24px;\n    padding: 16px;\n    background: rgba(255, 255, 255, 0.05);\n    border-radius: 12px;\n    backdrop-filter: blur(10px);\n\n    .toolbar-left {\n      display: flex;\n      gap: 16px;\n      align-items: center;\n\n      .el-button-group {\n        .el-button {\n          background: rgba(255, 255, 255, 0.08);\n          border-color: rgba(255, 255, 255, 0.1);\n          color: rgba(255, 255, 255, 0.85);\n\n          &:hover {\n            background: rgba(255, 255, 255, 0.12);\n          }\n\n          &.active {\n            background: #40a9ff;\n            color: #fff;\n          }\n        }\n      }\n    }\n\n    .toolbar-right {\n      display: flex;\n      gap: 16px;\n      align-items: center;\n\n      .el-input {\n        width: 240px;\n        .el-input__wrapper {\n          background: rgba(255, 255, 255, 0.08);\n        }\n      }\n\n      .el-select {\n        width: 160px;\n        .el-input__wrapper {\n          background: rgba(255, 255, 255, 0.08);\n        }\n      }\n    }\n  }\n\n  // 主要内容区域\n  .main-content {\n    display: grid;\n    grid-template-columns: 1fr 360px;\n    gap: 24px;\n    margin-bottom: 24px;\n    overflow: visible;\n  }\n\n  .content-main {\n    /* 横向排布设备管理与告警 */\n    display: flex;\n    flex-direction: row;\n    gap: 12px; /* 减少面板间距 */\n  }\n\n  .content-side {\n    width: auto; /* 让其根据内容伸缩 */\n  }\n\n  /* 取消之前隐藏其他 side-panel 的样式 */\n  .content-side .side-panel {\n    display: block;\n  }\n\n  /* 恢复 prediction-panel 子模块显示 */\n  .prediction-panel .prediction-chart,\n  .prediction-panel .prediction-settings,\n  .prediction-panel .prediction-metrics,\n  .prediction-panel .prediction-table {\n    display: block !important;\n  }\n\n  /* 调整历史影像区域高度为较小尺寸 */\n  .prediction-panel .timeline-section .timeline-wrapper {\n    height: 300px;\n  }\n}\n\n.stats-section {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 20px;\n  margin-bottom: 20px;\n}\n\n.stat-card {\n  background: rgba(255, 255, 255, 0.04);\n  border-radius: 8px;\n  padding: 20px;\n  display: flex;\n  align-items: center;\n  gap: 16px;\n  transition: all 0.3s ease;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  }\n\n  .stat-icon {\n    width: 48px;\n    height: 48px;\n    border-radius: 8px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 24px;\n  }\n\n  .stat-content {\n    flex: 1;\n\n    .stat-value {\n      font-size: 24px;\n      font-weight: 600;\n      margin-bottom: 4px;\n    }\n\n    .stat-label {\n      color: rgba(255, 255, 255, 0.65);\n      font-size: 14px;\n    }\n  }\n\n  .stat-trend {\n    display: flex;\n    align-items: center;\n    gap: 4px;\n    font-size: 14px;\n\n    &.up {\n      color: #52c41a;\n    }\n\n    &.down {\n      color: #ff4d4f;\n    }\n  }\n\n  &.online .stat-icon {\n    background: rgba(82, 196, 26, 0.15);\n    color: #52c41a;\n  }\n\n  &.offline .stat-icon {\n    background: rgba(255, 77, 79, 0.15);\n    color: #ff4d4f;\n  }\n\n  &.error .stat-icon {\n    background: rgba(250, 173, 20, 0.15);\n    color: #faad14;\n  }\n\n  &.total .stat-icon {\n    background: rgba(24, 144, 255, 0.15);\n    color: #1890ff;\n  }\n}\n\n.main-content {\n  display: flex;\n  gap: 20px;\n  flex: 1;\n  min-height: 0;\n}\n\n.content-main {\n  flex: 1;\n  min-width: 0;\n}\n\n.content-side {\n  width: auto; /* 让其根据内容伸缩 */\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.panel {\n  background: rgba(255, 255, 255, 0.04);\n  border-radius: 8px;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\n.panel-header {\n  padding: 16px 20px;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.08);\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  h3 {\n    margin: 0;\n    font-size: 16px;\n    font-weight: 500;\n  }\n}\n\n.device-grid {\n  height: calc(100vh - 320px);\n  overflow: hidden;\n  padding: 0 12px;\n  \n  :deep(.el-scrollbar__wrap) {\n    overflow-x: hidden;\n  }\n  \n  :deep(.virtual-list-container) {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n    gap: 16px;\n    padding: 16px;\n  }\n}\n\n.device-card {\n  background: rgba(255, 255, 255, 0.04);\n  border-radius: 8px;\n  padding: 16px;\n  transition: all 0.3s ease;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  }\n\n  &.online {\n    border-left: 4px solid #52c41a;\n  }\n\n  &.offline {\n    border-left: 4px solid #ff4d4f;\n  }\n\n  &.error {\n    border-left: 4px solid #faad14;\n  }\n}\n\n.device-card-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 12px;\n}\n\n.device-icon {\n  width: 40px;\n  height: 40px;\n  border-radius: 8px;\n  background: rgba(255, 255, 255, 0.04);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 20px;\n}\n\n.device-status {\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  font-size: 14px;\n  color: rgba(255, 255, 255, 0.65);\n\n  .status-dot {\n    width: 8px;\n    height: 8px;\n    border-radius: 50%;\n  }\n\n  &.online .status-dot {\n    background: #52c41a;\n  }\n\n  &.offline .status-dot {\n    background: #ff4d4f;\n  }\n\n  &.error .status-dot {\n    background: #faad14;\n  }\n}\n\n.device-card-content {\n  margin-bottom: 12px;\n\n  .device-name {\n    font-size: 16px;\n    font-weight: 500;\n    margin-bottom: 8px;\n  }\n\n  .device-type {\n    margin-bottom: 8px;\n  }\n\n  .device-location {\n    color: rgba(255, 255, 255, 0.65);\n    font-size: 14px;\n    margin-bottom: 8px;\n  }\n\n  .device-data {\n    font-size: 14px;\n    color: rgba(255, 255, 255, 0.85);\n  }\n}\n\n.device-card-footer {\n  display: flex;\n  justify-content: flex-end;\n}\n\n.alert-list {\n  padding: 16px;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n}\n\n.alert-item {\n  background: rgba(255, 255, 255, 0.04);\n  border-radius: 6px;\n  padding: 12px;\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n\n  &:hover {\n    background: rgba(255, 255, 255, 0.08);\n  }\n\n  &.unread {\n    border-left: 3px solid #1890ff;\n  }\n\n  &.error {\n    border-left: 3px solid #ff4d4f;\n  }\n\n  &.warning {\n    border-left: 3px solid #faad14;\n  }\n\n  &.info {\n    border-left: 3px solid #1890ff;\n  }\n}\n\n.alert-icon {\n  width: 32px;\n  height: 32px;\n  border-radius: 6px;\n  background: rgba(255, 255, 255, 0.04);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 18px;\n}\n\n.alert-content {\n  flex: 1;\n  min-width: 0;\n\n  .alert-title {\n    font-size: 14px;\n    margin-bottom: 4px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n\n  .alert-info {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    font-size: 12px;\n    color: rgba(255, 255, 255, 0.45);\n\n    .alert-device {\n      color: rgba(255, 255, 255, 0.65);\n    }\n  }\n}\n\n.chart-container {\n  flex: 1;\n  min-height: 300px;\n  padding: 0 20px 20px;\n}\n\n:deep(.el-table) {\n  background: transparent;\n  \n  th {\n    background: #1a1a1a !important;\n    border-bottom: 1px solid rgba(255, 255, 255, 0.08);\n  }\n\n  td {\n    background: transparent;\n    border-bottom: 1px solid rgba(255, 255, 255, 0.04);\n  }\n\n  tr {\n    background: transparent;\n\n    &:hover > td {\n      background: rgba(255, 255, 255, 0.04);\n    }\n  }\n}\n\n.header-left {\n  display: flex;\n  align-items: center;\n  gap: 16px;\n}\n\n.header-right {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n\n  .el-input {\n    width: 200px;\n  }\n\n  .el-select {\n    width: 120px;\n  }\n}\n\n:deep(.el-button) {\n  &.active {\n    background: #1890ff;\n    border-color: #1890ff;\n    color: #fff;\n  }\n}\n\n.toolbar {\n  padding: 16px 20px;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.08);\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 20px;\n  background: rgba(255, 255, 255, 0.02);\n}\n\n.toolbar-left {\n  display: flex;\n  align-items: center;\n  gap: 16px;\n}\n\n.toolbar-right {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  flex-wrap: wrap;\n}\n\n.view-options {\n  margin-left: 12px;\n}\n\n.select-option {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  .status-dot {\n    width: 8px;\n    height: 8px;\n    border-radius: 50%;\n\n    &.online {\n      background: #52c41a;\n    }\n\n    &.offline {\n      background: #ff4d4f;\n    }\n\n    &.error {\n      background: #faad14;\n    }\n  }\n\n  .el-icon {\n    font-size: 16px;\n  }\n}\n\n:deep(.el-dialog) {\n  background: #1a1a1a;\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2);\n\n  .el-dialog__header {\n    border-bottom: 1px solid rgba(255, 255, 255, 0.08);\n    margin: 0;\n    padding: 20px;\n\n    .el-dialog__title {\n      color: #fff;\n      font-size: 16px;\n      font-weight: 500;\n    }\n  }\n\n  .el-dialog__body {\n    padding: 20px;\n  }\n\n  .el-dialog__footer {\n    border-top: 1px solid rgba(255, 255, 255, 0.08);\n    padding: 20px;\n  }\n}\n\n:deep(.el-form) {\n  .el-form-item__label {\n    color: rgba(255, 255, 255, 0.85);\n  }\n}\n\n:deep(.el-input),\n:deep(.el-select) {\n  .el-input__wrapper {\n    background: rgba(0, 0, 0, 0.2);\n    border: 1px solid rgba(255, 255, 255, 0.1);\n    box-shadow: none;\n\n    &:hover {\n      border-color: #1890ff;\n    }\n\n    &.is-focus {\n      border-color: #1890ff;\n      box-shadow: 0 0 0 1px #1890ff;\n    }\n  }\n\n  .el-input__inner {\n    color: #fff;\n\n    &::placeholder {\n      color: rgba(255, 255, 255, 0.45);\n    }\n  }\n}\n\n:deep(.el-date-editor) {\n  background: rgba(0, 0, 0, 0.2);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  \n  .el-range-input {\n    color: #fff;\n    background: transparent;\n  }\n  \n  .el-range-separator {\n    color: rgba(255, 255, 255, 0.45);\n  }\n}\n\n.virtual-list-container {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 20px;\n  padding: 20px;\n}\n\n.device-list-panel {\n  .device-name-cell {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    \n    .el-icon {\n      font-size: 18px;\n      color: #40a9ff;\n    }\n  }\n\n  .device-info {\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n\n    .info-item {\n      display: flex;\n      align-items: center;\n      gap: 6px;\n      color: rgba(255, 255, 255, 0.65);\n\n      .el-icon {\n        font-size: 16px;\n      }\n    }\n  }\n\n  .device-metrics {\n    margin-top: 12px;\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));\n    gap: 12px;\n\n    .metric-item {\n      background: rgba(0, 0, 0, 0.2);\n      border-radius: 6px;\n      padding: 8px;\n\n      .metric-label {\n        color: rgba(255, 255, 255, 0.45);\n        font-size: 12px;\n        margin-bottom: 4px;\n      }\n\n      .metric-value {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        font-size: 14px;\n\n        .el-tag {\n          margin-left: 8px;\n        }\n      }\n    }\n  }\n}\n\n.realtime-panel {\n  .realtime-content {\n    padding: 20px;\n\n    .selected-device-info {\n      .device-header {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        margin-bottom: 20px;\n\n        .device-basic {\n          display: flex;\n          align-items: center;\n          gap: 12px;\n\n          .el-icon {\n            font-size: 24px;\n            color: #40a9ff;\n          }\n\n          .device-name {\n            font-size: 18px;\n            font-weight: 500;\n          }\n        }\n\n        .device-status {\n          display: flex;\n          align-items: center;\n          gap: 6px;\n          font-size: 14px;\n\n          .status-dot {\n            width: 8px;\n            height: 8px;\n            border-radius: 50%;\n          }\n\n          &.online .status-dot { background: #52c41a; }\n          &.offline .status-dot { background: #ff4d4f; }\n          &.error .status-dot { background: #faad14; }\n        }\n      }\n\n      .device-metrics {\n        display: grid;\n        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n        gap: 20px;\n\n        .metric-card {\n          background: rgba(0, 0, 0, 0.2);\n          border-radius: 8px;\n          padding: 16px;\n\n          .metric-header {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            margin-bottom: 12px;\n\n            .metric-label {\n              color: rgba(255, 255, 255, 0.65);\n              font-size: 14px;\n            }\n          }\n\n          .metric-value {\n            font-size: 24px;\n            font-weight: 600;\n            margin-bottom: 16px;\n          }\n\n          .metric-chart {\n            height: 120px;\n          }\n        }\n      }\n    }\n\n    .no-device-selected {\n      height: 400px;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n  }\n}\n\n.device-detail-dialog {\n  .device-info {\n    .el-descriptions {\n      --el-descriptions-item-bordered-label-background: #1a1a1a;\n      \n      .el-descriptions-item__label {\n        color: rgba(255, 255, 255, 0.85);\n      }\n    }\n  }\n\n  .history-data {\n    .chart-filters {\n      margin-bottom: 20px;\n    }\n\n    .history-chart {\n      height: 400px;\n    }\n  }\n}\n\n.device-config-dialog {\n  .threshold-item {\n    display: flex;\n    align-items: center;\n    gap: 12px;\n    margin-bottom: 12px;\n\n    &:last-child {\n      margin-bottom: 0;\n    }\n\n    .threshold-label {\n      width: 80px;\n    }\n\n    .separator {\n      color: rgba(255, 255, 255, 0.45);\n    }\n\n    .unit {\n      color: rgba(255, 255, 255, 0.45);\n      margin-left: 4px;\n    }\n  }\n}\n\n.device-map {\n  height: 100%;\n  \n  .map-container {\n    height: 100%;\n    background: rgba(0, 0, 0, 0.2);\n    border-radius: 8px;\n  }\n}\n\n.content-side {\n  .side-panel {\n    &.prediction-panel {\n      .prediction-content {\n        .timeline-section {\n          margin: 20px 0;\n          background: rgba(0, 0, 0, 0.2);\n          border-radius: 8px;\n          overflow: hidden;\n          \n          .section-header {\n            padding: 12px 16px;\n            border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n            \n            h4 {\n              margin: 0;\n              font-size: 14px;\n              font-weight: 500;\n              color: rgba(255, 255, 255, 0.85);\n            }\n          }\n          \n          .timeline-wrapper {\n            height: 400px;\n            \n            :deep(.photo-timeline) {\n              height: 100%;\n              background: transparent;\n              \n              .timeline-header {\n                padding: 12px;\n                \n                h2 {\n                  display: none;\n                }\n              }\n              \n              .image-container {\n                height: calc(100% - 120px);\n              }\n              \n              .timeline-slider {\n                padding: 12px;\n              }\n              \n              .timeline-info {\n                padding: 12px;\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\n.prediction-table {\n  margin-top: 20px;\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 8px;\n  padding: 16px;\n\n  :deep(.el-table) {\n    background: transparent;\n    \n    th {\n      background: #1a1a1a !important;\n      border-bottom: 1px solid rgba(255, 255, 255, 0.08);\n    }\n\n    td {\n      background: transparent;\n      border-bottom: 1px solid rgba(255, 255, 255, 0.04);\n    }\n\n    tr {\n      background: transparent;\n\n      &:hover > td {\n        background: rgba(255, 255, 255, 0.04);\n      }\n    }\n  }\n}\n\n/* 让面板无内容时不占用过多空间 */\n.device-list-panel:empty,\n.alert-panel:empty {\n  display: none;\n}\n\n.device-pagination {\n  margin: 12px 0;\n  text-align: center;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}