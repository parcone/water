{"ast":null,"code":"import { ref, onMounted, onBeforeUnmount, watch } from 'vue';\nimport { Loading } from '@element-plus/icons-vue';\nimport * as echarts from 'echarts';\nimport { debounce } from 'lodash-es';\nexport default {\n  name: 'BaseChart',\n  components: {\n    Loading\n  },\n  props: {\n    options: {\n      type: Object,\n      required: true\n    },\n    height: {\n      type: [String, Number],\n      default: '400px'\n    },\n    loading: {\n      type: Boolean,\n      default: false\n    },\n    loadingText: {\n      type: String,\n      default: '加载中...'\n    },\n    emptyText: {\n      type: String,\n      default: '暂无数据'\n    },\n    theme: {\n      type: String,\n      default: ''\n    },\n    autoResize: {\n      type: Boolean,\n      default: true\n    },\n    showEmpty: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: ['chart-ready', 'chart-click', 'chart-error'],\n  setup(props, {\n    emit\n  }) {\n    const chartRef = ref(null);\n    let chart = null;\n\n    // 初始化图表\n    const initChart = () => {\n      if (!chartRef.value) return;\n      try {\n        chart = echarts.init(chartRef.value, props.theme);\n        chart.setOption(props.options);\n\n        // 绑定事件\n        chart.on('click', params => {\n          emit('chart-click', params);\n        });\n        emit('chart-ready', chart);\n      } catch (error) {\n        console.error('Chart initialization error:', error);\n        emit('chart-error', error);\n      }\n    };\n\n    // 更新图表选项\n    const updateChart = () => {\n      if (!chart) return;\n      try {\n        chart.setOption(props.options);\n      } catch (error) {\n        console.error('Chart update error:', error);\n        emit('chart-error', error);\n      }\n    };\n\n    // 调整图表大小\n    const resizeChart = debounce(() => {\n      if (chart) {\n        chart.resize();\n      }\n    }, 100);\n\n    // 监听选项变化\n    watch(() => props.options, () => {\n      updateChart();\n    }, {\n      deep: true\n    });\n\n    // 监听主题变化\n    watch(() => props.theme, () => {\n      if (chart) {\n        chart.dispose();\n        initChart();\n      }\n    });\n    onMounted(() => {\n      initChart();\n      if (props.autoResize) {\n        window.addEventListener('resize', resizeChart);\n      }\n    });\n    onBeforeUnmount(() => {\n      if (props.autoResize) {\n        window.removeEventListener('resize', resizeChart);\n      }\n      if (chart) {\n        chart.dispose();\n        chart = null;\n      }\n    });\n    return {\n      chartRef\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","onBeforeUnmount","watch","Loading","echarts","debounce","name","components","props","options","type","Object","required","height","String","Number","default","loading","Boolean","loadingText","emptyText","theme","autoResize","showEmpty","emits","setup","emit","chartRef","chart","initChart","value","init","setOption","on","params","error","console","updateChart","resizeChart","resize","deep","dispose","window","addEventListener","removeEventListener"],"sources":["D:\\restore\\water-melt\\frontend\\src\\components\\BaseChart.vue"],"sourcesContent":["<template>\r\n  <div\r\n    class=\"base-chart\"\r\n    :class=\"{ loading }\"\r\n    :style=\"{ height: typeof height === 'number' ? `${height}px` : height }\"\r\n  >\r\n    <div ref=\"chartRef\" class=\"chart-container\"></div>\r\n    <div v-if=\"loading\" class=\"chart-loading\">\r\n      <el-icon class=\"loading-icon\" :size=\"32\"><Loading /></el-icon>\r\n      <span class=\"loading-text\">{{ loadingText }}</span>\r\n    </div>\r\n    <div v-if=\"!loading && showEmpty\" class=\"chart-empty\">\r\n      <el-empty :description=\"emptyText\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, onBeforeUnmount, watch } from 'vue'\r\nimport { Loading } from '@element-plus/icons-vue'\r\nimport * as echarts from 'echarts'\r\nimport { debounce } from 'lodash-es'\r\n\r\nexport default {\r\n  name: 'BaseChart',\r\n  components: {\r\n    Loading\r\n  },\r\n  props: {\r\n    options: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    height: {\r\n      type: [String, Number],\r\n      default: '400px'\r\n    },\r\n    loading: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    loadingText: {\r\n      type: String,\r\n      default: '加载中...'\r\n    },\r\n    emptyText: {\r\n      type: String,\r\n      default: '暂无数据'\r\n    },\r\n    theme: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    autoResize: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    showEmpty: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  emits: ['chart-ready', 'chart-click', 'chart-error'],\r\n  setup(props, { emit }) {\r\n    const chartRef = ref(null)\r\n    let chart = null\r\n\r\n    // 初始化图表\r\n    const initChart = () => {\r\n      if (!chartRef.value) return\r\n\r\n      try {\r\n        chart = echarts.init(chartRef.value, props.theme)\r\n        chart.setOption(props.options)\r\n        \r\n        // 绑定事件\r\n        chart.on('click', (params) => {\r\n          emit('chart-click', params)\r\n        })\r\n\r\n        emit('chart-ready', chart)\r\n      } catch (error) {\r\n        console.error('Chart initialization error:', error)\r\n        emit('chart-error', error)\r\n      }\r\n    }\r\n\r\n    // 更新图表选项\r\n    const updateChart = () => {\r\n      if (!chart) return\r\n\r\n      try {\r\n        chart.setOption(props.options)\r\n      } catch (error) {\r\n        console.error('Chart update error:', error)\r\n        emit('chart-error', error)\r\n      }\r\n    }\r\n\r\n    // 调整图表大小\r\n    const resizeChart = debounce(() => {\r\n      if (chart) {\r\n        chart.resize()\r\n      }\r\n    }, 100)\r\n\r\n    // 监听选项变化\r\n    watch(() => props.options, () => {\r\n      updateChart()\r\n    }, { deep: true })\r\n\r\n    // 监听主题变化\r\n    watch(() => props.theme, () => {\r\n      if (chart) {\r\n        chart.dispose()\r\n        initChart()\r\n      }\r\n    })\r\n\r\n    onMounted(() => {\r\n      initChart()\r\n      if (props.autoResize) {\r\n        window.addEventListener('resize', resizeChart)\r\n      }\r\n    })\r\n\r\n    onBeforeUnmount(() => {\r\n      if (props.autoResize) {\r\n        window.removeEventListener('resize', resizeChart)\r\n      }\r\n      if (chart) {\r\n        chart.dispose()\r\n        chart = null\r\n      }\r\n    })\r\n\r\n    return {\r\n      chartRef\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.base-chart {\r\n  position: relative;\r\n  width: 100%;\r\n  min-height: 200px;\r\n\r\n  .chart-container {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  .chart-loading {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    gap: $spacing-sm;\r\n\r\n    .loading-icon {\r\n      animation: rotate 1s linear infinite;\r\n      color: $primary-color;\r\n    }\r\n\r\n    .loading-text {\r\n      color: $text-secondary;\r\n      font-size: $font-size-base;\r\n    }\r\n  }\r\n\r\n  .chart-empty {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n  }\r\n}\r\n\r\n@keyframes rotate {\r\n  from { transform: rotate(0deg); }\r\n  to { transform: rotate(360deg); }\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}